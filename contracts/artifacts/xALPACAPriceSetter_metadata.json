{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "xALPACAPriceSetter_Unauthorize",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_priceSetter",
						"type": "address"
					}
				],
				"name": "LogSetPriceSetter",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_xALPACAValue",
						"type": "uint256"
					}
				],
				"name": "LogSetValueFromTWAP",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "TWAPOracle",
				"outputs": [
					{
						"internalType": "contract ITWAPOracle",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "alpaca",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IxALPACACreditor",
						"name": "_xALPACACreditor",
						"type": "address"
					},
					{
						"internalType": "contract ITWAPOracle",
						"name": "_TWAPOracle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_alpaca",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "priceSetter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_priceSetter",
						"type": "address"
					}
				],
				"name": "setPriceSetter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "setValueFromTWAP",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "xALPACACreditor",
				"outputs": [
					{
						"internalType": "contract IxALPACACreditor",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"initialize(address,address,address)": {
					"params": {
						"_TWAPOracle": "TWAPOracle",
						"_alpaca": "Contract's address of ALPACA Token",
						"_xALPACACreditor": "xALPACreditor"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "xALPACAPriceSetter - Being setter of xALPACACreditor",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"initialize(address,address,address)": {
					"notice": "Initialize xALPACAPriceSetter"
				},
				"setValueFromTWAP()": {
					"notice": "Set ALPACA Value (TWAP) as xALPACA Value"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/xALPACAPriceSetter.sol": "xALPACAPriceSetter"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
			"license": "MIT",
			"urls": [
				"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
				"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba",
			"license": "MIT",
			"urls": [
				"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8",
				"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
			"license": "MIT",
			"urls": [
				"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
				"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
				"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
			]
		},
		"contracts/interfaces/ITWAPOracle.sol": {
			"keccak256": "0x2ce5968e52ea2a2d9375369d1741e4bb62c1c556bdb491a45549acb7030fd483",
			"license": "BUSL",
			"urls": [
				"bzz-raw://2f95baa4ddab8f7652c660924962c2ee05cac0ea960fd1289c587f7b47fa7531",
				"dweb:/ipfs/QmPvhADjozUfAcgBPAAfu72vxqwgPcyC9djzST7ayTEq4d"
			]
		},
		"contracts/interfaces/IxALPACACreditor.sol": {
			"keccak256": "0xa2f0c7cac5a889c3dbd622fb1bf895456707ae274f252538056d46589743b437",
			"license": "BUSL",
			"urls": [
				"bzz-raw://a91a269562ef5e2ba57c2d10f290759ae269b92c72214217ef651a2cb1a30878",
				"dweb:/ipfs/QmYJUX8x2km2s5ULZErqqwALXtJ3ovtU2yiaSA6nNU2ZYg"
			]
		},
		"contracts/xALPACAPriceSetter.sol": {
			"keccak256": "0x12a20f6ac40c4da45c42c2b2f4a977b9b671fede09027befa19f998a4a107a86",
			"license": "BUSL",
			"urls": [
				"bzz-raw://65637db6c81a4832fe147bf3d371c4807148e42bf5d45a04e78d30080bb05932",
				"dweb:/ipfs/QmPbZtpde81X2Ai8USh1nrZNDHPLo86oLX7Jh5K31erwQT"
			]
		}
	},
	"version": 1
}