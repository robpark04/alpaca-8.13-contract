{
	"id": "6eb54ad983ba9b938026797b11dabaf4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DeltaNeutralVaultConfig02.sol": {
				"content": "// SPDX-License-Identifier: BUSL\r\n/**\r\n  ∩~~~~∩ \r\n  ξ ･×･ ξ \r\n  ξ　~　ξ \r\n  ξ　　 ξ \r\n  ξ　　 “~～~～〇 \r\n  ξ　　　　　　 ξ \r\n  ξ ξ ξ~～~ξ ξ ξ \r\n　 ξ_ξξ_ξ　ξ_ξξ_ξ\r\nAlpaca Fin Corporation\r\n*/\r\n\r\npragma solidity 0.8.13;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\nimport \"./interfaces/IDeltaNeutralVaultConfig02.sol\";\r\nimport \"./interfaces/IController.sol\";\r\n\r\n/// @title DeltaNeutralVaultConfig02 - A place where you can find all delta neutral vault config\r\n// solhint-disable max-states-count\r\ncontract DeltaNeutralVaultConfig02 is IDeltaNeutralVaultConfig02, OwnableUpgradeable {\r\n  // --- Events ---\r\n  event LogSetParams(\r\n    address indexed _caller,\r\n    address _getWrappedNativeAddr,\r\n    address _getWNativeRelayer,\r\n    address _fairLaunchAddr,\r\n    uint256 _rebalanceFactor,\r\n    uint256 _positionValueTolerance,\r\n    uint256 _debtRatioTolerance\r\n  );\r\n  event LogSetWhitelistedCallers(address indexed _caller, address indexed _address, bool _ok);\r\n  event LogSetWhitelistedRebalancers(address indexed _caller, address indexed _address, bool _ok);\r\n  event LogSetFeeExemptedCallers(address indexed _caller, address indexed _address, bool _ok);\r\n  event LogSetSwapRoute(address indexed _caller, address indexed _swapRouter, address source, address destination);\r\n  event LogSetLeverageLevel(address indexed _caller, uint8 _newLeverageLevel);\r\n  event LogSetAlpacaBountyConfig(address indexed _caller, address _alpacaReinvestTreasury, uint256 _alpacaBountyBps);\r\n  event LogSetAlpacaBeneficiaryConfig(\r\n    address indexed _caller,\r\n    address _alpacaBeneficiary,\r\n    uint256 _alpacaBeneficiaryBps\r\n  );\r\n  event LogSetWhitelistedReinvestors(address indexed _caller, address indexed _address, bool _ok);\r\n  event LogSetValueLimit(address indexed _caller, uint256 _maxVaultPositionValue);\r\n  event LogSetFees(\r\n    address indexed _caller,\r\n    uint256 _depositFeeBps,\r\n    uint256 _withdrawalFeeBps,\r\n    uint256 _managementFeePerSec\r\n  );\r\n  event LogSetFeeTreasury(\r\n    address indexed _caller,\r\n    address _depositFeeTreasury,\r\n    address _withdrawFeeTreasury,\r\n    address _managementFeeTreasury\r\n  );\r\n  event LogSetSwapRouter(address indexed _caller, address _swapRouter);\r\n  event LogSetReinvestPath(address indexed _caller, address[] _reinvestPath);\r\n  event LogSetController(address indexed _caller, address _controller);\r\n\r\n  event LogSetExecutor(\r\n    address indexed _caller,\r\n    address _depositExecutor,\r\n    address _withdrawExecutor,\r\n    address _rebalanceExecutor,\r\n    address _reinvestExecutor\r\n  );\r\n  event LogSetSwapConfig(address indexed _caller, uint256 swapFee, uint256 swapFeeDenom);\r\n  event LogSetStrategies(\r\n    address indexed _caller,\r\n    address partialCloseMinimizeStrategy,\r\n    address stableAddTwoSideStrategy,\r\n    address assetAddTwoSideStrategy\r\n  );\r\n\r\n  // --- Errors ---\r\n  error DeltaNeutralVaultConfig_LeverageLevelTooLow();\r\n  error DeltaNeutralVaultConfig_TooMuchFee(uint256 _depositFeeBps, uint256 _withdrawalFeeBps, uint256 _mangementFeeBps);\r\n  error DeltaNeutralVaultConfig_TooMuchBounty(uint256 _bounty);\r\n  error DeltaNeutralVaultConfig_InvalidSwapRouter();\r\n  error DeltaNeutralVaultConfig_InvalidReinvestPath();\r\n  error DeltaNeutralVaultConfig_InvalidReinvestPathLength();\r\n\r\n  // --- Constants ---\r\n  uint8 private constant MIN_LEVERAGE_LEVEL = 3;\r\n  uint256 private constant MAX_DEPOSIT_FEE_BPS = 1000;\r\n  uint256 private constant MAX_WITHDRAWAL_FEE_BPS = 1000;\r\n  uint256 private constant MAX_MANGEMENT_FEE_PER_SEC = 3170979198;\r\n  uint256 private constant MAX_ALPACA_BOUNTY_BPS = 2500;\r\n  uint256 private constant MAX_ALPACA_BENEFICIARY_BPS = 6000;\r\n\r\n  // --- States ---\r\n  // Configuration for Delta Neutral Vault\r\n  // Address for wrapped native eg WBNB, WETH\r\n  address public override getWrappedNativeAddr;\r\n  // Address for wNtive Relayer\r\n  address public override getWNativeRelayer;\r\n  // FairLaunch contract address\r\n  address public fairLaunchAddr;\r\n\r\n  // The maximum position value in USD that can be held in the vault\r\n  uint256 public maxVaultPositionValue;\r\n  // If debt ratio went above rebalanceFactor, then rebalance\r\n  uint256 public override rebalanceFactor;\r\n  // Tolerance bps that allow margin for misc calculation\r\n  uint256 public override positionValueTolerance;\r\n  // Specific Tolerance bps use for debt ratio check during withdraw\r\n  uint256 public override debtRatioTolerance;\r\n\r\n  // Deposit fee treasury.\r\n  address public depositFeeTreasury;\r\n  // Fee when user deposit to delta neutral vault\r\n  uint256 public override depositFeeBps;\r\n  // Withdrawal fee treasury.\r\n  address public withdrawalFeeTreasury;\r\n  // Fee when user withdraw from delta neutral vault\r\n  uint256 public override withdrawalFeeBps;\r\n  // Management fee treausry.\r\n  address public managementFeeTreasury;\r\n  // Management fee when users is using the vault\r\n  uint256 public override managementFeePerSec;\r\n\r\n  // Targeted leverage level used for underlying positions\r\n  uint8 public override leverageLevel;\r\n\r\n  // ALPACA token\r\n  address public alpacaToken;\r\n  // The router to be used for swaping ALPACA to other assets\r\n  address public getSwapRouter;\r\n  // The path to be used for reinvesting\r\n  address[] public reinvestPath;\r\n\r\n  // Mapping of whitelisted callers\r\n  mapping(address => bool) public whitelistedCallers;\r\n  // Mapping of whitelisted rebalancers\r\n  mapping(address => bool) public whitelistedRebalancers;\r\n\r\n  // list of exempted callers.\r\n  mapping(address => bool) public feeExemptedCallers;\r\n\r\n  // list of reinvestors\r\n  mapping(address => bool) public whitelistedReinvestors;\r\n\r\n  // ALPACA treausry\r\n  address public alpacaReinvestFeeTreasury;\r\n  // ALPACA bounty percentage.\r\n  uint256 public alpacaBountyBps;\r\n  // ALPACA beneficiary. This is the address that will receive portion of the bounty.\r\n  address public alpacaBeneficiary;\r\n  // ALPACA beneficiary percentage.\r\n  uint256 public alpacaBeneficiaryBps;\r\n\r\n  // Automated Vault Controller\r\n  address public override controller;\r\n\r\n  /// Executor\r\n  address public depositExecutor;\r\n  address public withdrawExecutor;\r\n  address public rebalanceExecutor;\r\n  address public reinvestExecutor;\r\n\r\n  /// swap config\r\n  uint256 public swapFee;\r\n  uint256 public swapFeeDenom;\r\n\r\n  /// Strategies\r\n  address public partialCloseMinimizeStrategy;\r\n  address public stableAddTwoSideStrategy;\r\n  address public assetAddTwoSideStrategy;\r\n\r\n  function initialize(\r\n    address _getWrappedNativeAddr,\r\n    address _getWNativeRelayer,\r\n    address _fairLaunchAddr,\r\n    uint256 _rebalanceFactor,\r\n    uint256 _positionValueTolerance,\r\n    uint256 _debtRatioTolerance,\r\n    address _depositFeeTreasury,\r\n    address _managementFeeTreasury,\r\n    address _withdrawFeeTreasury,\r\n    address _alpacaToken\r\n  ) external initializer {\r\n    OwnableUpgradeable.__Ownable_init();\r\n\r\n    alpacaToken = _alpacaToken;\r\n\r\n    setFees(_depositFeeTreasury, 0, _withdrawFeeTreasury, 0, _managementFeeTreasury, 0);\r\n    setParams(\r\n      _getWrappedNativeAddr,\r\n      _getWNativeRelayer,\r\n      _fairLaunchAddr,\r\n      _rebalanceFactor,\r\n      _positionValueTolerance,\r\n      _debtRatioTolerance\r\n    );\r\n  }\r\n\r\n  function setParams(\r\n    address _getWrappedNativeAddr,\r\n    address _getWNativeRelayer,\r\n    address _fairLaunchAddr,\r\n    uint256 _rebalanceFactor,\r\n    uint256 _positionValueTolerance,\r\n    uint256 _debtRatioTolerance\r\n  ) public onlyOwner {\r\n    getWrappedNativeAddr = _getWrappedNativeAddr;\r\n    getWNativeRelayer = _getWNativeRelayer;\r\n    fairLaunchAddr = _fairLaunchAddr;\r\n    rebalanceFactor = _rebalanceFactor;\r\n    positionValueTolerance = _positionValueTolerance;\r\n    debtRatioTolerance = _debtRatioTolerance;\r\n\r\n    emit LogSetParams(\r\n      msg.sender,\r\n      _getWrappedNativeAddr,\r\n      _getWNativeRelayer,\r\n      _fairLaunchAddr,\r\n      _rebalanceFactor,\r\n      _positionValueTolerance,\r\n      _debtRatioTolerance\r\n    );\r\n  }\r\n\r\n  /// @notice Set whitelisted callers.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _callers addresses to be whitelisted.\r\n  /// @param _ok The new ok flag for callers.\r\n  function setWhitelistedCallers(address[] calldata _callers, bool _ok) external onlyOwner {\r\n    for (uint256 _idx = 0; _idx < _callers.length; _idx++) {\r\n      whitelistedCallers[_callers[_idx]] = _ok;\r\n      emit LogSetWhitelistedCallers(msg.sender, _callers[_idx], _ok);\r\n    }\r\n  }\r\n\r\n  /// @notice Set whitelisted rebalancers.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _callers addresses to be whitelisted.\r\n  /// @param _ok The new ok flag for callers.\r\n  function setWhitelistedRebalancer(address[] calldata _callers, bool _ok) external onlyOwner {\r\n    for (uint256 _idx = 0; _idx < _callers.length; _idx++) {\r\n      whitelistedRebalancers[_callers[_idx]] = _ok;\r\n      emit LogSetWhitelistedRebalancers(msg.sender, _callers[_idx], _ok);\r\n    }\r\n  }\r\n\r\n  /// @notice Set whitelisted reinvestors.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _callers addresses to be whitelisted.\r\n  /// @param _ok The new ok flag for callers.\r\n  function setwhitelistedReinvestors(address[] calldata _callers, bool _ok) external onlyOwner {\r\n    for (uint256 _idx = 0; _idx < _callers.length; _idx++) {\r\n      whitelistedReinvestors[_callers[_idx]] = _ok;\r\n      emit LogSetWhitelistedReinvestors(msg.sender, _callers[_idx], _ok);\r\n    }\r\n  }\r\n\r\n  /// @notice Set leverage level.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _newLeverageLevel The new leverage level to be set. Must be >= 3\r\n  function setLeverageLevel(uint8 _newLeverageLevel) external onlyOwner {\r\n    if (_newLeverageLevel < MIN_LEVERAGE_LEVEL) {\r\n      revert DeltaNeutralVaultConfig_LeverageLevelTooLow();\r\n    }\r\n    leverageLevel = _newLeverageLevel;\r\n    emit LogSetLeverageLevel(msg.sender, _newLeverageLevel);\r\n  }\r\n\r\n  /// @notice Set exempted fee callers.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _callers addresses to be exempted.\r\n  /// @param _ok The new ok flag for callers.\r\n  function setFeeExemptedCallers(address[] calldata _callers, bool _ok) external onlyOwner {\r\n    for (uint256 _idx = 0; _idx < _callers.length; _idx++) {\r\n      feeExemptedCallers[_callers[_idx]] = _ok;\r\n      emit LogSetFeeExemptedCallers(msg.sender, _callers[_idx], _ok);\r\n    }\r\n  }\r\n\r\n  /// @notice Set fees.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _newDepositFeeBps Fee when user deposit to delta neutral vault.\r\n  /// @param _newWithdrawalFeeBps Fee when user deposit to delta neutral vault.\r\n  /// @param _newManagementFeePerSec Mangement Fee per second.\r\n  function setFees(\r\n    address _newDepositFeeTreasury,\r\n    uint256 _newDepositFeeBps,\r\n    address _newWithdrawalFeeTreasury,\r\n    uint256 _newWithdrawalFeeBps,\r\n    address _newManagementFeeTreasury,\r\n    uint256 _newManagementFeePerSec\r\n  ) public onlyOwner {\r\n    if (\r\n      _newDepositFeeBps > MAX_DEPOSIT_FEE_BPS ||\r\n      _newWithdrawalFeeBps > MAX_WITHDRAWAL_FEE_BPS ||\r\n      _newManagementFeePerSec > MAX_MANGEMENT_FEE_PER_SEC\r\n    ) {\r\n      revert DeltaNeutralVaultConfig_TooMuchFee(_newDepositFeeBps, _newWithdrawalFeeBps, _newManagementFeePerSec);\r\n    }\r\n\r\n    depositFeeTreasury = _newDepositFeeTreasury;\r\n    depositFeeBps = _newDepositFeeBps;\r\n\r\n    withdrawalFeeTreasury = _newWithdrawalFeeTreasury;\r\n    withdrawalFeeBps = _newWithdrawalFeeBps;\r\n\r\n    managementFeeTreasury = _newManagementFeeTreasury;\r\n    managementFeePerSec = _newManagementFeePerSec;\r\n\r\n    emit LogSetFees(msg.sender, _newDepositFeeBps, _newWithdrawalFeeBps, _newManagementFeePerSec);\r\n    emit LogSetFeeTreasury(msg.sender, _newDepositFeeTreasury, _newWithdrawalFeeTreasury, _newManagementFeeTreasury);\r\n  }\r\n\r\n  /// @notice Set alpacaBountyBps.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _newAlpacaReinvestFeeTreasury The new address to received ALPACA reinvest fee\r\n  /// @param _newAlpacaBountyBps Fee from reinvesting ALPACA to positions.\r\n  function setAlpacaBountyConfig(address _newAlpacaReinvestFeeTreasury, uint256 _newAlpacaBountyBps)\r\n    external\r\n    onlyOwner\r\n  {\r\n    if (_newAlpacaBountyBps > MAX_ALPACA_BOUNTY_BPS) {\r\n      revert DeltaNeutralVaultConfig_TooMuchBounty(_newAlpacaBountyBps);\r\n    }\r\n\r\n    alpacaReinvestFeeTreasury = _newAlpacaReinvestFeeTreasury;\r\n    alpacaBountyBps = _newAlpacaBountyBps;\r\n\r\n    emit LogSetAlpacaBountyConfig(msg.sender, alpacaReinvestFeeTreasury, alpacaBountyBps);\r\n  }\r\n\r\n  /// @notice Set alpacaBeneficiaryBps.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _newAlpacaBeneficiary The new address to received ALPACA reinvest fee\r\n  /// @param _newAlpacaBeneficiaryBps Fee from reinvesting ALPACA to positions.\r\n  function setAlpacaBeneficiaryConfig(address _newAlpacaBeneficiary, uint256 _newAlpacaBeneficiaryBps)\r\n    external\r\n    onlyOwner\r\n  {\r\n    if (_newAlpacaBeneficiaryBps > MAX_ALPACA_BENEFICIARY_BPS) {\r\n      revert DeltaNeutralVaultConfig_TooMuchBounty(_newAlpacaBeneficiaryBps);\r\n    }\r\n\r\n    alpacaBeneficiary = _newAlpacaBeneficiary;\r\n    alpacaBeneficiaryBps = _newAlpacaBeneficiaryBps;\r\n\r\n    emit LogSetAlpacaBeneficiaryConfig(msg.sender, alpacaBeneficiary, alpacaBeneficiaryBps);\r\n  }\r\n\r\n  /// @notice Set position value limit.\r\n  /// @dev Must only be called by owner.\r\n  /// @param _maxVaultPositionValue Maximum vault size position value.\r\n  function setValueLimit(uint256 _maxVaultPositionValue) external onlyOwner {\r\n    maxVaultPositionValue = _maxVaultPositionValue;\r\n    emit LogSetValueLimit(msg.sender, _maxVaultPositionValue);\r\n  }\r\n\r\n  /// @notice Return if vault can accept new position value.\r\n  /// @param _totalPositionValue new vault position value.\r\n  function isVaultSizeAcceptable(uint256 _totalPositionValue) external view returns (bool) {\r\n    if (_totalPositionValue > maxVaultPositionValue) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /// @dev Set the reinvest configuration.\r\n  /// @param _swapRouter - The router address to update.\r\n  function setSwapRouter(address _swapRouter) external onlyOwner {\r\n    if (_swapRouter == address(0)) revert DeltaNeutralVaultConfig_InvalidSwapRouter();\r\n    getSwapRouter = _swapRouter;\r\n    emit LogSetSwapRouter(msg.sender, _swapRouter);\r\n  }\r\n\r\n  /// @dev Set the reinvest path.\r\n  /// @param _reinvestPath - The reinvest path to update.\r\n  function setReinvestPath(address[] calldata _reinvestPath) external onlyOwner {\r\n    if (_reinvestPath.length < 2) revert DeltaNeutralVaultConfig_InvalidReinvestPathLength();\r\n\r\n    if (_reinvestPath[0] != alpacaToken) revert DeltaNeutralVaultConfig_InvalidReinvestPath();\r\n\r\n    reinvestPath = _reinvestPath;\r\n    emit LogSetReinvestPath(msg.sender, _reinvestPath);\r\n  }\r\n\r\n  /// @dev Get the reinvest path.\r\n  function getReinvestPath() external view returns (address[] memory) {\r\n    return reinvestPath;\r\n  }\r\n\r\n  function setController(address _controller) external onlyOwner {\r\n    // sanity check\r\n    IController(_controller).totalCredit(address(0));\r\n\r\n    controller = _controller;\r\n\r\n    emit LogSetController(msg.sender, _controller);\r\n  }\r\n\r\n  function setExecutor(\r\n    address _depositExecutor,\r\n    address _withdrawExecutor,\r\n    address _rebalanceExecutor,\r\n    address _reinvestExecutor\r\n  ) external onlyOwner {\r\n    depositExecutor = _depositExecutor;\r\n    withdrawExecutor = _withdrawExecutor;\r\n    rebalanceExecutor = _rebalanceExecutor;\r\n    reinvestExecutor = _reinvestExecutor;\r\n\r\n    emit LogSetExecutor(msg.sender, _depositExecutor, _withdrawExecutor, _rebalanceExecutor, _reinvestExecutor);\r\n  }\r\n\r\n  /// @notice Return if caller is executor.\r\n  /// @param _caller caller.\r\n  function isExecutor(address _caller) external view returns (bool) {\r\n    return\r\n      _caller == depositExecutor ||\r\n      _caller == withdrawExecutor ||\r\n      _caller == rebalanceExecutor ||\r\n      _caller == reinvestExecutor;\r\n  }\r\n\r\n  function setSwapConfig(uint256 _swapFee, uint256 _swapFeeDenom) external onlyOwner {\r\n    swapFee = _swapFee;\r\n    swapFeeDenom = _swapFeeDenom;\r\n\r\n    emit LogSetSwapConfig(msg.sender, _swapFee, _swapFeeDenom);\r\n  }\r\n\r\n  function setStrategies(\r\n    address _partialCloseMinimizeStrategy,\r\n    address _stableAddTwoSideStrategy,\r\n    address _assetAddTwoSideStrategy\r\n  ) external onlyOwner {\r\n    partialCloseMinimizeStrategy = _partialCloseMinimizeStrategy;\r\n    stableAddTwoSideStrategy = _stableAddTwoSideStrategy;\r\n    assetAddTwoSideStrategy = _assetAddTwoSideStrategy;\r\n\r\n    emit LogSetStrategies(\r\n      msg.sender,\r\n      _partialCloseMinimizeStrategy,\r\n      _stableAddTwoSideStrategy,\r\n      _assetAddTwoSideStrategy\r\n    );\r\n  }\r\n}\r\n"
			},
			"contracts/interfaces/IController.sol": {
				"content": "// SPDX-License-Identifier: BUSL\r\n/**\r\n  ∩~~~~∩ \r\n  ξ ･×･ ξ \r\n  ξ　~　ξ \r\n  ξ　　 ξ \r\n  ξ　　 “~～~～〇 \r\n  ξ　　　　　　 ξ \r\n  ξ ξ ξ~～~ξ ξ ξ \r\n　 ξ_ξξ_ξ　ξ_ξξ_ξ\r\nAlpaca Fin Corporation\r\n*/\r\n\r\npragma solidity 0.8.13;\r\n\r\ninterface IController {\r\n  function totalCredit(address _user) external view returns (uint256);\r\n\r\n  function usedCredit(address _user) external view returns (uint256);\r\n\r\n  function availableCredit(address _user) external view returns (uint256);\r\n\r\n  function onDeposit(address _user, uint256 _shareAmount) external;\r\n\r\n  function onWithdraw(address _user, uint256 _shareAmount) external;\r\n}\r\n"
			},
			"contracts/interfaces/IDeltaNeutralVaultConfig02.sol": {
				"content": "// SPDX-License-Identifier: BUSL\r\n/**\r\n  ∩~~~~∩ \r\n  ξ ･×･ ξ \r\n  ξ　~　ξ \r\n  ξ　　 ξ \r\n  ξ　　 “~～~～〇 \r\n  ξ　　　　　　 ξ \r\n  ξ ξ ξ~～~ξ ξ ξ \r\n　 ξ_ξξ_ξ　ξ_ξξ_ξ\r\nAlpaca Fin Corporation\r\n*/\r\n\r\npragma solidity 0.8.13;\r\n\r\ninterface IDeltaNeutralVaultConfig02 {\r\n  function getWrappedNativeAddr() external view returns (address);\r\n\r\n  function getWNativeRelayer() external view returns (address);\r\n\r\n  function rebalanceFactor() external view returns (uint256);\r\n\r\n  function positionValueTolerance() external view returns (uint256);\r\n\r\n  function debtRatioTolerance() external view returns (uint256);\r\n\r\n  /// @dev Return if the caller is whitelisted.\r\n  function whitelistedCallers(address _caller) external view returns (bool);\r\n\r\n  /// @dev Return if the caller is whitelisted.\r\n  function whitelistedRebalancers(address _caller) external view returns (bool);\r\n\r\n  /// @dev Return if the caller is exempted from fee.\r\n  function feeExemptedCallers(address _caller) external returns (bool);\r\n\r\n  /// @dev Get fairlaunch address.\r\n  function fairLaunchAddr() external view returns (address);\r\n\r\n  /// @dev Return the deposit fee treasury.\r\n  function depositFeeTreasury() external view returns (address);\r\n\r\n  /// @dev Get deposit fee.\r\n  function depositFeeBps() external view returns (uint256);\r\n\r\n  /// @dev Return the withdrawl fee treasury.\r\n  function withdrawalFeeTreasury() external view returns (address);\r\n\r\n  /// @dev Get withdrawal fee.\r\n  function withdrawalFeeBps() external returns (uint256);\r\n\r\n  /// @dev Return management fee treasury\r\n  function managementFeeTreasury() external view returns (address);\r\n\r\n  /// @dev Return management fee per sec.\r\n  function managementFeePerSec() external view returns (uint256);\r\n\r\n  /// @dev Get leverage level.\r\n  function leverageLevel() external view returns (uint8);\r\n\r\n  /// @dev Return if the caller is whitelisted.\r\n  function whitelistedReinvestors(address _caller) external view returns (bool);\r\n\r\n  /// @dev Return ALPACA reinvest fee treasury.\r\n  function alpacaReinvestFeeTreasury() external view returns (address);\r\n\r\n  /// @dev Return alpaca bounty bps.\r\n  function alpacaBountyBps() external view returns (uint256);\r\n\r\n  /// @dev Return ALPACA beneficiary address.\r\n  function alpacaBeneficiary() external view returns (address);\r\n\r\n  /// @dev Return ALPACA beneficiary bps.\r\n  function alpacaBeneficiaryBps() external view returns (uint256);\r\n\r\n  /// @dev Return if delta neutral vault position value acceptable.\r\n  function isVaultSizeAcceptable(uint256 _totalPositionValue) external view returns (bool);\r\n\r\n  /// @dev Return swap router\r\n  function getSwapRouter() external view returns (address);\r\n\r\n  /// @dev Return reinvest path\r\n  function getReinvestPath() external view returns (address[] memory);\r\n\r\n  /// @dev Return controller address\r\n  function controller() external view returns (address);\r\n\r\n  /// @dev Set a new controller\r\n  function setController(address _controller) external;\r\n\r\n  /// @dev Return deposit executor\r\n  function depositExecutor() external view returns (address);\r\n\r\n  /// @dev Return withdraw executor\r\n  function withdrawExecutor() external view returns (address);\r\n\r\n  /// @dev Return rebalance executor\r\n  function rebalanceExecutor() external view returns (address);\r\n\r\n  /// @dev Return reinvest executor\r\n  function reinvestExecutor() external view returns (address);\r\n\r\n  /// @dev Return if caller is executor.\r\n  function isExecutor(address _caller) external view returns (bool);\r\n\r\n  /// @dev Return Partial close minimize strategy address\r\n  function partialCloseMinimizeStrategy() external view returns (address);\r\n\r\n  /// @dev Return Stable add two side strategy address\r\n  function stableAddTwoSideStrategy() external view returns (address);\r\n\r\n  /// @dev Return Asset add two side strategy address\r\n  function assetAddTwoSideStrategy() external view returns (address);\r\n\r\n  /// @dev Return swap fee\r\n  function swapFee() external view returns (uint256);\r\n\r\n  /// @dev Return swap fee denom\r\n  function swapFeeDenom() external view returns (uint256);\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = _setInitializedVersion(1);\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        bool isTopLevelCall = _setInitializedVersion(version);\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(version);\n        }\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        _setInitializedVersion(type(uint8).max);\n    }\n\n    function _setInitializedVersion(uint8 version) private returns (bool) {\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\n        // of initializers, because in other contexts the contract may have been reentered.\n        if (_initializing) {\n            require(\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\n                \"Initializable: contract is already initialized\"\n            );\n            return false;\n        } else {\n            require(_initialized < version, \"Initializable: contract is already initialized\");\n            _initialized = version;\n            return true;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7316  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7316  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220406a3fa3a1e38b40e9c4b5ab104d07372148dde73244eefccfdc2d05a615b15764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406a3fa3a1e38b40e9c4b5ab104d07372148dde73244eefccfdc2d05a615b15764736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH11 0x3FA3A1E38B40E9C4B5AB10 0x4D SMOD CALLDATACOPY 0x21 BASEFEE 0xDD 0xE7 ORIGIN DIFFICULTY 0xEE 0xFC 0xCF 0xDC 0x2D SDIV 0xA6 ISZERO 0xB1 JUMPI PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "194:7122:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7122:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406a3fa3a1e38b40e9c4b5ab104d07372148dde73244eefccfdc2d05a615b15764736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH11 0x3FA3A1E38B40E9C4B5AB10 0x4D SMOD CALLDATACOPY 0x21 BASEFEE 0xDD 0xE7 ORIGIN DIFFICULTY 0xEE 0xFC 0xCF 0xDC 0x2D SDIV 0xA6 ISZERO 0xB1 JUMPI PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "194:7122:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220406a3fa3a1e38b40e9c4b5ab104d07372148dde73244eefccfdc2d05a615b15764736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DeltaNeutralVaultConfig02.sol": {
				"DeltaNeutralVaultConfig02": {
					"abi": [
						{
							"inputs": [],
							"name": "DeltaNeutralVaultConfig_InvalidReinvestPath",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DeltaNeutralVaultConfig_InvalidReinvestPathLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DeltaNeutralVaultConfig_InvalidSwapRouter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DeltaNeutralVaultConfig_LeverageLevelTooLow",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "DeltaNeutralVaultConfig_TooMuchBounty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_depositFeeBps",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_withdrawalFeeBps",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mangementFeeBps",
									"type": "uint256"
								}
							],
							"name": "DeltaNeutralVaultConfig_TooMuchFee",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_alpacaBeneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_alpacaBeneficiaryBps",
									"type": "uint256"
								}
							],
							"name": "LogSetAlpacaBeneficiaryConfig",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_alpacaReinvestTreasury",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_alpacaBountyBps",
									"type": "uint256"
								}
							],
							"name": "LogSetAlpacaBountyConfig",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_controller",
									"type": "address"
								}
							],
							"name": "LogSetController",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_depositExecutor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_withdrawExecutor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_rebalanceExecutor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_reinvestExecutor",
									"type": "address"
								}
							],
							"name": "LogSetExecutor",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_ok",
									"type": "bool"
								}
							],
							"name": "LogSetFeeExemptedCallers",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_depositFeeTreasury",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_withdrawFeeTreasury",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_managementFeeTreasury",
									"type": "address"
								}
							],
							"name": "LogSetFeeTreasury",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_depositFeeBps",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_withdrawalFeeBps",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_managementFeePerSec",
									"type": "uint256"
								}
							],
							"name": "LogSetFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "_newLeverageLevel",
									"type": "uint8"
								}
							],
							"name": "LogSetLeverageLevel",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_getWrappedNativeAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_getWNativeRelayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_fairLaunchAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_rebalanceFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_positionValueTolerance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_debtRatioTolerance",
									"type": "uint256"
								}
							],
							"name": "LogSetParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "_reinvestPath",
									"type": "address[]"
								}
							],
							"name": "LogSetReinvestPath",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "partialCloseMinimizeStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "stableAddTwoSideStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "assetAddTwoSideStrategy",
									"type": "address"
								}
							],
							"name": "LogSetStrategies",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "swapFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "swapFeeDenom",
									"type": "uint256"
								}
							],
							"name": "LogSetSwapConfig",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "source",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "destination",
									"type": "address"
								}
							],
							"name": "LogSetSwapRoute",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"name": "LogSetSwapRouter",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_maxVaultPositionValue",
									"type": "uint256"
								}
							],
							"name": "LogSetValueLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_ok",
									"type": "bool"
								}
							],
							"name": "LogSetWhitelistedCallers",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_ok",
									"type": "bool"
								}
							],
							"name": "LogSetWhitelistedRebalancers",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_ok",
									"type": "bool"
								}
							],
							"name": "LogSetWhitelistedReinvestors",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "alpacaBeneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alpacaBeneficiaryBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alpacaBountyBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alpacaReinvestFeeTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alpacaToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assetAddTwoSideStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "controller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "debtRatioTolerance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositExecutor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFeeBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFeeTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fairLaunchAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "feeExemptedCallers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReinvestPath",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSwapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWNativeRelayer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWrappedNativeAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_getWrappedNativeAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_getWNativeRelayer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_fairLaunchAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rebalanceFactor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_positionValueTolerance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_debtRatioTolerance",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_depositFeeTreasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_managementFeeTreasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_withdrawFeeTreasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_alpacaToken",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								}
							],
							"name": "isExecutor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalPositionValue",
									"type": "uint256"
								}
							],
							"name": "isVaultSizeAcceptable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "leverageLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "managementFeePerSec",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "managementFeeTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxVaultPositionValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "partialCloseMinimizeStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positionValueTolerance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebalanceExecutor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebalanceFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reinvestExecutor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "reinvestPath",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAlpacaBeneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_newAlpacaBeneficiaryBps",
									"type": "uint256"
								}
							],
							"name": "setAlpacaBeneficiaryConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAlpacaReinvestFeeTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_newAlpacaBountyBps",
									"type": "uint256"
								}
							],
							"name": "setAlpacaBountyConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_controller",
									"type": "address"
								}
							],
							"name": "setController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_depositExecutor",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_withdrawExecutor",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rebalanceExecutor",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reinvestExecutor",
									"type": "address"
								}
							],
							"name": "setExecutor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_callers",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "_ok",
									"type": "bool"
								}
							],
							"name": "setFeeExemptedCallers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newDepositFeeTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_newDepositFeeBps",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_newWithdrawalFeeTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_newWithdrawalFeeBps",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_newManagementFeeTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_newManagementFeePerSec",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_newLeverageLevel",
									"type": "uint8"
								}
							],
							"name": "setLeverageLevel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_getWrappedNativeAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_getWNativeRelayer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_fairLaunchAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rebalanceFactor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_positionValueTolerance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_debtRatioTolerance",
									"type": "uint256"
								}
							],
							"name": "setParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_reinvestPath",
									"type": "address[]"
								}
							],
							"name": "setReinvestPath",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_partialCloseMinimizeStrategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stableAddTwoSideStrategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_assetAddTwoSideStrategy",
									"type": "address"
								}
							],
							"name": "setStrategies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_swapFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_swapFeeDenom",
									"type": "uint256"
								}
							],
							"name": "setSwapConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"name": "setSwapRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxVaultPositionValue",
									"type": "uint256"
								}
							],
							"name": "setValueLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_callers",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "_ok",
									"type": "bool"
								}
							],
							"name": "setWhitelistedCallers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_callers",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "_ok",
									"type": "bool"
								}
							],
							"name": "setWhitelistedRebalancer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_callers",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "_ok",
									"type": "bool"
								}
							],
							"name": "setwhitelistedReinvestors",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableAddTwoSideStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapFeeDenom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelistedCallers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelistedRebalancers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelistedReinvestors",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawExecutor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFeeBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFeeTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getReinvestPath()": {
								"details": "Get the reinvest path."
							},
							"isExecutor(address)": {
								"params": {
									"_caller": "caller."
								}
							},
							"isVaultSizeAcceptable(uint256)": {
								"params": {
									"_totalPositionValue": "new vault position value."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setAlpacaBeneficiaryConfig(address,uint256)": {
								"details": "Must only be called by owner.",
								"params": {
									"_newAlpacaBeneficiary": "The new address to received ALPACA reinvest fee",
									"_newAlpacaBeneficiaryBps": "Fee from reinvesting ALPACA to positions."
								}
							},
							"setAlpacaBountyConfig(address,uint256)": {
								"details": "Must only be called by owner.",
								"params": {
									"_newAlpacaBountyBps": "Fee from reinvesting ALPACA to positions.",
									"_newAlpacaReinvestFeeTreasury": "The new address to received ALPACA reinvest fee"
								}
							},
							"setController(address)": {
								"details": "Set a new controller"
							},
							"setFeeExemptedCallers(address[],bool)": {
								"details": "Must only be called by owner.",
								"params": {
									"_callers": "addresses to be exempted.",
									"_ok": "The new ok flag for callers."
								}
							},
							"setFees(address,uint256,address,uint256,address,uint256)": {
								"details": "Must only be called by owner.",
								"params": {
									"_newDepositFeeBps": "Fee when user deposit to delta neutral vault.",
									"_newManagementFeePerSec": "Mangement Fee per second.",
									"_newWithdrawalFeeBps": "Fee when user deposit to delta neutral vault."
								}
							},
							"setLeverageLevel(uint8)": {
								"details": "Must only be called by owner.",
								"params": {
									"_newLeverageLevel": "The new leverage level to be set. Must be >= 3"
								}
							},
							"setReinvestPath(address[])": {
								"details": "Set the reinvest path.",
								"params": {
									"_reinvestPath": "- The reinvest path to update."
								}
							},
							"setSwapRouter(address)": {
								"details": "Set the reinvest configuration.",
								"params": {
									"_swapRouter": "- The router address to update."
								}
							},
							"setValueLimit(uint256)": {
								"details": "Must only be called by owner.",
								"params": {
									"_maxVaultPositionValue": "Maximum vault size position value."
								}
							},
							"setWhitelistedCallers(address[],bool)": {
								"details": "Must only be called by owner.",
								"params": {
									"_callers": "addresses to be whitelisted.",
									"_ok": "The new ok flag for callers."
								}
							},
							"setWhitelistedRebalancer(address[],bool)": {
								"details": "Must only be called by owner.",
								"params": {
									"_callers": "addresses to be whitelisted.",
									"_ok": "The new ok flag for callers."
								}
							},
							"setwhitelistedReinvestors(address[],bool)": {
								"details": "Must only be called by owner.",
								"params": {
									"_callers": "addresses to be whitelisted.",
									"_ok": "The new ok flag for callers."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"alpacaBeneficiary": {
								"details": "Return ALPACA beneficiary address."
							},
							"alpacaBeneficiaryBps": {
								"details": "Return ALPACA beneficiary bps."
							},
							"alpacaBountyBps": {
								"details": "Return alpaca bounty bps."
							},
							"alpacaReinvestFeeTreasury": {
								"details": "Return ALPACA reinvest fee treasury."
							},
							"assetAddTwoSideStrategy": {
								"details": "Return Asset add two side strategy address"
							},
							"controller": {
								"details": "Return controller address"
							},
							"depositFeeBps": {
								"details": "Get deposit fee."
							},
							"depositFeeTreasury": {
								"details": "Return the deposit fee treasury."
							},
							"fairLaunchAddr": {
								"details": "Get fairlaunch address."
							},
							"feeExemptedCallers": {
								"details": "Return if the caller is exempted from fee."
							},
							"getSwapRouter": {
								"details": "Return swap router"
							},
							"leverageLevel": {
								"details": "Get leverage level."
							},
							"managementFeePerSec": {
								"details": "Return management fee per sec."
							},
							"managementFeeTreasury": {
								"details": "Return management fee treasury"
							},
							"rebalanceExecutor": {
								"details": "Return rebalance executor"
							},
							"reinvestExecutor": {
								"details": "Return reinvest executor"
							},
							"stableAddTwoSideStrategy": {
								"details": "Return Stable add two side strategy address"
							},
							"swapFeeDenom": {
								"details": "Return swap fee denom"
							},
							"whitelistedCallers": {
								"details": "Return if the caller is whitelisted."
							},
							"whitelistedRebalancers": {
								"details": "Return if the caller is whitelisted."
							},
							"whitelistedReinvestors": {
								"details": "Return if the caller is whitelisted."
							},
							"withdrawExecutor": {
								"details": "Return withdraw executor"
							},
							"withdrawalFeeBps": {
								"details": "Get withdrawal fee."
							},
							"withdrawalFeeTreasury": {
								"details": "Return the withdrawl fee treasury."
							}
						},
						"title": "DeltaNeutralVaultConfig02 - A place where you can find all delta neutral vault config",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DeltaNeutralVaultConfig02.sol\":584:16649  contract DeltaNeutralVaultConfig02 is IDeltaNeutralVaultConfig02, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":584:16649  contract DeltaNeutralVaultConfig02 is IDeltaNeutralVaultConfig02, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79d37981\n      gt\n      tag_61\n      jumpi\n      dup1\n      0xd1783fa8\n      gt\n      tag_62\n      jumpi\n      dup1\n      0xef3bac5e\n      gt\n      tag_63\n      jumpi\n      dup1\n      0xf77c4791\n      gt\n      tag_64\n      jumpi\n      dup1\n      0xf77c4791\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xf9bfd907\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xfe865db9\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xffc97ce9\n      eq\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup1\n      0xef3bac5e\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xf52c6764\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xf679eda1\n      eq\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup1\n      0xdebfda30\n      gt\n      tag_65\n      jumpi\n      dup1\n      0xdebfda30\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xe592c5fa\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xe6abb8bd\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xeea99787\n      eq\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup1\n      0xd1783fa8\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xd4f3949a\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xd77ab72d\n      eq\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup1\n      0x9e1b8fa2\n      gt\n      tag_66\n      jumpi\n      dup1\n      0xb192362a\n      gt\n      tag_67\n      jumpi\n      dup1\n      0xb192362a\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xb8e09260\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xb9059d73\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xbed65bae\n      eq\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup1\n      0x9e1b8fa2\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xa361f404\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xab879827\n      eq\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup1\n      0x8ed5bb92\n      gt\n      tag_68\n      jumpi\n      dup1\n      0x8ed5bb92\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x91ba87d8\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x92eefe9b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x956c9da0\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup1\n      0x79d37981\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x8c8a4b58\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup1\n      0x4f40e368\n      gt\n      tag_69\n      jumpi\n      dup1\n      0x6155501b\n      gt\n      tag_70\n      jumpi\n      dup1\n      0x698d92cb\n      gt\n      tag_71\n      jumpi\n      dup1\n      0x698d92cb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x6a5bf606\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x725c9c49\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup1\n      0x6155501b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x62969467\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x64c65705\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x64facdd5\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup1\n      0x58d4c4ea\n      gt\n      tag_72\n      jumpi\n      dup1\n      0x58d4c4ea\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x595d4ece\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x5c23aed6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x60bdf9e5\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup1\n      0x4f40e368\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x54cf2aeb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x56fc97a0\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup1\n      0x2ce2a218\n      gt\n      tag_73\n      jumpi\n      dup1\n      0x41273657\n      gt\n      tag_74\n      jumpi\n      dup1\n      0x41273657\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x429e0971\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x45b61b00\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x49b2045c\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup1\n      0x2ce2a218\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x35824061\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3924f233\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup1\n      0x12440ccb\n      gt\n      tag_75\n      jumpi\n      dup1\n      0x12440ccb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1bb8c61d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1c425a45\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x235ec73d\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup1\n      0x04336bb3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0573f19c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1218cf18\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4762:4802  uint256 public override withdrawalFeeBps */\n    tag_3:\n      tag_76\n      sload(0x6f)\n      dup2\n      jump\n    tag_76:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4762:4802  uint256 public override withdrawalFeeBps */\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6439:6477  address public assetAddTwoSideStrategy */\n    tag_4:\n      sload(0x86)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_80:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":360:392   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":342:393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6439:6477  address public assetAddTwoSideStrategy */\n      tag_78\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12001:12479  function setAlpacaBountyConfig(address _newAlpacaReinvestFeeTreasury, uint256 _newAlpacaBountyBps)... */\n    tag_5:\n      tag_84\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5615:5669  mapping(address => bool) public whitelistedReinvestors */\n    tag_6:\n      tag_88\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      mstore(0x20, 0x78)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_88:\n      mload(0x40)\n        /* \"#utility.yul\":1197:1211   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1190:1212   */\n      iszero\n        /* \"#utility.yul\":1172:1213   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1145:1163   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5615:5669  mapping(address => bool) public whitelistedReinvestors */\n      tag_78\n        /* \"#utility.yul\":1032:1219   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8167:8451  function setWhitelistedCallers(address[] calldata _callers, bool _ok) external onlyOwner {... */\n    tag_7:\n      tag_84\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6211:6242  address public reinvestExecutor */\n    tag_8:\n      sload(0x81)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6138:6169  address public withdrawExecutor */\n    tag_9:\n      sload(0x7f)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10068:10352  function setFeeExemptedCallers(address[] calldata _callers, bool _ok) external onlyOwner {... */\n    tag_10:\n      tag_84\n      tag_105\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13710:13907  function isVaultSizeAcceptable(uint256 _totalPositionValue) external view returns (bool) {... */\n    tag_11:\n      tag_88\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5532:5582  mapping(address => bool) public feeExemptedCallers */\n    tag_12:\n      tag_88\n      tag_113\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_113:\n      mstore(0x20, 0x77)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14015:14259  function setSwapRouter(address _swapRouter) external onlyOwner {... */\n    tag_13:\n      tag_84\n      tag_117\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6295:6322  uint256 public swapFeeDenom */\n    tag_14:\n      tag_76\n      sload(0x83)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4838:4874  address public managementFeeTreasury */\n    tag_15:\n      sload(0x70)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6347:6390  address public partialCloseMinimizeStrategy */\n    tag_16:\n      sload(0x84)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5439:5493  mapping(address => bool) public whitelistedRebalancers */\n    tag_17:\n      tag_88\n      tag_129\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_129:\n      mstore(0x20, 0x76)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6268:6290  uint256 public swapFee */\n    tag_18:\n      tag_76\n      sload(0x82)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4100:4136  uint256 public maxVaultPositionValue */\n    tag_19:\n      tag_76\n      sload(0x68)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6103:6133  address public depositExecutor */\n    tag_20:\n      sload(0x7e)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5698:5738  address public alpacaReinvestFeeTreasury */\n    tag_21:\n      sload(0x79)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3994:4023  address public fairLaunchAddr */\n    tag_22:\n      sload(0x67)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13385:13582  function setValueLimit(uint256 _maxVaultPositionValue) external onlyOwner {... */\n    tag_23:\n      tag_84\n      tag_148\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14359:14730  function setReinvestPath(address[] calldata _reinvestPath) external onlyOwner {... */\n    tag_24:\n      tag_84\n      tag_151\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4204:4243  uint256 public override rebalanceFactor */\n    tag_25:\n      tag_76\n      sload(0x69)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6484:7229  function initialize(... */\n    tag_26:\n      tag_84\n      tag_158\n      calldatasize\n      0x04\n      tag_159\n      jump\t// in\n    tag_158:\n      tag_160\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4428:4470  uint256 public override debtRatioTolerance */\n    tag_27:\n      tag_76\n      sload(0x6b)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4667:4703  address public withdrawalFeeTreasury */\n    tag_28:\n      sload(0x6e)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15904:16120  function setSwapConfig(uint256 _swapFee, uint256 _swapFeeDenom) external onlyOwner {... */\n    tag_29:\n      tag_84\n      tag_168\n      calldatasize\n      0x04\n      tag_169\n      jump\t// in\n    tag_168:\n      tag_170\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1908:2009  function renounceOwnership() public virtual onlyOwner {... */\n    tag_30:\n      tag_84\n      tag_172\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5195:5223  address public getSwapRouter */\n    tag_31:\n      sload(0x73)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6395:6434  address public stableAddTwoSideStrategy */\n    tag_32:\n      sload(0x85)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7235:7980  function setParams(... */\n    tag_33:\n      tag_84\n      tag_180\n      calldatasize\n      0x04\n      tag_181\n      jump\t// in\n    tag_180:\n      tag_182\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1276:1361  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1276:1361  function owner() public view virtual returns (address) {... */\n      jump(tag_80)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5270:5299  address[] public reinvestPath */\n    tag_35:\n      tag_80\n      tag_187\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_187:\n      tag_188\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9128:9424  function setwhitelistedReinvestors(address[] calldata _callers, bool _ok) external onlyOwner {... */\n    tag_36:\n      tag_84\n      tag_191\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_191:\n      tag_192\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14877:15110  function setController(address _controller) external onlyOwner {... */\n    tag_37:\n      tag_84\n      tag_194\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_194:\n      tag_195\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5775:5805  uint256 public alpacaBountyBps */\n    tag_38:\n      tag_76\n      sload(0x7a)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8642:8937  function setWhitelistedRebalancer(address[] calldata _callers, bool _ok) external onlyOwner {... */\n    tag_39:\n      tag_84\n      tag_200\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_200:\n      tag_201\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5897:5929  address public alpacaBeneficiary */\n    tag_40:\n      sload(0x7b)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4594:4631  uint256 public override depositFeeBps */\n    tag_41:\n      tag_76\n      sload(0x6d)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4930:4973  uint256 public override managementFeePerSec */\n    tag_42:\n      tag_76\n      sload(0x71)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15116:15583  function setExecutor(... */\n    tag_43:\n      tag_84\n      tag_212\n      calldatasize\n      0x04\n      tag_213\n      jump\t// in\n    tag_212:\n      tag_214\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12733:13224  function setAlpacaBeneficiaryConfig(address _newAlpacaBeneficiary, uint256 _newAlpacaBeneficiaryBps)... */\n    tag_44:\n      tag_84\n      tag_216\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_216:\n      tag_217\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5101:5127  address public alpacaToken */\n    tag_45:\n      sload(0x72)\n      tag_80\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3914:3955  address public override getWNativeRelayer */\n    tag_46:\n      sload(0x66)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16126:16646  function setStrategies(... */\n    tag_47:\n      tag_84\n      tag_225\n      calldatasize\n      0x04\n      tag_226\n      jump\t// in\n    tag_225:\n      tag_227\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6174:6206  address public rebalanceExecutor */\n    tag_48:\n      sload(0x80)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15664:15898  function isExecutor(address _caller) external view returns (bool) {... */\n    tag_49:\n      tag_88\n      tag_232\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_232:\n      tag_233\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5040:5075  uint8 public override leverageLevel */\n    tag_50:\n      sload(0x72)\n      tag_235\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_235:\n      mload(0x40)\n        /* \"#utility.yul\":5396:5400   */\n      0xff\n        /* \"#utility.yul\":5384:5401   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5366:5402   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5354:5356   */\n      0x20\n        /* \"#utility.yul\":5339:5357   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5040:5075  uint8 public override leverageLevel */\n      tag_78\n        /* \"#utility.yul\":5224:5408   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10648:11749  function setFees(... */\n    tag_51:\n      tag_84\n      tag_240\n      calldatasize\n      0x04\n      tag_241\n      jump\t// in\n    tag_240:\n      tag_242\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4505:4538  address public depositFeeTreasury */\n    tag_52:\n      sload(0x6c)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3832:3876  address public override getWrappedNativeAddr */\n    tag_53:\n      sload(0x65)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2158:2356  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_54:\n      tag_84\n      tag_250\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_250:\n      tag_251\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5971:6006  uint256 public alpacaBeneficiaryBps */\n    tag_55:\n      tag_76\n      sload(0x7c)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14771:14871  function getReinvestPath() external view returns (address[] memory) {... */\n    tag_56:\n      tag_255\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6046:6080  address public override controller */\n    tag_57:\n      sload(0x7d)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":4307:4353  uint256 public override positionValueTolerance */\n    tag_58:\n      tag_76\n      sload(0x6a)\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9586:9883  function setLeverageLevel(uint8 _newLeverageLevel) external onlyOwner {... */\n    tag_59:\n      tag_84\n      tag_266\n      calldatasize\n      0x04\n      tag_267\n      jump\t// in\n    tag_266:\n      tag_268\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5343:5393  mapping(address => bool) public whitelistedCallers */\n    tag_60:\n      tag_88\n      tag_270\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_270:\n      mstore(0x20, 0x75)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12001:12479  function setAlpacaBountyConfig(address _newAlpacaReinvestFeeTreasury, uint256 _newAlpacaBountyBps)... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3646:3650  2500 */\n      0x09c4\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12143:12162  _newAlpacaBountyBps */\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12143:12186  _newAlpacaBountyBps > MAX_ALPACA_BOUNTY_BPS */\n      gt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12139:12270  if (_newAlpacaBountyBps > MAX_ALPACA_BOUNTY_BPS) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12204:12262  DeltaNeutralVaultConfig_TooMuchBounty(_newAlpacaBountyBps) */\n      mload(0x40)\n      shl(0xe1, 0x2b14f147)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12204:12262  DeltaNeutralVaultConfig_TooMuchBounty(_newAlpacaBountyBps) */\n      tag_278\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12139:12270  if (_newAlpacaBountyBps > MAX_ALPACA_BOUNTY_BPS) {... */\n    tag_281:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12278:12303  alpacaReinvestFeeTreasury */\n      0x79\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12278:12335  alpacaReinvestFeeTreasury = _newAlpacaReinvestFeeTreasury */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12342:12357  alpacaBountyBps */\n      0x7a\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12342:12379  alpacaBountyBps = _newAlpacaBountyBps */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12393:12473  LogSetAlpacaBountyConfig(msg.sender, alpacaReinvestFeeTreasury, alpacaBountyBps) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7431:7482   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":7513:7515   */\n      0x20\n        /* \"#utility.yul\":7498:7516   */\n      dup3\n      add\n        /* \"#utility.yul\":7491:7525   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12418:12428  msg.sender */\n      caller\n      swap2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12393:12473  LogSetAlpacaBountyConfig(msg.sender, alpacaReinvestFeeTreasury, alpacaBountyBps) */\n      0x07a990b3304df1347b430697979619a7a4c80cb4bd939e73ced1f7ca6101d6f6\n      swap2\n        /* \"#utility.yul\":7404:7422   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12393:12473  LogSetAlpacaBountyConfig(msg.sender, alpacaReinvestFeeTreasury, alpacaBountyBps) */\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12001:12479  function setAlpacaBountyConfig(address _newAlpacaReinvestFeeTreasury, uint256 _newAlpacaBountyBps)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8167:8451  function setWhitelistedCallers(address[] calldata _callers, bool _ok) external onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_288:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8268:8280  uint256 _idx */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8263:8446  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n    tag_291:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8286:8308  _idx < _callers.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8263:8446  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8364:8367  _ok */\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8327:8345  whitelistedCallers */\n      0x75\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8327:8361  whitelistedCallers[_callers[_idx]] */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8346:8354  _callers */\n      dup7\n      dup7\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8355:8359  _idx */\n      dup6\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8346:8360  _callers[_idx] */\n      dup2\n      dup2\n      lt\n      tag_295\n      jumpi\n      tag_295\n      tag_296\n      jump\t// in\n    tag_295:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_297\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8327:8361  whitelistedCallers[_callers[_idx]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8327:8367  whitelistedCallers[_callers[_idx]] = _ok */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8418:8426  _callers */\n      dup4\n      dup4\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8427:8431  _idx */\n      dup3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8418:8432  _callers[_idx] */\n      dup2\n      dup2\n      lt\n      tag_299\n      jumpi\n      tag_299\n      tag_296\n      jump\t// in\n    tag_299:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8381:8438  LogSetWhitelistedCallers(msg.sender, _callers[_idx], _ok) */\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8406:8416  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8381:8438  LogSetWhitelistedCallers(msg.sender, _callers[_idx], _ok) */\n      and\n      0x6954b3b4020bd8480cd160fffd549537b617f20a8074ce45b2dee80cab6ef8e2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8434:8437  _ok */\n      dup5\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8381:8438  LogSetWhitelistedCallers(msg.sender, _callers[_idx], _ok) */\n      mload(0x40)\n      tag_301\n      swap2\n        /* \"#utility.yul\":1197:1211   */\n      iszero\n        /* \"#utility.yul\":1190:1212   */\n      iszero\n        /* \"#utility.yul\":1172:1213   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1145:1163   */\n      add\n      swap1\n        /* \"#utility.yul\":1032:1219   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8381:8438  LogSetWhitelistedCallers(msg.sender, _callers[_idx], _ok) */\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8310:8316  _idx++ */\n      dup1\n      tag_302\n      dup2\n      tag_303\n      jump\t// in\n    tag_302:\n      swap2\n      pop\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8263:8446  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n      jump(tag_291)\n    tag_292:\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8167:8451  function setWhitelistedCallers(address[] calldata _callers, bool _ok) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10068:10352  function setFeeExemptedCallers(address[] calldata _callers, bool _ok) external onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_307:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10169:10181  uint256 _idx */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10164:10347  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n    tag_310:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10187:10209  _idx < _callers.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10164:10347  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10265:10268  _ok */\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10228:10246  feeExemptedCallers */\n      0x77\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10228:10262  feeExemptedCallers[_callers[_idx]] */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10247:10255  _callers */\n      dup7\n      dup7\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10256:10260  _idx */\n      dup6\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10247:10261  _callers[_idx] */\n      dup2\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_296\n      jump\t// in\n    tag_314:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_315\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10228:10262  feeExemptedCallers[_callers[_idx]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10228:10268  feeExemptedCallers[_callers[_idx]] = _ok */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10319:10327  _callers */\n      dup4\n      dup4\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10328:10332  _idx */\n      dup3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10319:10333  _callers[_idx] */\n      dup2\n      dup2\n      lt\n      tag_317\n      jumpi\n      tag_317\n      tag_296\n      jump\t// in\n    tag_317:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_318\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10282:10339  LogSetFeeExemptedCallers(msg.sender, _callers[_idx], _ok) */\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10307:10317  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10282:10339  LogSetFeeExemptedCallers(msg.sender, _callers[_idx], _ok) */\n      and\n      0xafed47930189ea124b8d808450ba0e6c685037de026cb6e56907751f1eef52dc\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10335:10338  _ok */\n      dup5\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10282:10339  LogSetFeeExemptedCallers(msg.sender, _callers[_idx], _ok) */\n      mload(0x40)\n      tag_319\n      swap2\n        /* \"#utility.yul\":1197:1211   */\n      iszero\n        /* \"#utility.yul\":1190:1212   */\n      iszero\n        /* \"#utility.yul\":1172:1213   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1145:1163   */\n      add\n      swap1\n        /* \"#utility.yul\":1032:1219   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10282:10339  LogSetFeeExemptedCallers(msg.sender, _callers[_idx], _ok) */\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10211:10217  _idx++ */\n      dup1\n      tag_320\n      dup2\n      tag_303\n      jump\t// in\n    tag_320:\n      swap2\n      pop\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10164:10347  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n      jump(tag_310)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13710:13907  function isVaultSizeAcceptable(uint256 _totalPositionValue) external view returns (bool) {... */\n    tag_110:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13793:13797  bool */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13832:13853  maxVaultPositionValue */\n      sload(0x68)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13810:13829  _totalPositionValue */\n      dup3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13810:13853  _totalPositionValue > maxVaultPositionValue */\n      gt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13806:13884  if (_totalPositionValue > maxVaultPositionValue) {... */\n      iszero\n      tag_322\n      jumpi\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13871:13876  false */\n      0x00\n      swap2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13710:13907  function isVaultSizeAcceptable(uint256 _totalPositionValue) external view returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13806:13884  if (_totalPositionValue > maxVaultPositionValue) {... */\n    tag_322:\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13897:13901  true */\n      0x01\n      swap2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13710:13907  function isVaultSizeAcceptable(uint256 _totalPositionValue) external view returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14015:14259  function setSwapRouter(address _swapRouter) external onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14089:14114  _swapRouter == address(0) */\n      dup2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14085:14166  if (_swapRouter == address(0)) revert DeltaNeutralVaultConfig_InvalidSwapRouter() */\n      tag_329\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14123:14166  DeltaNeutralVaultConfig_InvalidSwapRouter() */\n      mload(0x40)\n      shl(0xe1, 0x4cd66137)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14085:14166  if (_swapRouter == address(0)) revert DeltaNeutralVaultConfig_InvalidSwapRouter() */\n    tag_329:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14173:14186  getSwapRouter */\n      0x73\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14173:14200  getSwapRouter = _swapRouter */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14212:14253  LogSetSwapRouter(msg.sender, _swapRouter) */\n      mload(0x40)\n        /* \"#utility.yul\":342:393   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14229:14239  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14212:14253  LogSetSwapRouter(msg.sender, _swapRouter) */\n      0x05647eff4880e5135952763bda009997b9c8669cac9292ef87f28badca4f32a6\n      swap1\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14212:14253  LogSetSwapRouter(msg.sender, _swapRouter) */\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14015:14259  function setSwapRouter(address _swapRouter) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13385:13582  function setValueLimit(uint256 _maxVaultPositionValue) external onlyOwner {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_334:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13466:13487  maxVaultPositionValue */\n      0x68\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13466:13512  maxVaultPositionValue = _maxVaultPositionValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13524:13576  LogSetValueLimit(msg.sender, _maxVaultPositionValue) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13541:13551  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13524:13576  LogSetValueLimit(msg.sender, _maxVaultPositionValue) */\n      0xa604cbdca7ee706aafea3c555e0385946d7b121453a1b0ac8b3cd58c63014f07\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13524:13576  LogSetValueLimit(msg.sender, _maxVaultPositionValue) */\n      tag_330\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14359:14730  function setReinvestPath(address[] calldata _reinvestPath) external onlyOwner {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_341:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14471:14472  2 */\n      0x02\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14448:14472  _reinvestPath.length < 2 */\n      dup2\n      lt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14444:14532  if (_reinvestPath.length < 2) revert DeltaNeutralVaultConfig_InvalidReinvestPathLength() */\n      iszero\n      tag_344\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14481:14532  DeltaNeutralVaultConfig_InvalidReinvestPathLength() */\n      mload(0x40)\n      shl(0xe0, 0x9be12e77)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14444:14532  if (_reinvestPath.length < 2) revert DeltaNeutralVaultConfig_InvalidReinvestPathLength() */\n    tag_344:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14565:14576  alpacaToken */\n      sload(0x72)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14545:14558  _reinvestPath */\n      dup3\n      dup3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14559:14560  0 */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14545:14558  _reinvestPath */\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14545:14561  _reinvestPath[0] */\n      tag_346\n      jumpi\n      tag_346\n      tag_296\n      jump\t// in\n    tag_346:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_347\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14545:14576  _reinvestPath[0] != alpacaToken */\n      and\n      eq\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14541:14630  if (_reinvestPath[0] != alpacaToken) revert DeltaNeutralVaultConfig_InvalidReinvestPath() */\n      tag_348\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14585:14630  DeltaNeutralVaultConfig_InvalidReinvestPath() */\n      mload(0x40)\n      shl(0xe3, 0x0c3e3d85)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14541:14630  if (_reinvestPath[0] != alpacaToken) revert DeltaNeutralVaultConfig_InvalidReinvestPath() */\n    tag_348:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14639:14667  reinvestPath = _reinvestPath */\n      tag_349\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14639:14651  reinvestPath */\n      0x74\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14654:14667  _reinvestPath */\n      dup4\n      dup4\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14639:14667  reinvestPath = _reinvestPath */\n      tag_350\n      jump\t// in\n    tag_349:\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14698:14708  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14679:14724  LogSetReinvestPath(msg.sender, _reinvestPath) */\n      and\n      0xb67c241a52658f85ec5362073fc9a0909e07aad7e75f92291c35f910c57f8086\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14710:14723  _reinvestPath */\n      dup4\n      dup4\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14679:14724  LogSetReinvestPath(msg.sender, _reinvestPath) */\n      mload(0x40)\n      tag_283\n      swap3\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6484:7229  function initialize(... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3158  _setInitializedVersion(1) */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3156:3157  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3155  _setInitializedVersion */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3158  _setInitializedVersion(1) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3158  bool isTopLevelCall = _setInitializedVersion(1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3172:3186  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3168:3233  if (isTopLevelCall) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3202:3215  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3202:3222  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3168:3233  if (isTopLevelCall) {... */\n    tag_356:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6872:6907  OwnableUpgradeable.__Ownable_init() */\n      tag_358\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6872:6905  OwnableUpgradeable.__Ownable_init */\n      tag_359\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6872:6907  OwnableUpgradeable.__Ownable_init() */\n      jump\t// in\n    tag_358:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6916:6927  alpacaToken */\n      0x72\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6916:6942  alpacaToken = _alpacaToken */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      0x0100\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6951:7034  setFees(_depositFeeTreasury, 0, _withdrawFeeTreasury, 0, _managementFeeTreasury, 0) */\n      tag_360\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6959:6978  _depositFeeTreasury */\n      dup6\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6983:7003  _withdrawFeeTreasury */\n      dup6\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7008:7030  _managementFeeTreasury */\n      dup9\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6951:6958  setFees */\n      tag_242\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6951:7034  setFees(_depositFeeTreasury, 0, _withdrawFeeTreasury, 0, _managementFeeTreasury, 0) */\n      jump\t// in\n    tag_360:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7041:7223  setParams(... */\n      tag_361\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7059:7080  _getWrappedNativeAddr */\n      dup12\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7089:7107  _getWNativeRelayer */\n      dup12\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7116:7131  _fairLaunchAddr */\n      dup12\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7140:7156  _rebalanceFactor */\n      dup12\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7165:7188  _positionValueTolerance */\n      dup12\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7197:7216  _debtRatioTolerance */\n      dup12\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7041:7050  setParams */\n      tag_182\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7041:7223  setParams(... */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3257:3271  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3253:3352  if (isTopLevelCall) {... */\n      iszero\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3303:3308  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3287:3308  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3327:3341  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":5366:5402   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3327:3341  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":5354:5356   */\n      0x20\n        /* \"#utility.yul\":5339:5357   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3327:3341  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3253:3352  if (isTopLevelCall) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3358  {... */\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":6484:7229  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15904:16120  function setSwapConfig(uint256 _swapFee, uint256 _swapFeeDenom) external onlyOwner {... */\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_368:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15994:16001  swapFee */\n      0x82\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15994:16012  swapFee = _swapFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16019:16031  swapFeeDenom */\n      0x83\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16019:16047  swapFeeDenom = _swapFeeDenom */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16061:16114  LogSetSwapConfig(msg.sender, _swapFee, _swapFeeDenom) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8919:8944   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":8975:8977   */\n      0x20\n        /* \"#utility.yul\":8960:8978   */\n      dup2\n      add\n        /* \"#utility.yul\":8953:8987   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16078:16088  msg.sender */\n      caller\n      swap2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16061:16114  LogSetSwapConfig(msg.sender, _swapFee, _swapFeeDenom) */\n      0x377241d1cd344fbe941f17d99a8ea4b7c81990ec2da5f6d7ccfe19b9b1676f8f\n      swap2\n        /* \"#utility.yul\":8892:8910   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16061:16114  LogSetSwapConfig(msg.sender, _swapFee, _swapFeeDenom) */\n      tag_283\n        /* \"#utility.yul\":8745:8993   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1908:2009  function renounceOwnership() public virtual onlyOwner {... */\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1972:2002  _transferOwnership(address(0)) */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1999:2000  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1972:1990  _transferOwnership */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1972:2002  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1908:2009  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7235:7980  function setParams(... */\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_384:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7485:7505  getWrappedNativeAddr */\n      0x65\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7485:7529  getWrappedNativeAddr = _getWrappedNativeAddr */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7536:7553  getWNativeRelayer */\n      0x66\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7536:7574  getWNativeRelayer = _getWNativeRelayer */\n      dup1\n      sload\n      dup10\n      dup4\n      and\n      swap1\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7581:7595  fairLaunchAddr */\n      0x67\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7581:7613  fairLaunchAddr = _fairLaunchAddr */\n      dup1\n      sload\n      swap3\n      dup10\n      and\n      swap3\n      swap1\n      swap4\n      and\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7620:7635  rebalanceFactor */\n      0x69\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7620:7654  rebalanceFactor = _rebalanceFactor */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7661:7683  positionValueTolerance */\n      0x6a\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7661:7709  positionValueTolerance = _positionValueTolerance */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7716:7734  debtRatioTolerance */\n      0x6b\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7716:7756  debtRatioTolerance = _debtRatioTolerance */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7770:7974  LogSetParams(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9323:9357   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":9388:9390   */\n      0x20\n        /* \"#utility.yul\":9373:9391   */\n      dup5\n      add\n        /* \"#utility.yul\":9366:9409   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9425:9443   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9418:9461   */\n      mstore\n        /* \"#utility.yul\":9492:9494   */\n      0x60\n        /* \"#utility.yul\":9477:9495   */\n      dup2\n      add\n        /* \"#utility.yul\":9470:9504   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9535:9538   */\n      0x80\n        /* \"#utility.yul\":9520:9539   */\n      dup2\n      add\n        /* \"#utility.yul\":9513:9548   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9303:9306   */\n      0xa0\n        /* \"#utility.yul\":9564:9583   */\n      dup2\n      add\n        /* \"#utility.yul\":9557:9592   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7791:7801  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7770:7974  LogSetParams(... */\n      0xd4ca73c532248c12fc93b1dd748b3954751548cac9a9565697a3849bf7dd3b4c\n      swap1\n        /* \"#utility.yul\":9272:9275   */\n      0xc0\n        /* \"#utility.yul\":9257:9276   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7770:7974  LogSetParams(... */\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":7235:7980  function setParams(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":5270:5299  address[] public reinvestPath */\n    tag_188:\n      0x74\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_390\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_390:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9128:9424  function setwhitelistedReinvestors(address[] calldata _callers, bool _ok) external onlyOwner {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_395:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9233:9245  uint256 _idx */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9228:9419  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n    tag_398:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9251:9273  _idx < _callers.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9228:9419  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9333:9336  _ok */\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9292:9314  whitelistedReinvestors */\n      0x78\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9292:9330  whitelistedReinvestors[_callers[_idx]] */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9315:9323  _callers */\n      dup7\n      dup7\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9324:9328  _idx */\n      dup6\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9315:9329  _callers[_idx] */\n      dup2\n      dup2\n      lt\n      tag_402\n      jumpi\n      tag_402\n      tag_296\n      jump\t// in\n    tag_402:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_403\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9292:9330  whitelistedReinvestors[_callers[_idx]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9292:9336  whitelistedReinvestors[_callers[_idx]] = _ok */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9391:9399  _callers */\n      dup4\n      dup4\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9400:9404  _idx */\n      dup3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9391:9405  _callers[_idx] */\n      dup2\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_405\n      tag_296\n      jump\t// in\n    tag_405:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_406\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_406:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9350:9411  LogSetWhitelistedReinvestors(msg.sender, _callers[_idx], _ok) */\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9379:9389  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9350:9411  LogSetWhitelistedReinvestors(msg.sender, _callers[_idx], _ok) */\n      and\n      0x9e48685292272e85fa3be83f07779af7794d29a6efb26b5f834bfb48e220d370\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9407:9410  _ok */\n      dup5\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9350:9411  LogSetWhitelistedReinvestors(msg.sender, _callers[_idx], _ok) */\n      mload(0x40)\n      tag_407\n      swap2\n        /* \"#utility.yul\":1197:1211   */\n      iszero\n        /* \"#utility.yul\":1190:1212   */\n      iszero\n        /* \"#utility.yul\":1172:1213   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1145:1163   */\n      add\n      swap1\n        /* \"#utility.yul\":1032:1219   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9350:9411  LogSetWhitelistedReinvestors(msg.sender, _callers[_idx], _ok) */\n    tag_407:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9275:9281  _idx++ */\n      dup1\n      tag_408\n      dup2\n      tag_303\n      jump\t// in\n    tag_408:\n      swap2\n      pop\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9228:9419  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n      jump(tag_398)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14877:15110  function setController(address _controller) external onlyOwner {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_412:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14968:15016  IController(_controller).totalCredit(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x3c88345b)\n      dup2\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15013:15014  0 */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14968:15016  IController(_controller).totalCredit(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":342:393   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14968:15004  IController(_controller).totalCredit */\n      dup3\n      and\n      swap1\n      0xf220d16c\n      swap1\n        /* \"#utility.yul\":315:333   */\n      0x24\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14968:15016  IController(_controller).totalCredit(address(0)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_417\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_417:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_418\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_418:\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15025:15035  controller */\n      0x7d\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15025:15049  controller = _controller */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15063:15104  LogSetController(msg.sender, _controller) */\n      mload(0x40)\n        /* \"#utility.yul\":342:393   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15080:15090  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15063:15104  LogSetController(msg.sender, _controller) */\n      0x1d38dced3210495ad7eff4825fd4dd5cc0e44c11c98519840691e5391c78cd15\n      swap1\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15063:15104  LogSetController(msg.sender, _controller) */\n      tag_330\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8642:8937  function setWhitelistedRebalancer(address[] calldata _callers, bool _ok) external onlyOwner {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_424:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8746:8758  uint256 _idx */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8741:8932  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n    tag_427:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8764:8786  _idx < _callers.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8741:8932  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8846:8849  _ok */\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8805:8827  whitelistedRebalancers */\n      0x76\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8805:8843  whitelistedRebalancers[_callers[_idx]] */\n      0x00\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8828:8836  _callers */\n      dup7\n      dup7\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8837:8841  _idx */\n      dup6\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8828:8842  _callers[_idx] */\n      dup2\n      dup2\n      lt\n      tag_431\n      jumpi\n      tag_431\n      tag_296\n      jump\t// in\n    tag_431:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_432\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_432:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8805:8843  whitelistedRebalancers[_callers[_idx]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8805:8849  whitelistedRebalancers[_callers[_idx]] = _ok */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8904:8912  _callers */\n      dup4\n      dup4\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8913:8917  _idx */\n      dup3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8904:8918  _callers[_idx] */\n      dup2\n      dup2\n      lt\n      tag_434\n      jumpi\n      tag_434\n      tag_296\n      jump\t// in\n    tag_434:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_435\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_435:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8863:8924  LogSetWhitelistedRebalancers(msg.sender, _callers[_idx], _ok) */\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8892:8902  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8863:8924  LogSetWhitelistedRebalancers(msg.sender, _callers[_idx], _ok) */\n      and\n      0xa36d60ecff7c14072a077a9b05c8c98cfdfbf7b5f8e354a071764c27e5330855\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8920:8923  _ok */\n      dup5\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8863:8924  LogSetWhitelistedRebalancers(msg.sender, _callers[_idx], _ok) */\n      mload(0x40)\n      tag_436\n      swap2\n        /* \"#utility.yul\":1197:1211   */\n      iszero\n        /* \"#utility.yul\":1190:1212   */\n      iszero\n        /* \"#utility.yul\":1172:1213   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1145:1163   */\n      add\n      swap1\n        /* \"#utility.yul\":1032:1219   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8863:8924  LogSetWhitelistedRebalancers(msg.sender, _callers[_idx], _ok) */\n    tag_436:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8788:8794  _idx++ */\n      dup1\n      tag_437\n      dup2\n      tag_303\n      jump\t// in\n    tag_437:\n      swap2\n      pop\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":8741:8932  for (uint256 _idx = 0; _idx < _callers.length; _idx++) {... */\n      jump(tag_427)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15116:15583  function setExecutor(... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_441\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_441:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15296:15311  depositExecutor */\n      0x7e\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15296:15330  depositExecutor = _depositExecutor */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15337:15353  withdrawExecutor */\n      0x7f\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15337:15373  withdrawExecutor = _withdrawExecutor */\n      dup1\n      sload\n      dup8\n      dup4\n      and\n      swap1\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15380:15397  rebalanceExecutor */\n      0x80\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15380:15418  rebalanceExecutor = _rebalanceExecutor */\n      dup1\n      sload\n      dup8\n      dup5\n      and\n      swap1\n      dup6\n      and\n      dup2\n      or\n      dup3\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15425:15441  reinvestExecutor */\n      0x81\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15425:15461  reinvestExecutor = _reinvestExecutor */\n      dup1\n      sload\n      swap5\n      dup9\n      and\n      swap5\n      swap1\n      swap6\n      and\n      dup5\n      or\n      swap1\n      swap5\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15475:15577  LogSetExecutor(msg.sender, _depositExecutor, _withdrawExecutor, _rebalanceExecutor, _reinvestExecutor) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10061:10095   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":10126:10128   */\n      0x20\n        /* \"#utility.yul\":10111:10129   */\n      dup7\n      add\n        /* \"#utility.yul\":10104:10147   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10163:10181   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":10156:10199   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10230:10232   */\n      0x60\n        /* \"#utility.yul\":10215:10233   */\n      dup4\n      add\n        /* \"#utility.yul\":10208:10251   */\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15490:15500  msg.sender */\n      caller\n      swap2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15475:15577  LogSetExecutor(msg.sender, _depositExecutor, _withdrawExecutor, _rebalanceExecutor, _reinvestExecutor) */\n      0x11cbce6c87791f09a7c2108a3abea2993ab3de5c9ed89a0bd108618ece832b23\n      swap2\n        /* \"#utility.yul\":9995:10014   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15475:15577  LogSetExecutor(msg.sender, _depositExecutor, _withdrawExecutor, _rebalanceExecutor, _reinvestExecutor) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15116:15583  function setExecutor(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12733:13224  function setAlpacaBeneficiaryConfig(address _newAlpacaBeneficiary, uint256 _newAlpacaBeneficiaryBps)... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_449\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_449:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3709:3713  6000 */\n      0x1770\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12877:12901  _newAlpacaBeneficiaryBps */\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12877:12930  _newAlpacaBeneficiaryBps > MAX_ALPACA_BENEFICIARY_BPS */\n      gt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12873:13019  if (_newAlpacaBeneficiaryBps > MAX_ALPACA_BENEFICIARY_BPS) {... */\n      iszero\n      tag_452\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12948:13011  DeltaNeutralVaultConfig_TooMuchBounty(_newAlpacaBeneficiaryBps) */\n      mload(0x40)\n      shl(0xe1, 0x2b14f147)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12948:13011  DeltaNeutralVaultConfig_TooMuchBounty(_newAlpacaBeneficiaryBps) */\n      tag_278\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":12873:13019  if (_newAlpacaBeneficiaryBps > MAX_ALPACA_BENEFICIARY_BPS) {... */\n    tag_452:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13027:13044  alpacaBeneficiary */\n      0x7b\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13027:13068  alpacaBeneficiary = _newAlpacaBeneficiary */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13075:13095  alpacaBeneficiaryBps */\n      0x7c\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13075:13122  alpacaBeneficiaryBps = _newAlpacaBeneficiaryBps */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13136:13218  LogSetAlpacaBeneficiaryConfig(msg.sender, alpacaBeneficiary, alpacaBeneficiaryBps) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7431:7482   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":7513:7515   */\n      0x20\n        /* \"#utility.yul\":7498:7516   */\n      dup3\n      add\n        /* \"#utility.yul\":7491:7525   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13166:13176  msg.sender */\n      caller\n      swap2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13136:13218  LogSetAlpacaBeneficiaryConfig(msg.sender, alpacaBeneficiary, alpacaBeneficiaryBps) */\n      0x49d9e0ca3aa68af12938170e0cd7267d832389603122e97b1cc70333942b8d21\n      swap2\n        /* \"#utility.yul\":7404:7422   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":13136:13218  LogSetAlpacaBeneficiaryConfig(msg.sender, alpacaBeneficiary, alpacaBeneficiaryBps) */\n      tag_283\n        /* \"#utility.yul\":7257:7531   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16126:16646  function setStrategies(... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_458\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_458:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16303:16331  partialCloseMinimizeStrategy */\n      0x84\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16303:16363  partialCloseMinimizeStrategy = _partialCloseMinimizeStrategy */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16370:16394  stableAddTwoSideStrategy */\n      0x85\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16370:16422  stableAddTwoSideStrategy = _stableAddTwoSideStrategy */\n      dup1\n      sload\n      dup7\n      dup4\n      and\n      swap1\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16429:16452  assetAddTwoSideStrategy */\n      0x86\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16429:16479  assetAddTwoSideStrategy = _assetAddTwoSideStrategy */\n      dup1\n      sload\n      swap3\n      dup7\n      and\n      swap3\n      swap1\n      swap4\n      and\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16493:16640  LogSetStrategies(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10502:10536   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":10567:10569   */\n      0x20\n        /* \"#utility.yul\":10552:10570   */\n      dup5\n      add\n        /* \"#utility.yul\":10545:10588   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10604:10622   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10597:10640   */\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16518:16528  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16493:16640  LogSetStrategies(... */\n      0x4aaf8791c546d8d1000b9d104834f06eea9b95c08f81c36f7eee152623edf4ae\n      swap1\n        /* \"#utility.yul\":10452:10454   */\n      0x60\n        /* \"#utility.yul\":10437:10455   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16493:16640  LogSetStrategies(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":16126:16646  function setStrategies(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15664:15898  function isExecutor(address _caller) external view returns (bool) {... */\n    tag_233:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15762:15777  depositExecutor */\n      sload(0x7e)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15724:15728  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15751:15777  _caller == depositExecutor */\n      dup4\n      dup2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15762:15777  depositExecutor */\n      swap2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15751:15777  _caller == depositExecutor */\n      eq\n      dup1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15751:15815  _caller == depositExecutor ||... */\n      tag_464\n      jumpi\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15799:15815  withdrawExecutor */\n      sload(0x7f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15788:15815  _caller == withdrawExecutor */\n      dup4\n      dup2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15799:15815  withdrawExecutor */\n      swap2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15788:15815  _caller == withdrawExecutor */\n      eq\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15751:15815  _caller == depositExecutor ||... */\n    tag_464:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15751:15854  _caller == depositExecutor ||... */\n      dup1\n      tag_465\n      jumpi\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15837:15854  rebalanceExecutor */\n      sload(0x80)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15826:15854  _caller == rebalanceExecutor */\n      dup4\n      dup2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15837:15854  rebalanceExecutor */\n      swap2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15826:15854  _caller == rebalanceExecutor */\n      eq\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15751:15854  _caller == depositExecutor ||... */\n    tag_465:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15751:15892  _caller == depositExecutor ||... */\n      dup1\n      tag_466\n      jumpi\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15876:15892  reinvestExecutor */\n      sload(0x81)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15865:15892  _caller == reinvestExecutor */\n      dup4\n      dup2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15876:15892  reinvestExecutor */\n      swap2\n      and\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15865:15892  _caller == reinvestExecutor */\n      eq\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15751:15892  _caller == depositExecutor ||... */\n    tag_466:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15737:15892  return... */\n      swap3\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":15664:15898  function isExecutor(address _caller) external view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10648:11749  function setFees(... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_470\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_470:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3461:3465  1000 */\n      0x03e8\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10928:10945  _newDepositFeeBps */\n      dup6\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10928:10967  _newDepositFeeBps > MAX_DEPOSIT_FEE_BPS */\n      gt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10928:11023  _newDepositFeeBps > MAX_DEPOSIT_FEE_BPS ||... */\n      dup1\n      tag_473\n      jumpi\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3520:3524  1000 */\n      0x03e8\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10978:10998  _newWithdrawalFeeBps */\n      dup4\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10978:11023  _newWithdrawalFeeBps > MAX_WITHDRAWAL_FEE_BPS */\n      gt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10928:11023  _newDepositFeeBps > MAX_DEPOSIT_FEE_BPS ||... */\n    tag_473:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10928:11085  _newDepositFeeBps > MAX_DEPOSIT_FEE_BPS ||... */\n      dup1\n      tag_474\n      jumpi\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3582:3592  3170979198 */\n      0xbd014d7e\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11034:11057  _newManagementFeePerSec */\n      dup2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11034:11085  _newManagementFeePerSec > MAX_MANGEMENT_FEE_PER_SEC */\n      gt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10928:11085  _newDepositFeeBps > MAX_DEPOSIT_FEE_BPS ||... */\n    tag_474:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10916:11217  if (... */\n      iszero\n      tag_475\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11109:11209  DeltaNeutralVaultConfig_TooMuchFee(_newDepositFeeBps, _newWithdrawalFeeBps, _newManagementFeePerSec) */\n      mload(0x40)\n      shl(0xe1, 0x4b873b29)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":10853:10878   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":10894:10912   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10887:10921   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10937:10955   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10930:10964   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10826:10844   */\n      0x64\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11109:11209  DeltaNeutralVaultConfig_TooMuchFee(_newDepositFeeBps, _newWithdrawalFeeBps, _newManagementFeePerSec) */\n      tag_278\n        /* \"#utility.yul\":10651:10970   */\n      jump\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":10916:11217  if (... */\n    tag_475:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11225:11243  depositFeeTreasury */\n      0x6c\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11225:11268  depositFeeTreasury = _newDepositFeeTreasury */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11275:11288  depositFeeBps */\n      0x6d\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11275:11308  depositFeeBps = _newDepositFeeBps */\n      dup8\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11317:11338  withdrawalFeeTreasury */\n      0x6e\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11317:11366  withdrawalFeeTreasury = _newWithdrawalFeeTreasury */\n      dup1\n      sload\n      dup8\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11373:11389  withdrawalFeeBps */\n      0x6f\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11373:11412  withdrawalFeeBps = _newWithdrawalFeeBps */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11421:11442  managementFeeTreasury */\n      0x70\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11421:11470  managementFeeTreasury = _newManagementFeeTreasury */\n      dup1\n      sload\n      swap3\n      dup6\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11477:11496  managementFeePerSec */\n      0x71\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11477:11522  managementFeePerSec = _newManagementFeePerSec */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11536:11624  LogSetFees(msg.sender, _newDepositFeeBps, _newWithdrawalFeeBps, _newManagementFeePerSec) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10853:10878   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":10909:10911   */\n      0x20\n        /* \"#utility.yul\":10894:10912   */\n      dup2\n      add\n        /* \"#utility.yul\":10887:10921   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":10937:10955   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":10930:10964   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11547:11557  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11536:11624  LogSetFees(msg.sender, _newDepositFeeBps, _newWithdrawalFeeBps, _newManagementFeePerSec) */\n      0xc4d5650477cd4354e9a07e898df55abe6fecec3e415531e27a8499597b462be2\n      swap1\n        /* \"#utility.yul\":10841:10843   */\n      0x60\n        /* \"#utility.yul\":10826:10844   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11536:11624  LogSetFees(msg.sender, _newDepositFeeBps, _newWithdrawalFeeBps, _newManagementFeePerSec) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11636:11743  LogSetFeeTreasury(msg.sender, _newDepositFeeTreasury, _newWithdrawalFeeTreasury, _newManagementFeeTreasury) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10520:10535   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":10502:10536   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10572:10587   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":10567:10569   */\n      0x20\n        /* \"#utility.yul\":10552:10570   */\n      dup4\n      add\n        /* \"#utility.yul\":10545:10588   */\n      mstore\n        /* \"#utility.yul\":10624:10639   */\n      dup5\n      and\n        /* \"#utility.yul\":10604:10622   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":10597:10640   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11654:11664  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11636:11743  LogSetFeeTreasury(msg.sender, _newDepositFeeTreasury, _newWithdrawalFeeTreasury, _newManagementFeeTreasury) */\n      0x6ebcbf01234512b5d15e025b0aa6bd7514d7f7690b4ff5b260bea6b9aac29e0f\n      swap1\n        /* \"#utility.yul\":10452:10454   */\n      0x60\n        /* \"#utility.yul\":10437:10455   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":11636:11743  LogSetFeeTreasury(msg.sender, _newDepositFeeTreasury, _newWithdrawalFeeTreasury, _newManagementFeeTreasury) */\n      tag_387\n        /* \"#utility.yul\":10262:10646   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2158:2356  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_483\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_483:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2246:2268  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2238:2311  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_486\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11177:11179   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2238:2311  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11159:11180   */\n      mstore\n        /* \"#utility.yul\":11216:11218   */\n      0x26\n        /* \"#utility.yul\":11196:11214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11189:11219   */\n      mstore\n        /* \"#utility.yul\":11255:11289   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11235:11253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11228:11290   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11306:11324   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11299:11335   */\n      mstore\n        /* \"#utility.yul\":11352:11371   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2238:2311  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_278\n        /* \"#utility.yul\":10975:11377   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2238:2311  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_486:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2349  _transferOwnership(newOwner) */\n      tag_489\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2340:2348  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2339  _transferOwnership */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2349  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_489:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2158:2356  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14771:14871  function getReinvestPath() external view returns (address[] memory) {... */\n    tag_256:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14821:14837  address[] memory */\n      0x60\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14853:14865  reinvestPath */\n      0x74\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14846:14865  return reinvestPath */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_491\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_492:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_492\n      jumpi\n    tag_491:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":14771:14871  function getReinvestPath() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9586:9883  function setLeverageLevel(uint8 _newLeverageLevel) external onlyOwner {... */\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_496\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_496:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":3408:3409  3 */\n      0x03\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9667:9705  _newLeverageLevel < MIN_LEVERAGE_LEVEL */\n      0xff\n      dup3\n      and\n      lt\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9663:9776  if (_newLeverageLevel < MIN_LEVERAGE_LEVEL) {... */\n      iszero\n      tag_499\n      jumpi\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9723:9768  DeltaNeutralVaultConfig_LeverageLevelTooLow() */\n      mload(0x40)\n      shl(0xe1, 0x279a13c3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9663:9776  if (_newLeverageLevel < MIN_LEVERAGE_LEVEL) {... */\n    tag_499:\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9782:9795  leverageLevel */\n      0x72\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9782:9815  leverageLevel = _newLeverageLevel */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9827:9877  LogSetLeverageLevel(msg.sender, _newLeverageLevel) */\n      mload(0x40)\n        /* \"#utility.yul\":5366:5402   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9847:9857  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9827:9877  LogSetLeverageLevel(msg.sender, _newLeverageLevel) */\n      0x0162496fc30aed361442504cdd534d5911e2997e66eb97f7455486c9476c8bfb\n      swap1\n        /* \"#utility.yul\":5354:5356   */\n      0x20\n        /* \"#utility.yul\":5339:5357   */\n      add\n        /* \"contracts/DeltaNeutralVaultConfig02.sol\":9827:9877  LogSetLeverageLevel(msg.sender, _newLeverageLevel) */\n      tag_330\n        /* \"#utility.yul\":5224:5408   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5287:6095  function _setInitializedVersion(uint8 version) private returns (bool) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5351:5355  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5684:5697  _initializing */\n      dup1\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5680:6089  if (_initializing) {... */\n      iszero\n      tag_503\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5745  version */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5750  version == 1 */\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5749:5750  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5750  version == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5799  version == 1 && !AddressUpgradeable.isContract(address(this)) */\n      dup1\n      iszero\n      tag_504\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5793:5797  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5799  version == 1 && !AddressUpgradeable.isContract(address(this)) */\n    tag_504:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5713:5879  require(... */\n      tag_507\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_509\n      jump\t// in\n    tag_507:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5900:5905  false */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5287:6095  function _setInitializedVersion(uint8 version) private returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5680:6089  if (_initializing) {... */\n    tag_503:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5944:5956  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5944:5966  _initialized < version */\n      0xff\n      dup1\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5944:5956  _initialized */\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5944:5966  _initialized < version */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5936:6017  require(_initialized < version, \"Initializable: contract is already initialized\") */\n      tag_511\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_509\n      jump\t// in\n    tag_511:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6031:6043  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6031:6053  _initialized = version */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5287:6095  function _setInitializedVersion(uint8 version) private returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5680:6089  if (_initializing) {... */\n    tag_510:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5287:6095  function _setInitializedVersion(uint8 version) private returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1083  function __Ownable_init() internal onlyInitializing {... */\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4698:4711  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4690:4759  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_514\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_516\n      jump\t// in\n    tag_514:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1050:1076  __Ownable_init_unchained() */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1050:1074  __Ownable_init_unchained */\n      tag_519\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1050:1076  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2510:2697  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2602:2608  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2618:2635  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2650:2690  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2602:2608  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2618:2635  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2602:2608  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2650:2690  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2583:2599  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2650:2690  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2573:2697  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2510:2697  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1089:1200  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_519:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4698:4711  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4690:4759  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_523\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_516\n      jump\t// in\n    tag_523:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1161:1193  _transferOwnership(_msgSender()) */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1161:1179  _transferOwnership */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1161:1193  _transferOwnership(_msgSender()) */\n      jump\t// in\n    tag_350:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_530\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_529:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_530\n      jumpi\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      calldataload\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_529)\n    tag_530:\n      pop\n      tag_531\n      swap3\n      swap2\n      pop\n      tag_532\n      jump\t// in\n    tag_531:\n      pop\n      swap1\n      jump\t// out\n    tag_532:\n    tag_533:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_531\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_533)\n        /* \"#utility.yul\":404:577   */\n    tag_535:\n        /* \"#utility.yul\":472:492   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":521:552   */\n      dup2\n      and\n        /* \"#utility.yul\":511:553   */\n      dup2\n      eq\n        /* \"#utility.yul\":501:571   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":567:568   */\n      0x00\n        /* \"#utility.yul\":564:565   */\n      dup1\n        /* \"#utility.yul\":557:569   */\n      revert\n        /* \"#utility.yul\":582:836   */\n    tag_86:\n        /* \"#utility.yul\":650:656   */\n      0x00\n        /* \"#utility.yul\":658:664   */\n      dup1\n        /* \"#utility.yul\":711:713   */\n      0x40\n        /* \"#utility.yul\":699:708   */\n      dup4\n        /* \"#utility.yul\":690:697   */\n      dup6\n        /* \"#utility.yul\":686:709   */\n      sub\n        /* \"#utility.yul\":682:714   */\n      slt\n        /* \"#utility.yul\":679:731   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":727:728   */\n      0x00\n        /* \"#utility.yul\":724:725   */\n      dup1\n        /* \"#utility.yul\":717:729   */\n      revert\n        /* \"#utility.yul\":679:731   */\n    tag_543:\n        /* \"#utility.yul\":750:779   */\n      tag_544\n        /* \"#utility.yul\":769:778   */\n      dup4\n        /* \"#utility.yul\":750:779   */\n      tag_535\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":740:779   */\n      swap5\n        /* \"#utility.yul\":826:828   */\n      0x20\n        /* \"#utility.yul\":811:829   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":798:830   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":582:836   */\n      jump\t// out\n        /* \"#utility.yul\":841:1027   */\n    tag_90:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":953:955   */\n      0x20\n        /* \"#utility.yul\":941:950   */\n      dup3\n        /* \"#utility.yul\":932:939   */\n      dup5\n        /* \"#utility.yul\":928:951   */\n      sub\n        /* \"#utility.yul\":924:956   */\n      slt\n        /* \"#utility.yul\":921:973   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":969:970   */\n      0x00\n        /* \"#utility.yul\":966:967   */\n      dup1\n        /* \"#utility.yul\":959:971   */\n      revert\n        /* \"#utility.yul\":921:973   */\n    tag_546:\n        /* \"#utility.yul\":992:1021   */\n      tag_547\n        /* \"#utility.yul\":1011:1020   */\n      dup3\n        /* \"#utility.yul\":992:1021   */\n      tag_535\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":982:1021   */\n      swap4\n        /* \"#utility.yul\":841:1027   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1224:1591   */\n    tag_536:\n        /* \"#utility.yul\":1287:1295   */\n      0x00\n        /* \"#utility.yul\":1297:1303   */\n      dup1\n        /* \"#utility.yul\":1351:1354   */\n      dup4\n        /* \"#utility.yul\":1344:1348   */\n      0x1f\n        /* \"#utility.yul\":1336:1342   */\n      dup5\n        /* \"#utility.yul\":1332:1349   */\n      add\n        /* \"#utility.yul\":1328:1355   */\n      slt\n        /* \"#utility.yul\":1318:1373   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":1369:1370   */\n      0x00\n        /* \"#utility.yul\":1366:1367   */\n      dup1\n        /* \"#utility.yul\":1359:1371   */\n      revert\n        /* \"#utility.yul\":1318:1373   */\n    tag_550:\n      pop\n        /* \"#utility.yul\":1392:1412   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1435:1453   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1424:1454   */\n      dup2\n      gt\n        /* \"#utility.yul\":1421:1471   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1421:1471   */\n    tag_551:\n        /* \"#utility.yul\":1504:1508   */\n      0x20\n        /* \"#utility.yul\":1496:1502   */\n      dup4\n        /* \"#utility.yul\":1492:1509   */\n      add\n        /* \"#utility.yul\":1480:1509   */\n      swap2\n      pop\n        /* \"#utility.yul\":1564:1567   */\n      dup4\n        /* \"#utility.yul\":1557:1561   */\n      0x20\n        /* \"#utility.yul\":1547:1553   */\n      dup3\n        /* \"#utility.yul\":1544:1545   */\n      0x05\n        /* \"#utility.yul\":1540:1554   */\n      shl\n        /* \"#utility.yul\":1532:1538   */\n      dup6\n        /* \"#utility.yul\":1528:1555   */\n      add\n        /* \"#utility.yul\":1524:1562   */\n      add\n        /* \"#utility.yul\":1521:1568   */\n      gt\n        /* \"#utility.yul\":1518:1585   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1578:1579   */\n      dup1\n        /* \"#utility.yul\":1571:1583   */\n      revert\n        /* \"#utility.yul\":1518:1585   */\n    tag_552:\n        /* \"#utility.yul\":1224:1591   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1596:2194   */\n    tag_96:\n        /* \"#utility.yul\":1688:1694   */\n      0x00\n        /* \"#utility.yul\":1696:1702   */\n      dup1\n        /* \"#utility.yul\":1704:1710   */\n      0x00\n        /* \"#utility.yul\":1757:1759   */\n      0x40\n        /* \"#utility.yul\":1745:1754   */\n      dup5\n        /* \"#utility.yul\":1736:1743   */\n      dup7\n        /* \"#utility.yul\":1732:1755   */\n      sub\n        /* \"#utility.yul\":1728:1760   */\n      slt\n        /* \"#utility.yul\":1725:1777   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":1773:1774   */\n      0x00\n        /* \"#utility.yul\":1770:1771   */\n      dup1\n        /* \"#utility.yul\":1763:1775   */\n      revert\n        /* \"#utility.yul\":1725:1777   */\n    tag_554:\n        /* \"#utility.yul\":1813:1822   */\n      dup4\n        /* \"#utility.yul\":1800:1823   */\n      calldataload\n        /* \"#utility.yul\":1846:1864   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1838:1844   */\n      dup2\n        /* \"#utility.yul\":1835:1865   */\n      gt\n        /* \"#utility.yul\":1832:1882   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":1878:1879   */\n      0x00\n        /* \"#utility.yul\":1875:1876   */\n      dup1\n        /* \"#utility.yul\":1868:1880   */\n      revert\n        /* \"#utility.yul\":1832:1882   */\n    tag_555:\n        /* \"#utility.yul\":1917:1987   */\n      tag_556\n        /* \"#utility.yul\":1979:1986   */\n      dup7\n        /* \"#utility.yul\":1970:1976   */\n      dup3\n        /* \"#utility.yul\":1959:1968   */\n      dup8\n        /* \"#utility.yul\":1955:1977   */\n      add\n        /* \"#utility.yul\":1917:1987   */\n      tag_536\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":2006:2014   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1891:1987   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2091:2093   */\n      0x20\n        /* \"#utility.yul\":2076:2094   */\n      dup5\n      add\n        /* \"#utility.yul\":2063:2095   */\n      calldataload\n        /* \"#utility.yul\":2131:2144   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2124:2145   */\n      iszero\n        /* \"#utility.yul\":2114:2146   */\n      dup2\n      eq\n        /* \"#utility.yul\":2104:2164   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":2160:2161   */\n      0x00\n        /* \"#utility.yul\":2157:2158   */\n      dup1\n        /* \"#utility.yul\":2150:2162   */\n      revert\n        /* \"#utility.yul\":2104:2164   */\n    tag_557:\n        /* \"#utility.yul\":2183:2188   */\n      dup1\n        /* \"#utility.yul\":2173:2188   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1596:2194   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2199:2379   */\n    tag_109:\n        /* \"#utility.yul\":2258:2264   */\n      0x00\n        /* \"#utility.yul\":2311:2313   */\n      0x20\n        /* \"#utility.yul\":2299:2308   */\n      dup3\n        /* \"#utility.yul\":2290:2297   */\n      dup5\n        /* \"#utility.yul\":2286:2309   */\n      sub\n        /* \"#utility.yul\":2282:2314   */\n      slt\n        /* \"#utility.yul\":2279:2331   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":2327:2328   */\n      0x00\n        /* \"#utility.yul\":2324:2325   */\n      dup1\n        /* \"#utility.yul\":2317:2329   */\n      revert\n        /* \"#utility.yul\":2279:2331   */\n    tag_559:\n      pop\n        /* \"#utility.yul\":2350:2373   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2199:2379   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2384:2821   */\n    tag_152:\n        /* \"#utility.yul\":2470:2476   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup1\n        /* \"#utility.yul\":2531:2533   */\n      0x20\n        /* \"#utility.yul\":2519:2528   */\n      dup4\n        /* \"#utility.yul\":2510:2517   */\n      dup6\n        /* \"#utility.yul\":2506:2529   */\n      sub\n        /* \"#utility.yul\":2502:2534   */\n      slt\n        /* \"#utility.yul\":2499:2551   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":2547:2548   */\n      0x00\n        /* \"#utility.yul\":2544:2545   */\n      dup1\n        /* \"#utility.yul\":2537:2549   */\n      revert\n        /* \"#utility.yul\":2499:2551   */\n    tag_561:\n        /* \"#utility.yul\":2587:2596   */\n      dup3\n        /* \"#utility.yul\":2574:2597   */\n      calldataload\n        /* \"#utility.yul\":2620:2638   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2612:2618   */\n      dup2\n        /* \"#utility.yul\":2609:2639   */\n      gt\n        /* \"#utility.yul\":2606:2656   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":2652:2653   */\n      0x00\n        /* \"#utility.yul\":2649:2650   */\n      dup1\n        /* \"#utility.yul\":2642:2654   */\n      revert\n        /* \"#utility.yul\":2606:2656   */\n    tag_562:\n        /* \"#utility.yul\":2691:2761   */\n      tag_563\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2691:2761   */\n      tag_536\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":2780:2788   */\n      swap1\n      swap7\n        /* \"#utility.yul\":2665:2761   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":2384:2821   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:3667   */\n    tag_159:\n        /* \"#utility.yul\":2966:2972   */\n      0x00\n        /* \"#utility.yul\":2974:2980   */\n      dup1\n        /* \"#utility.yul\":2982:2988   */\n      0x00\n        /* \"#utility.yul\":2990:2996   */\n      dup1\n        /* \"#utility.yul\":2998:3004   */\n      0x00\n        /* \"#utility.yul\":3006:3012   */\n      dup1\n        /* \"#utility.yul\":3014:3020   */\n      0x00\n        /* \"#utility.yul\":3022:3028   */\n      dup1\n        /* \"#utility.yul\":3030:3036   */\n      0x00\n        /* \"#utility.yul\":3038:3044   */\n      dup1\n        /* \"#utility.yul\":3091:3094   */\n      0x0140\n        /* \"#utility.yul\":3079:3088   */\n      dup12\n        /* \"#utility.yul\":3070:3077   */\n      dup14\n        /* \"#utility.yul\":3066:3089   */\n      sub\n        /* \"#utility.yul\":3062:3095   */\n      slt\n        /* \"#utility.yul\":3059:3112   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":3108:3109   */\n      0x00\n        /* \"#utility.yul\":3105:3106   */\n      dup1\n        /* \"#utility.yul\":3098:3110   */\n      revert\n        /* \"#utility.yul\":3059:3112   */\n    tag_565:\n        /* \"#utility.yul\":3131:3160   */\n      tag_566\n        /* \"#utility.yul\":3150:3159   */\n      dup12\n        /* \"#utility.yul\":3131:3160   */\n      tag_535\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":3121:3160   */\n      swap10\n      pop\n        /* \"#utility.yul\":3179:3217   */\n      tag_567\n        /* \"#utility.yul\":3213:3215   */\n      0x20\n        /* \"#utility.yul\":3202:3211   */\n      dup13\n        /* \"#utility.yul\":3198:3216   */\n      add\n        /* \"#utility.yul\":3179:3217   */\n      tag_535\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":3169:3217   */\n      swap9\n      pop\n        /* \"#utility.yul\":3236:3274   */\n      tag_568\n        /* \"#utility.yul\":3270:3272   */\n      0x40\n        /* \"#utility.yul\":3259:3268   */\n      dup13\n        /* \"#utility.yul\":3255:3273   */\n      add\n        /* \"#utility.yul\":3236:3274   */\n      tag_535\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":3226:3274   */\n      swap8\n      pop\n        /* \"#utility.yul\":3321:3323   */\n      0x60\n        /* \"#utility.yul\":3310:3319   */\n      dup12\n        /* \"#utility.yul\":3306:3324   */\n      add\n        /* \"#utility.yul\":3293:3325   */\n      calldataload\n        /* \"#utility.yul\":3283:3325   */\n      swap7\n      pop\n        /* \"#utility.yul\":3372:3375   */\n      0x80\n        /* \"#utility.yul\":3361:3370   */\n      dup12\n        /* \"#utility.yul\":3357:3376   */\n      add\n        /* \"#utility.yul\":3344:3377   */\n      calldataload\n        /* \"#utility.yul\":3334:3377   */\n      swap6\n      pop\n        /* \"#utility.yul\":3424:3427   */\n      0xa0\n        /* \"#utility.yul\":3413:3422   */\n      dup12\n        /* \"#utility.yul\":3409:3428   */\n      add\n        /* \"#utility.yul\":3396:3429   */\n      calldataload\n        /* \"#utility.yul\":3386:3429   */\n      swap5\n      pop\n        /* \"#utility.yul\":3448:3487   */\n      tag_569\n        /* \"#utility.yul\":3482:3485   */\n      0xc0\n        /* \"#utility.yul\":3471:3480   */\n      dup13\n        /* \"#utility.yul\":3467:3486   */\n      add\n        /* \"#utility.yul\":3448:3487   */\n      tag_535\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":3438:3487   */\n      swap4\n      pop\n        /* \"#utility.yul\":3506:3545   */\n      tag_570\n        /* \"#utility.yul\":3540:3543   */\n      0xe0\n        /* \"#utility.yul\":3529:3538   */\n      dup13\n        /* \"#utility.yul\":3525:3544   */\n      add\n        /* \"#utility.yul\":3506:3545   */\n      tag_535\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":3496:3545   */\n      swap3\n      pop\n        /* \"#utility.yul\":3564:3603   */\n      tag_571\n        /* \"#utility.yul\":3598:3601   */\n      0x0100\n        /* \"#utility.yul\":3587:3596   */\n      dup13\n        /* \"#utility.yul\":3583:3602   */\n      add\n        /* \"#utility.yul\":3564:3603   */\n      tag_535\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":3554:3603   */\n      swap2\n      pop\n        /* \"#utility.yul\":3622:3661   */\n      tag_572\n        /* \"#utility.yul\":3656:3659   */\n      0x0120\n        /* \"#utility.yul\":3645:3654   */\n      dup13\n        /* \"#utility.yul\":3641:3660   */\n      add\n        /* \"#utility.yul\":3622:3661   */\n      tag_535\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":3612:3661   */\n      swap1\n      pop\n        /* \"#utility.yul\":2826:3667   */\n      swap3\n      swap6\n      swap9\n      swap12\n      swap2\n      swap5\n      swap8\n      swap11\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3672:3920   */\n    tag_169:\n        /* \"#utility.yul\":3740:3746   */\n      0x00\n        /* \"#utility.yul\":3748:3754   */\n      dup1\n        /* \"#utility.yul\":3801:3803   */\n      0x40\n        /* \"#utility.yul\":3789:3798   */\n      dup4\n        /* \"#utility.yul\":3780:3787   */\n      dup6\n        /* \"#utility.yul\":3776:3799   */\n      sub\n        /* \"#utility.yul\":3772:3804   */\n      slt\n        /* \"#utility.yul\":3769:3821   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":3817:3818   */\n      0x00\n        /* \"#utility.yul\":3814:3815   */\n      dup1\n        /* \"#utility.yul\":3807:3819   */\n      revert\n        /* \"#utility.yul\":3769:3821   */\n    tag_574:\n      pop\n      pop\n        /* \"#utility.yul\":3840:3863   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3910:3912   */\n      0x20\n        /* \"#utility.yul\":3895:3913   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3882:3914   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3672:3920   */\n      jump\t// out\n        /* \"#utility.yul\":3925:4466   */\n    tag_181:\n        /* \"#utility.yul\":4029:4035   */\n      0x00\n        /* \"#utility.yul\":4037:4043   */\n      dup1\n        /* \"#utility.yul\":4045:4051   */\n      0x00\n        /* \"#utility.yul\":4053:4059   */\n      dup1\n        /* \"#utility.yul\":4061:4067   */\n      0x00\n        /* \"#utility.yul\":4069:4075   */\n      dup1\n        /* \"#utility.yul\":4122:4125   */\n      0xc0\n        /* \"#utility.yul\":4110:4119   */\n      dup8\n        /* \"#utility.yul\":4101:4108   */\n      dup10\n        /* \"#utility.yul\":4097:4120   */\n      sub\n        /* \"#utility.yul\":4093:4126   */\n      slt\n        /* \"#utility.yul\":4090:4143   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4136:4137   */\n      dup1\n        /* \"#utility.yul\":4129:4141   */\n      revert\n        /* \"#utility.yul\":4090:4143   */\n    tag_576:\n        /* \"#utility.yul\":4162:4191   */\n      tag_577\n        /* \"#utility.yul\":4181:4190   */\n      dup8\n        /* \"#utility.yul\":4162:4191   */\n      tag_535\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":4152:4191   */\n      swap6\n      pop\n        /* \"#utility.yul\":4210:4248   */\n      tag_578\n        /* \"#utility.yul\":4244:4246   */\n      0x20\n        /* \"#utility.yul\":4233:4242   */\n      dup9\n        /* \"#utility.yul\":4229:4247   */\n      add\n        /* \"#utility.yul\":4210:4248   */\n      tag_535\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":4200:4248   */\n      swap5\n      pop\n        /* \"#utility.yul\":4267:4305   */\n      tag_579\n        /* \"#utility.yul\":4301:4303   */\n      0x40\n        /* \"#utility.yul\":4290:4299   */\n      dup9\n        /* \"#utility.yul\":4286:4304   */\n      add\n        /* \"#utility.yul\":4267:4305   */\n      tag_535\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":4257:4305   */\n      swap4\n      pop\n        /* \"#utility.yul\":4352:4354   */\n      0x60\n        /* \"#utility.yul\":4341:4350   */\n      dup8\n        /* \"#utility.yul\":4337:4355   */\n      add\n        /* \"#utility.yul\":4324:4356   */\n      calldataload\n        /* \"#utility.yul\":4314:4356   */\n      swap3\n      pop\n        /* \"#utility.yul\":4403:4406   */\n      0x80\n        /* \"#utility.yul\":4392:4401   */\n      dup8\n        /* \"#utility.yul\":4388:4407   */\n      add\n        /* \"#utility.yul\":4375:4408   */\n      calldataload\n        /* \"#utility.yul\":4365:4408   */\n      swap2\n      pop\n        /* \"#utility.yul\":4455:4458   */\n      0xa0\n        /* \"#utility.yul\":4444:4453   */\n      dup8\n        /* \"#utility.yul\":4440:4459   */\n      add\n        /* \"#utility.yul\":4427:4460   */\n      calldataload\n        /* \"#utility.yul\":4417:4460   */\n      swap1\n      pop\n        /* \"#utility.yul\":3925:4466   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4471:4880   */\n    tag_213:\n        /* \"#utility.yul\":4557:4563   */\n      0x00\n        /* \"#utility.yul\":4565:4571   */\n      dup1\n        /* \"#utility.yul\":4573:4579   */\n      0x00\n        /* \"#utility.yul\":4581:4587   */\n      dup1\n        /* \"#utility.yul\":4634:4637   */\n      0x80\n        /* \"#utility.yul\":4622:4631   */\n      dup6\n        /* \"#utility.yul\":4613:4620   */\n      dup8\n        /* \"#utility.yul\":4609:4632   */\n      sub\n        /* \"#utility.yul\":4605:4638   */\n      slt\n        /* \"#utility.yul\":4602:4655   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":4651:4652   */\n      0x00\n        /* \"#utility.yul\":4648:4649   */\n      dup1\n        /* \"#utility.yul\":4641:4653   */\n      revert\n        /* \"#utility.yul\":4602:4655   */\n    tag_581:\n        /* \"#utility.yul\":4674:4703   */\n      tag_582\n        /* \"#utility.yul\":4693:4702   */\n      dup6\n        /* \"#utility.yul\":4674:4703   */\n      tag_535\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":4664:4703   */\n      swap4\n      pop\n        /* \"#utility.yul\":4722:4760   */\n      tag_583\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup7\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4722:4760   */\n      tag_535\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":4712:4760   */\n      swap3\n      pop\n        /* \"#utility.yul\":4779:4817   */\n      tag_584\n        /* \"#utility.yul\":4813:4815   */\n      0x40\n        /* \"#utility.yul\":4802:4811   */\n      dup7\n        /* \"#utility.yul\":4798:4816   */\n      add\n        /* \"#utility.yul\":4779:4817   */\n      tag_535\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":4769:4817   */\n      swap2\n      pop\n        /* \"#utility.yul\":4836:4874   */\n      tag_585\n        /* \"#utility.yul\":4870:4872   */\n      0x60\n        /* \"#utility.yul\":4859:4868   */\n      dup7\n        /* \"#utility.yul\":4855:4873   */\n      add\n        /* \"#utility.yul\":4836:4874   */\n      tag_535\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":4826:4874   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4885:5219   */\n    tag_226:\n        /* \"#utility.yul\":4962:4968   */\n      0x00\n        /* \"#utility.yul\":4970:4976   */\n      dup1\n        /* \"#utility.yul\":4978:4984   */\n      0x00\n        /* \"#utility.yul\":5031:5033   */\n      0x60\n        /* \"#utility.yul\":5019:5028   */\n      dup5\n        /* \"#utility.yul\":5010:5017   */\n      dup7\n        /* \"#utility.yul\":5006:5029   */\n      sub\n        /* \"#utility.yul\":5002:5034   */\n      slt\n        /* \"#utility.yul\":4999:5051   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":4999:5051   */\n    tag_587:\n        /* \"#utility.yul\":5070:5099   */\n      tag_588\n        /* \"#utility.yul\":5089:5098   */\n      dup5\n        /* \"#utility.yul\":5070:5099   */\n      tag_535\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":5060:5099   */\n      swap3\n      pop\n        /* \"#utility.yul\":5118:5156   */\n      tag_589\n        /* \"#utility.yul\":5152:5154   */\n      0x20\n        /* \"#utility.yul\":5141:5150   */\n      dup6\n        /* \"#utility.yul\":5137:5155   */\n      add\n        /* \"#utility.yul\":5118:5156   */\n      tag_535\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":5108:5156   */\n      swap2\n      pop\n        /* \"#utility.yul\":5175:5213   */\n      tag_590\n        /* \"#utility.yul\":5209:5211   */\n      0x40\n        /* \"#utility.yul\":5198:5207   */\n      dup6\n        /* \"#utility.yul\":5194:5212   */\n      add\n        /* \"#utility.yul\":5175:5213   */\n      tag_535\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":5165:5213   */\n      swap1\n      pop\n        /* \"#utility.yul\":4885:5219   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5413:5954   */\n    tag_241:\n        /* \"#utility.yul\":5517:5523   */\n      0x00\n        /* \"#utility.yul\":5525:5531   */\n      dup1\n        /* \"#utility.yul\":5533:5539   */\n      0x00\n        /* \"#utility.yul\":5541:5547   */\n      dup1\n        /* \"#utility.yul\":5549:5555   */\n      0x00\n        /* \"#utility.yul\":5557:5563   */\n      dup1\n        /* \"#utility.yul\":5610:5613   */\n      0xc0\n        /* \"#utility.yul\":5598:5607   */\n      dup8\n        /* \"#utility.yul\":5589:5596   */\n      dup10\n        /* \"#utility.yul\":5585:5608   */\n      sub\n        /* \"#utility.yul\":5581:5614   */\n      slt\n        /* \"#utility.yul\":5578:5631   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":5627:5628   */\n      0x00\n        /* \"#utility.yul\":5624:5625   */\n      dup1\n        /* \"#utility.yul\":5617:5629   */\n      revert\n        /* \"#utility.yul\":5578:5631   */\n    tag_593:\n        /* \"#utility.yul\":5650:5679   */\n      tag_594\n        /* \"#utility.yul\":5669:5678   */\n      dup8\n        /* \"#utility.yul\":5650:5679   */\n      tag_535\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":5640:5679   */\n      swap6\n      pop\n        /* \"#utility.yul\":5726:5728   */\n      0x20\n        /* \"#utility.yul\":5715:5724   */\n      dup8\n        /* \"#utility.yul\":5711:5729   */\n      add\n        /* \"#utility.yul\":5698:5730   */\n      calldataload\n        /* \"#utility.yul\":5688:5730   */\n      swap5\n      pop\n        /* \"#utility.yul\":5749:5787   */\n      tag_595\n        /* \"#utility.yul\":5783:5785   */\n      0x40\n        /* \"#utility.yul\":5772:5781   */\n      dup9\n        /* \"#utility.yul\":5768:5786   */\n      add\n        /* \"#utility.yul\":5749:5787   */\n      tag_535\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":5739:5787   */\n      swap4\n      pop\n        /* \"#utility.yul\":5834:5836   */\n      0x60\n        /* \"#utility.yul\":5823:5832   */\n      dup8\n        /* \"#utility.yul\":5819:5837   */\n      add\n        /* \"#utility.yul\":5806:5838   */\n      calldataload\n        /* \"#utility.yul\":5796:5838   */\n      swap3\n      pop\n        /* \"#utility.yul\":5857:5896   */\n      tag_596\n        /* \"#utility.yul\":5891:5894   */\n      0x80\n        /* \"#utility.yul\":5880:5889   */\n      dup9\n        /* \"#utility.yul\":5876:5895   */\n      add\n        /* \"#utility.yul\":5857:5896   */\n      tag_535\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":5847:5896   */\n      swap2\n      pop\n        /* \"#utility.yul\":5943:5946   */\n      0xa0\n        /* \"#utility.yul\":5932:5941   */\n      dup8\n        /* \"#utility.yul\":5928:5947   */\n      add\n        /* \"#utility.yul\":5915:5948   */\n      calldataload\n        /* \"#utility.yul\":5905:5948   */\n      swap1\n      pop\n        /* \"#utility.yul\":5413:5954   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":5959:6617   */\n    tag_258:\n        /* \"#utility.yul\":6130:6132   */\n      0x20\n        /* \"#utility.yul\":6182:6203   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6252:6265   */\n      dup3\n      mload\n        /* \"#utility.yul\":6155:6173   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6274:6296   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6101:6105   */\n      0x00\n      swap2\n        /* \"#utility.yul\":6130:6132   */\n      swap1\n        /* \"#utility.yul\":6353:6368   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6327:6329   */\n      0x40\n        /* \"#utility.yul\":6312:6330   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":6101:6105   */\n      dup5\n        /* \"#utility.yul\":6396:6591   */\n    tag_598:\n        /* \"#utility.yul\":6410:6416   */\n      dup2\n        /* \"#utility.yul\":6407:6408   */\n      dup2\n        /* \"#utility.yul\":6404:6417   */\n      lt\n        /* \"#utility.yul\":6396:6591   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":6475:6488   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6471:6510   */\n      and\n        /* \"#utility.yul\":6459:6511   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6566:6581   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6531:6543   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":6507:6508   */\n      0x01\n        /* \"#utility.yul\":6425:6434   */\n      add\n        /* \"#utility.yul\":6396:6591   */\n      jump(tag_598)\n    tag_600:\n      pop\n        /* \"#utility.yul\":6608:6611   */\n      swap1\n      swap7\n        /* \"#utility.yul\":5959:6617   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6622:6891   */\n    tag_267:\n        /* \"#utility.yul\":6679:6685   */\n      0x00\n        /* \"#utility.yul\":6732:6734   */\n      0x20\n        /* \"#utility.yul\":6720:6729   */\n      dup3\n        /* \"#utility.yul\":6711:6718   */\n      dup5\n        /* \"#utility.yul\":6707:6730   */\n      sub\n        /* \"#utility.yul\":6703:6735   */\n      slt\n        /* \"#utility.yul\":6700:6752   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":6748:6749   */\n      0x00\n        /* \"#utility.yul\":6745:6746   */\n      dup1\n        /* \"#utility.yul\":6738:6750   */\n      revert\n        /* \"#utility.yul\":6700:6752   */\n    tag_602:\n        /* \"#utility.yul\":6787:6796   */\n      dup2\n        /* \"#utility.yul\":6774:6797   */\n      calldataload\n        /* \"#utility.yul\":6837:6841   */\n      0xff\n        /* \"#utility.yul\":6830:6835   */\n      dup2\n        /* \"#utility.yul\":6826:6842   */\n      and\n        /* \"#utility.yul\":6819:6824   */\n      dup2\n        /* \"#utility.yul\":6816:6843   */\n      eq\n        /* \"#utility.yul\":6806:6861   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6854:6855   */\n      dup1\n        /* \"#utility.yul\":6847:6859   */\n      revert\n        /* \"#utility.yul\":6896:7252   */\n    tag_279:\n        /* \"#utility.yul\":7098:7100   */\n      0x20\n        /* \"#utility.yul\":7080:7101   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7117:7135   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7110:7140   */\n      mstore\n        /* \"#utility.yul\":7176:7210   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7171:7173   */\n      0x40\n        /* \"#utility.yul\":7156:7174   */\n      dup3\n      add\n        /* \"#utility.yul\":7149:7211   */\n      mstore\n        /* \"#utility.yul\":7243:7245   */\n      0x60\n        /* \"#utility.yul\":7228:7246   */\n      add\n      swap1\n        /* \"#utility.yul\":6896:7252   */\n      jump\t// out\n        /* \"#utility.yul\":7536:7663   */\n    tag_296:\n        /* \"#utility.yul\":7597:7607   */\n      0x4e487b71\n        /* \"#utility.yul\":7592:7595   */\n      0xe0\n        /* \"#utility.yul\":7588:7608   */\n      shl\n        /* \"#utility.yul\":7585:7586   */\n      0x00\n        /* \"#utility.yul\":7578:7609   */\n      mstore\n        /* \"#utility.yul\":7628:7632   */\n      0x32\n        /* \"#utility.yul\":7625:7626   */\n      0x04\n        /* \"#utility.yul\":7618:7633   */\n      mstore\n        /* \"#utility.yul\":7652:7656   */\n      0x24\n        /* \"#utility.yul\":7649:7650   */\n      0x00\n        /* \"#utility.yul\":7642:7657   */\n      revert\n        /* \"#utility.yul\":7668:7900   */\n    tag_303:\n        /* \"#utility.yul\":7707:7710   */\n      0x00\n        /* \"#utility.yul\":7728:7745   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7725:7865   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":7787:7797   */\n      0x4e487b71\n        /* \"#utility.yul\":7782:7785   */\n      0xe0\n        /* \"#utility.yul\":7778:7798   */\n      shl\n        /* \"#utility.yul\":7775:7776   */\n      0x00\n        /* \"#utility.yul\":7768:7799   */\n      mstore\n        /* \"#utility.yul\":7822:7826   */\n      0x11\n        /* \"#utility.yul\":7819:7820   */\n      0x04\n        /* \"#utility.yul\":7812:7827   */\n      mstore\n        /* \"#utility.yul\":7850:7854   */\n      0x24\n        /* \"#utility.yul\":7847:7848   */\n      0x00\n        /* \"#utility.yul\":7840:7855   */\n      revert\n        /* \"#utility.yul\":7725:7865   */\n    tag_608:\n      pop\n        /* \"#utility.yul\":7892:7893   */\n      0x01\n        /* \"#utility.yul\":7881:7894   */\n      add\n      swap1\n        /* \"#utility.yul\":7668:7900   */\n      jump\t// out\n        /* \"#utility.yul\":7905:8541   */\n    tag_352:\n        /* \"#utility.yul\":8086:8088   */\n      0x20\n        /* \"#utility.yul\":8138:8159   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8111:8129   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8194:8216   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8057:8061   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8273:8279   */\n      dup5\n        /* \"#utility.yul\":8247:8249   */\n      0x40\n        /* \"#utility.yul\":8232:8250   */\n      dup5\n      add\n        /* \"#utility.yul\":8057:8061   */\n      dup4\n        /* \"#utility.yul\":8307:8515   */\n    tag_610:\n        /* \"#utility.yul\":8321:8327   */\n      dup7\n        /* \"#utility.yul\":8318:8319   */\n      dup2\n        /* \"#utility.yul\":8315:8328   */\n      lt\n        /* \"#utility.yul\":8307:8515   */\n      iszero\n      tag_612\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8386:8412   */\n      tag_613\n        /* \"#utility.yul\":8405:8411   */\n      dup5\n        /* \"#utility.yul\":8386:8412   */\n      tag_535\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":8382:8434   */\n      and\n        /* \"#utility.yul\":8370:8435   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8490:8505   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":8455:8467   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8343:8344   */\n      0x01\n        /* \"#utility.yul\":8336:8345   */\n      add\n        /* \"#utility.yul\":8307:8515   */\n      jump(tag_610)\n    tag_612:\n      pop\n        /* \"#utility.yul\":8532:8535   */\n      swap7\n        /* \"#utility.yul\":7905:8541   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9603:9787   */\n    tag_419:\n        /* \"#utility.yul\":9673:9679   */\n      0x00\n        /* \"#utility.yul\":9726:9728   */\n      0x20\n        /* \"#utility.yul\":9714:9723   */\n      dup3\n        /* \"#utility.yul\":9705:9712   */\n      dup5\n        /* \"#utility.yul\":9701:9724   */\n      sub\n        /* \"#utility.yul\":9697:9729   */\n      slt\n        /* \"#utility.yul\":9694:9746   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":9742:9743   */\n      0x00\n        /* \"#utility.yul\":9739:9740   */\n      dup1\n        /* \"#utility.yul\":9732:9744   */\n      revert\n        /* \"#utility.yul\":9694:9746   */\n    tag_618:\n      pop\n        /* \"#utility.yul\":9765:9781   */\n      mload\n      swap2\n        /* \"#utility.yul\":9603:9787   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11382:11792   */\n    tag_509:\n        /* \"#utility.yul\":11584:11586   */\n      0x20\n        /* \"#utility.yul\":11566:11587   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11623:11625   */\n      0x2e\n        /* \"#utility.yul\":11603:11621   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11596:11626   */\n      mstore\n        /* \"#utility.yul\":11662:11696   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":11657:11659   */\n      0x40\n        /* \"#utility.yul\":11642:11660   */\n      dup3\n      add\n        /* \"#utility.yul\":11635:11697   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":11728:11730   */\n      0x60\n        /* \"#utility.yul\":11713:11731   */\n      dup3\n      add\n        /* \"#utility.yul\":11706:11750   */\n      mstore\n        /* \"#utility.yul\":11782:11785   */\n      0x80\n        /* \"#utility.yul\":11767:11786   */\n      add\n      swap1\n        /* \"#utility.yul\":11382:11792   */\n      jump\t// out\n        /* \"#utility.yul\":11797:12204   */\n    tag_516:\n        /* \"#utility.yul\":11999:12001   */\n      0x20\n        /* \"#utility.yul\":11981:12002   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12038:12040   */\n      0x2b\n        /* \"#utility.yul\":12018:12036   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12011:12041   */\n      mstore\n        /* \"#utility.yul\":12077:12111   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":12072:12074   */\n      0x40\n        /* \"#utility.yul\":12057:12075   */\n      dup3\n      add\n        /* \"#utility.yul\":12050:12112   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":12143:12145   */\n      0x60\n        /* \"#utility.yul\":12128:12146   */\n      dup3\n      add\n        /* \"#utility.yul\":12121:12162   */\n      mstore\n        /* \"#utility.yul\":12194:12197   */\n      0x80\n        /* \"#utility.yul\":12179:12198   */\n      add\n      swap1\n        /* \"#utility.yul\":11797:12204   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ca8dd7cae10fd0ceea443a3032f42612cc08c36bba6cf5a0ef69c690ca0ea7b64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611f08806100206000396000f3fe608060405234801561001057600080fd5b506004361061038e5760003560e01c806379d37981116101de578063d1783fa81161010f578063ef3bac5e116100ad578063f77c47911161007c578063f77c4791146107a4578063f9bfd907146107b7578063fe865db9146107c0578063ffc97ce9146107d357600080fd5b8063ef3bac5e14610760578063f2fde38b14610773578063f52c676414610786578063f679eda11461078f57600080fd5b8063debfda30116100e9578063debfda3014610708578063e592c5fa1461071b578063e6abb8bd1461073a578063eea997871461074d57600080fd5b8063d1783fa8146106cf578063d4f3949a146106e2578063d77ab72d146106f557600080fd5b80639e1b8fa21161017c578063b192362a11610156578063b192362a14610688578063b8e0926014610691578063b9059d73146106a4578063bed65bae146106b757600080fd5b80639e1b8fa214610659578063a361f4041461066c578063ab8798271461067f57600080fd5b80638ed5bb92116101b85780638ed5bb921461061757806391ba87d81461062a57806392eefe9b1461063d578063956c9da01461065057600080fd5b806379d37981146105e05780638c8a4b58146105f35780638da5cb5b1461060657600080fd5b80634f40e368116102c35780636155501b11610261578063698d92cb11610230578063698d92cb1461059f5780636a5bf606146105b2578063715018a6146105c5578063725c9c49146105cd57600080fd5b80636155501b14610567578063629694671461057a57806364c657051461058357806364facdd51461059657600080fd5b806358d4c4ea1161029d57806358d4c4ea1461051b578063595d4ece1461052e5780635c23aed61461054157806360bdf9e51461055457600080fd5b80634f40e368146104e657806354cf2aeb1461050957806356fc97a01461051257600080fd5b80632ce2a21811610330578063412736571161030a57806341273657146104a4578063429e0971146104b757806345b61b00146104c057806349b2045c146104d357600080fd5b80632ce2a2181461045b578063358240611461046e5780633924f2331461048157600080fd5b806312440ccb1161036c57806312440ccb146103ef5780631bb8c61d146104225780631c425a4514610435578063235ec73d1461044857600080fd5b806304336bb3146103935780630573f19c146103af5780631218cf18146103da575b600080fd5b61039c606f5481565b6040519081526020015b60405180910390f35b6086546103c2906001600160a01b031681565b6040516001600160a01b0390911681526020016103a6565b6103ed6103e8366004611987565b6107f6565b005b6104126103fd3660046119b1565b60786020526000908152604090205460ff1681565b60405190151581526020016103a6565b6103ed610430366004611a1f565b6108b2565b6081546103c2906001600160a01b031681565b607f546103c2906001600160a01b031681565b6103ed610469366004611a1f565b6109c8565b61041261047c366004611a7b565b610ad8565b61041261048f3660046119b1565b60776020526000908152604090205460ff1681565b6103ed6104b23660046119b1565b610af4565b61039c60835481565b6070546103c2906001600160a01b031681565b6084546103c2906001600160a01b031681565b6104126104f43660046119b1565b60766020526000908152604090205460ff1681565b61039c60825481565b61039c60685481565b607e546103c2906001600160a01b031681565b6079546103c2906001600160a01b031681565b6067546103c2906001600160a01b031681565b6103ed610562366004611a7b565b610b9c565b6103ed610575366004611a94565b610bfd565b61039c60695481565b6103ed610591366004611ad6565b610cef565b61039c606b5481565b606e546103c2906001600160a01b031681565b6103ed6105c0366004611b7b565b610dab565b6103ed610e17565b6073546103c2906001600160a01b031681565b6085546103c2906001600160a01b031681565b6103ed610601366004611b9d565b610e4d565b6033546001600160a01b03166103c2565b6103c2610625366004611a7b565b610f25565b6103ed610638366004611a1f565b610f4f565b6103ed61064b3660046119b1565b61105f565b61039c607a5481565b6103ed610667366004611a1f565b611143565b607b546103c2906001600160a01b031681565b61039c606d5481565b61039c60715481565b6103ed61069f366004611bfc565b611253565b6103ed6106b2366004611987565b611318565b6072546103c29061010090046001600160a01b031681565b6066546103c2906001600160a01b031681565b6103ed6106f0366004611c50565b6113c3565b6080546103c2906001600160a01b031681565b6104126107163660046119b1565b611473565b6072546107289060ff1681565b60405160ff90911681526020016103a6565b6103ed610748366004611c93565b6114d5565b606c546103c2906001600160a01b031681565b6065546103c2906001600160a01b031681565b6103ed6107813660046119b1565b61162a565b61039c607c5481565b6107976116c5565b6040516103a69190611cf2565b607d546103c2906001600160a01b031681565b61039c606a5481565b6103ed6107ce366004611d3f565b611727565b6104126107e13660046119b1565b60756020526000908152604090205460ff1681565b6033546001600160a01b031633146108295760405162461bcd60e51b815260040161082090611d62565b60405180910390fd5b6109c481111561084f57604051632b14f14760e11b815260048101829052602401610820565b607980546001600160a01b0319166001600160a01b038416908117909155607a829055604080519182526020820183905233917f07a990b3304df1347b430697979619a7a4c80cb4bd939e73ced1f7ca6101d6f691015b60405180910390a25050565b6033546001600160a01b031633146108dc5760405162461bcd60e51b815260040161082090611d62565b60005b828110156109c25781607560008686858181106108fe576108fe611d97565b905060200201602081019061091391906119b1565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905583838281811061094d5761094d611d97565b905060200201602081019061096291906119b1565b6001600160a01b0316336001600160a01b03167f6954b3b4020bd8480cd160fffd549537b617f20a8074ce45b2dee80cab6ef8e2846040516109a8911515815260200190565b60405180910390a3806109ba81611dad565b9150506108df565b50505050565b6033546001600160a01b031633146109f25760405162461bcd60e51b815260040161082090611d62565b60005b828110156109c2578160776000868685818110610a1457610a14611d97565b9050602002016020810190610a2991906119b1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055838382818110610a6357610a63611d97565b9050602002016020810190610a7891906119b1565b6001600160a01b0316336001600160a01b03167fafed47930189ea124b8d808450ba0e6c685037de026cb6e56907751f1eef52dc84604051610abe911515815260200190565b60405180910390a380610ad081611dad565b9150506109f5565b6000606854821115610aec57506000919050565b506001919050565b6033546001600160a01b03163314610b1e5760405162461bcd60e51b815260040161082090611d62565b6001600160a01b038116610b4557604051634cd6613760e11b815260040160405180910390fd5b607380546001600160a01b0319166001600160a01b03831690811790915560405190815233907f05647eff4880e5135952763bda009997b9c8669cac9292ef87f28badca4f32a6906020015b60405180910390a250565b6033546001600160a01b03163314610bc65760405162461bcd60e51b815260040161082090611d62565b606881905560405181815233907fa604cbdca7ee706aafea3c555e0385946d7b121453a1b0ac8b3cd58c63014f0790602001610b91565b6033546001600160a01b03163314610c275760405162461bcd60e51b815260040161082090611d62565b6002811015610c4957604051639be12e7760e01b815260040160405180910390fd5b60725461010090046001600160a01b03168282600081610c6b57610c6b611d97565b9050602002016020810190610c8091906119b1565b6001600160a01b031614610ca757604051630c3e3d8560e31b815260040160405180910390fd5b610cb3607483836118f8565b50336001600160a01b03167fb67c241a52658f85ec5362073fc9a0909e07aad7e75f92291c35f910c57f808683836040516108a6929190611dd4565b6000610cfb60016117ba565b90508015610d13576000805461ff0019166101001790555b610d1b611847565b60728054610100600160a81b0319166101006001600160a01b03851602179055610d4a856000858188816114d5565b610d588b8b8b8b8b8b610e4d565b8015610d9e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b6033546001600160a01b03163314610dd55760405162461bcd60e51b815260040161082090611d62565b60828290556083819055604080518381526020810183905233917f377241d1cd344fbe941f17d99a8ea4b7c81990ec2da5f6d7ccfe19b9b1676f8f91016108a6565b6033546001600160a01b03163314610e415760405162461bcd60e51b815260040161082090611d62565b610e4b6000611876565b565b6033546001600160a01b03163314610e775760405162461bcd60e51b815260040161082090611d62565b606580546001600160a01b038881166001600160a01b03199283168117909355606680548983169084168117909155606780549289169290931682179092556069869055606a859055606b84905560408051938452602084019290925290820152606081018490526080810183905260a0810182905233907fd4ca73c532248c12fc93b1dd748b3954751548cac9a9565697a3849bf7dd3b4c9060c0015b60405180910390a2505050505050565b60748181548110610f3557600080fd5b6000918252602090912001546001600160a01b0316905081565b6033546001600160a01b03163314610f795760405162461bcd60e51b815260040161082090611d62565b60005b828110156109c2578160786000868685818110610f9b57610f9b611d97565b9050602002016020810190610fb091906119b1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055838382818110610fea57610fea611d97565b9050602002016020810190610fff91906119b1565b6001600160a01b0316336001600160a01b03167f9e48685292272e85fa3be83f07779af7794d29a6efb26b5f834bfb48e220d37084604051611045911515815260200190565b60405180910390a38061105781611dad565b915050610f7c565b6033546001600160a01b031633146110895760405162461bcd60e51b815260040161082090611d62565b604051633c88345b60e21b8152600060048201526001600160a01b0382169063f220d16c90602401602060405180830381865afa1580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f29190611e20565b50607d80546001600160a01b0319166001600160a01b03831690811790915560405190815233907f1d38dced3210495ad7eff4825fd4dd5cc0e44c11c98519840691e5391c78cd1590602001610b91565b6033546001600160a01b0316331461116d5760405162461bcd60e51b815260040161082090611d62565b60005b828110156109c257816076600086868581811061118f5761118f611d97565b90506020020160208101906111a491906119b1565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558383828181106111de576111de611d97565b90506020020160208101906111f391906119b1565b6001600160a01b0316336001600160a01b03167fa36d60ecff7c14072a077a9b05c8c98cfdfbf7b5f8e354a071764c27e533085584604051611239911515815260200190565b60405180910390a38061124b81611dad565b915050611170565b6033546001600160a01b0316331461127d5760405162461bcd60e51b815260040161082090611d62565b607e80546001600160a01b038681166001600160a01b03199283168117909355607f8054878316908416811790915560808054878416908516811782556081805494881694909516841790945560408051958652602086019290925290840192909252606083015233917f11cbce6c87791f09a7c2108a3abea2993ab3de5c9ed89a0bd108618ece832b23910160405180910390a250505050565b6033546001600160a01b031633146113425760405162461bcd60e51b815260040161082090611d62565b61177081111561136857604051632b14f14760e11b815260048101829052602401610820565b607b80546001600160a01b0319166001600160a01b038416908117909155607c829055604080519182526020820183905233917f49d9e0ca3aa68af12938170e0cd7267d832389603122e97b1cc70333942b8d2191016108a6565b6033546001600160a01b031633146113ed5760405162461bcd60e51b815260040161082090611d62565b608480546001600160a01b038581166001600160a01b03199283168117909355608580548683169084168117909155608680549286169290931682179092556040805193845260208401929092529082015233907f4aaf8791c546d8d1000b9d104834f06eea9b95c08f81c36f7eee152623edf4ae9060600160405180910390a2505050565b607e546000906001600160a01b038381169116148061149f5750607f546001600160a01b038381169116145b806114b757506080546001600160a01b038381169116145b806114cf57506081546001600160a01b038381169116145b92915050565b6033546001600160a01b031633146114ff5760405162461bcd60e51b815260040161082090611d62565b6103e885118061151057506103e883115b8061151e575063bd014d7e81115b1561154d57604051634b873b2960e11b8152600481018690526024810184905260448101829052606401610820565b606c80546001600160a01b038881166001600160a01b031992831617909255606d879055606e8054878416908316179055606f85905560708054928516929091169190911790556071819055604080518681526020810185905290810182905233907fc4d5650477cd4354e9a07e898df55abe6fecec3e415531e27a8499597b462be29060600160405180910390a2604080516001600160a01b038881168252868116602083015284169181019190915233907f6ebcbf01234512b5d15e025b0aa6bd7514d7f7690b4ff5b260bea6b9aac29e0f90606001610f15565b6033546001600160a01b031633146116545760405162461bcd60e51b815260040161082090611d62565b6001600160a01b0381166116b95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610820565b6116c281611876565b50565b6060607480548060200260200160405190810160405280929190818152602001828054801561171d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116ff575b5050505050905090565b6033546001600160a01b031633146117515760405162461bcd60e51b815260040161082090611d62565b600360ff821610156117765760405163279a13c360e11b815260040160405180910390fd5b6072805460ff191660ff831690811790915560405190815233907f0162496fc30aed361442504cdd534d5911e2997e66eb97f7455486c9476c8bfb90602001610b91565b60008054610100900460ff1615611801578160ff1660011480156117dd5750303b155b6117f95760405162461bcd60e51b815260040161082090611e39565b506000919050565b60005460ff8084169116106118285760405162461bcd60e51b815260040161082090611e39565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661186e5760405162461bcd60e51b815260040161082090611e87565b610e4b6118c8565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166118ef5760405162461bcd60e51b815260040161082090611e87565b610e4b33611876565b82805482825590600052602060002090810192821561194b579160200282015b8281111561194b5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190611918565b5061195792915061195b565b5090565b5b80821115611957576000815560010161195c565b80356001600160a01b038116811461184257600080fd5b6000806040838503121561199a57600080fd5b6119a383611970565b946020939093013593505050565b6000602082840312156119c357600080fd5b6119cc82611970565b9392505050565b60008083601f8401126119e557600080fd5b50813567ffffffffffffffff8111156119fd57600080fd5b6020830191508360208260051b8501011115611a1857600080fd5b9250929050565b600080600060408486031215611a3457600080fd5b833567ffffffffffffffff811115611a4b57600080fd5b611a57868287016119d3565b90945092505060208401358015158114611a7057600080fd5b809150509250925092565b600060208284031215611a8d57600080fd5b5035919050565b60008060208385031215611aa757600080fd5b823567ffffffffffffffff811115611abe57600080fd5b611aca858286016119d3565b90969095509350505050565b6000806000806000806000806000806101408b8d031215611af657600080fd5b611aff8b611970565b9950611b0d60208c01611970565b9850611b1b60408c01611970565b975060608b0135965060808b0135955060a08b01359450611b3e60c08c01611970565b9350611b4c60e08c01611970565b9250611b5b6101008c01611970565b9150611b6a6101208c01611970565b90509295989b9194979a5092959850565b60008060408385031215611b8e57600080fd5b50508035926020909101359150565b60008060008060008060c08789031215611bb657600080fd5b611bbf87611970565b9550611bcd60208801611970565b9450611bdb60408801611970565b9350606087013592506080870135915060a087013590509295509295509295565b60008060008060808587031215611c1257600080fd5b611c1b85611970565b9350611c2960208601611970565b9250611c3760408601611970565b9150611c4560608601611970565b905092959194509250565b600080600060608486031215611c6557600080fd5b611c6e84611970565b9250611c7c60208501611970565b9150611c8a60408501611970565b90509250925092565b60008060008060008060c08789031215611cac57600080fd5b611cb587611970565b955060208701359450611cca60408801611970565b935060608701359250611cdf60808801611970565b915060a087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015611d335783516001600160a01b031683529284019291840191600101611d0e565b50909695505050505050565b600060208284031215611d5157600080fd5b813560ff811681146119cc57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201611dcd57634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082528181018390526000908460408401835b86811015611e15576001600160a01b03611e0284611970565b1682529183019190830190600101611de9565b509695505050505050565b600060208284031215611e3257600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212209ca8dd7cae10fd0ceea443a3032f42612cc08c36bba6cf5a0ef69c690ca0ea7b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F08 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79D37981 GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xD1783FA8 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xEF3BAC5E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF77C4791 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x7A4 JUMPI DUP1 PUSH4 0xF9BFD907 EQ PUSH2 0x7B7 JUMPI DUP1 PUSH4 0xFE865DB9 EQ PUSH2 0x7C0 JUMPI DUP1 PUSH4 0xFFC97CE9 EQ PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEF3BAC5E EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xF52C6764 EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0xF679EDA1 EQ PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDEBFDA30 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xDEBFDA30 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xE592C5FA EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0xE6ABB8BD EQ PUSH2 0x73A JUMPI DUP1 PUSH4 0xEEA99787 EQ PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD1783FA8 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xD4F3949A EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0xD77AB72D EQ PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E1B8FA2 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xB192362A GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xB192362A EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0xB8E09260 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xB9059D73 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xBED65BAE EQ PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E1B8FA2 EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0xA361F404 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xAB879827 EQ PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8ED5BB92 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8ED5BB92 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x91BA87D8 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0x956C9DA0 EQ PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79D37981 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x8C8A4B58 EQ PUSH2 0x5F3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F40E368 GT PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6155501B GT PUSH2 0x261 JUMPI DUP1 PUSH4 0x698D92CB GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x698D92CB EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x6A5BF606 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0x725C9C49 EQ PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6155501B EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x62969467 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x64C65705 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x64FACDD5 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x58D4C4EA GT PUSH2 0x29D JUMPI DUP1 PUSH4 0x58D4C4EA EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x595D4ECE EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x5C23AED6 EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0x60BDF9E5 EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F40E368 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x54CF2AEB EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x56FC97A0 EQ PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CE2A218 GT PUSH2 0x330 JUMPI DUP1 PUSH4 0x41273657 GT PUSH2 0x30A JUMPI DUP1 PUSH4 0x41273657 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x429E0971 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x45B61B00 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x49B2045C EQ PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CE2A218 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x35824061 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x3924F233 EQ PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12440CCB GT PUSH2 0x36C JUMPI DUP1 PUSH4 0x12440CCB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x1BB8C61D EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x1C425A45 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x235EC73D EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4336BB3 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x573F19C EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x1218CF18 EQ PUSH2 0x3DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39C PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x86 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1987 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x81 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7F SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x83 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x84 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x82 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x79 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A94 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x39C PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x39C PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x5C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B7B JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x3ED PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x73 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x85 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x601 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x64B CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x105F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x7A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x667 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x7B SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x6B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1987 JUMP JUMPDEST PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x6F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x80 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x1473 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x728 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x748 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x781 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x162A JUMP JUMPDEST PUSH2 0x39C PUSH1 0x7C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x7D SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x7CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x7E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C4 DUP2 GT ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B14F147 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x79 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7A DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x7A990B3304DF1347B430697979619A7A4C80CB4BD939E73CED1F7CA6101D6F6 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 PUSH1 0x75 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x8FE JUMPI PUSH2 0x8FE PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x94D JUMPI PUSH2 0x94D PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x962 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6954B3B4020BD8480CD160FFFD549537B617F20A8074CE45B2DEE80CAB6EF8E2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9A8 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x9BA DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8DF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 PUSH1 0x77 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xA14 JUMPI PUSH2 0xA14 PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xA63 JUMPI PUSH2 0xA63 PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAFED47930189EA124B8D808450BA0E6C685037DE026CB6E56907751F1EEF52DC DUP5 PUSH1 0x40 MLOAD PUSH2 0xABE SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0xAD0 DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x68 SLOAD DUP3 GT ISZERO PUSH2 0xAEC JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB45 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4CD66137 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x73 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5647EFF4880E5135952763BDA009997B9C8669CAC9292EF87F28BADCA4F32A6 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x68 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA604CBDCA7EE706AAFEA3C555E0385946D7B121453A1B0AC8B3CD58C63014F07 SWAP1 PUSH1 0x20 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9BE12E77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 PUSH1 0x0 DUP2 PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC3E3D85 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB3 PUSH1 0x74 DUP4 DUP4 PUSH2 0x18F8 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB67C241A52658F85EC5362073FC9A0909E07AAD7E75F92291C35F910C57F8086 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB PUSH1 0x1 PUSH2 0x17BA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD1B PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE PUSH2 0xD4A DUP6 PUSH1 0x0 DUP6 DUP2 DUP9 DUP2 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0xD58 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0xE4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD9E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x82 DUP3 SWAP1 SSTORE PUSH1 0x83 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x377241D1CD344FBE941F17D99A8EA4B7C81990EC2DA5F6D7CCFE19B9B1676F8F SWAP2 ADD PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0xE4B PUSH1 0x0 PUSH2 0x1876 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x66 DUP1 SLOAD DUP10 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x67 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x69 DUP7 SWAP1 SSTORE PUSH1 0x6A DUP6 SWAP1 SSTORE PUSH1 0x6B DUP5 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xD4CA73C532248C12FC93B1DD748B3954751548CAC9A9565697A3849BF7DD3B4C SWAP1 PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 PUSH1 0x78 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xF9B JUMPI PUSH2 0xF9B PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xFEA JUMPI PUSH2 0xFEA PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E48685292272E85FA3BE83F07779AF7794D29A6EFB26B5F834BFB48E220D370 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1045 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x1057 DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3C88345B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF220D16C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST POP PUSH1 0x7D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1D38DCED3210495AD7EFF4825FD4DD5CC0E44C11C98519840691E5391C78CD15 SWAP1 PUSH1 0x20 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 PUSH1 0x76 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x118F JUMPI PUSH2 0x118F PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11A4 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x11DE JUMPI PUSH2 0x11DE PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11F3 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA36D60ECFF7C14072A077A9B05C8C98CFDFBF7B5F8E354A071764C27E5330855 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1239 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x124B DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x7E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x7F DUP1 SLOAD DUP8 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP6 AND DUP2 OR DUP3 SSTORE PUSH1 0x81 DUP1 SLOAD SWAP5 DUP9 AND SWAP5 SWAP1 SWAP6 AND DUP5 OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0x11CBCE6C87791F09A7C2108A3ABEA2993AB3DE5C9ED89A0BD108618ECE832B23 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x1770 DUP2 GT ISZERO PUSH2 0x1368 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B14F147 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x7B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7C DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x49D9E0CA3AA68AF12938170E0CD7267D832389603122E97B1CC70333942B8D21 SWAP2 ADD PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x84 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x85 DUP1 SLOAD DUP7 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x86 DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x4AAF8791C546D8D1000B9D104834F06EEA9B95C08F81C36F7EEE152623EDF4AE SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x7E SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x149F JUMPI POP PUSH1 0x7F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 PUSH2 0x14B7 JUMPI POP PUSH1 0x80 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 PUSH2 0x14CF JUMPI POP PUSH1 0x81 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x3E8 DUP6 GT DUP1 PUSH2 0x1510 JUMPI POP PUSH2 0x3E8 DUP4 GT JUMPDEST DUP1 PUSH2 0x151E JUMPI POP PUSH4 0xBD014D7E DUP2 GT JUMPDEST ISZERO PUSH2 0x154D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B873B29 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x6D DUP8 SWAP1 SSTORE PUSH1 0x6E DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x6F DUP6 SWAP1 SSTORE PUSH1 0x70 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x71 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xC4D5650477CD4354E9A07E898DF55ABE6FECEC3E415531E27A8499597B462BE2 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 PUSH32 0x6EBCBF01234512B5D15E025B0AA6BD7514D7F7690B4FF5B260BEA6B9AAC29E0F SWAP1 PUSH1 0x60 ADD PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x820 JUMP JUMPDEST PUSH2 0x16C2 DUP2 PUSH2 0x1876 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x74 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x171D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16FF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1776 JUMPI PUSH1 0x40 MLOAD PUSH4 0x279A13C3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x162496FC30AED361442504CDD534D5911E2997E66EB97F7455486C9476C8BFB SWAP1 PUSH1 0x20 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1801 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x17DD JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x17F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP2 AND LT PUSH2 0x1828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x186E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0xE4B PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0xE4B CALLER PUSH2 0x1876 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x194B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x194B JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1918 JUMP JUMPDEST POP PUSH2 0x1957 SWAP3 SWAP2 POP PUSH2 0x195B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x195C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A3 DUP4 PUSH2 0x1970 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19CC DUP3 PUSH2 0x1970 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A57 DUP7 DUP3 DUP8 ADD PUSH2 0x19D3 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ACA DUP6 DUP3 DUP7 ADD PUSH2 0x19D3 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x1AF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AFF DUP12 PUSH2 0x1970 JUMP JUMPDEST SWAP10 POP PUSH2 0x1B0D PUSH1 0x20 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP9 POP PUSH2 0x1B1B PUSH1 0x40 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1B3E PUSH1 0xC0 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B4C PUSH1 0xE0 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP3 POP PUSH2 0x1B5B PUSH2 0x100 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A PUSH2 0x120 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1BB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BBF DUP8 PUSH2 0x1970 JUMP JUMPDEST SWAP6 POP PUSH2 0x1BCD PUSH1 0x20 DUP9 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP5 POP PUSH2 0x1BDB PUSH1 0x40 DUP9 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1B DUP6 PUSH2 0x1970 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C29 PUSH1 0x20 DUP7 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C37 PUSH1 0x40 DUP7 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 PUSH1 0x60 DUP7 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6E DUP5 PUSH2 0x1970 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C7C PUSH1 0x20 DUP6 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8A PUSH1 0x40 DUP6 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1CAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB5 DUP8 PUSH2 0x1970 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1CCA PUSH1 0x40 DUP9 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH2 0x1CDF PUSH1 0x80 DUP9 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D33 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1D0E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1DCD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1E15 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E02 DUP5 PUSH2 0x1970 JUMP JUMPDEST AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1DE9 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xA8 0xDD PUSH29 0xAE10FD0CEEA443A3032F42612CC08C36BBA6CF5A0EF69C690CA0EA7B64 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "584:16065:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_26": {
									"entryPoint": 6215,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 6344,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_535": {
									"entryPoint": null,
									"id": 535,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setInitializedVersion_264": {
									"entryPoint": 6074,
									"id": 264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferOwnership_117": {
									"entryPoint": 6262,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@alpacaBeneficiaryBps_821": {
									"entryPoint": null,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@alpacaBeneficiary_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@alpacaBountyBps_817": {
									"entryPoint": null,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@alpacaReinvestFeeTreasury_815": {
									"entryPoint": null,
									"id": 815,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@alpacaToken_792": {
									"entryPoint": null,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@assetAddTwoSideStrategy_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@controller_824": {
									"entryPoint": null,
									"id": 824,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@debtRatioTolerance_772": {
									"entryPoint": null,
									"id": 772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositExecutor_827": {
									"entryPoint": null,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositFeeBps_777": {
									"entryPoint": null,
									"id": 777,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositFeeTreasury_774": {
									"entryPoint": null,
									"id": 774,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fairLaunchAddr_761": {
									"entryPoint": null,
									"id": 761,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeExemptedCallers_809": {
									"entryPoint": null,
									"id": 809,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getReinvestPath_1407": {
									"entryPoint": 5829,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSwapRouter_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getWNativeRelayer_759": {
									"entryPoint": null,
									"id": 759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getWrappedNativeAddr_756": {
									"entryPoint": null,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_898": {
									"entryPoint": 3311,
									"id": 898,
									"parameterSlots": 10,
									"returnSlots": 0
								},
								"@isContract_283": {
									"entryPoint": null,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExecutor_1499": {
									"entryPoint": 5235,
									"id": 1499,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isVaultSizeAcceptable_1331": {
									"entryPoint": 2776,
									"id": 1331,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leverageLevel_790": {
									"entryPoint": null,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@managementFeePerSec_787": {
									"entryPoint": null,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@managementFeeTreasury_784": {
									"entryPoint": null,
									"id": 784,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxVaultPositionValue_763": {
									"entryPoint": null,
									"id": 763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@partialCloseMinimizeStrategy_841": {
									"entryPoint": null,
									"id": 841,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@positionValueTolerance_769": {
									"entryPoint": null,
									"id": 769,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebalanceExecutor_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebalanceFactor_766": {
									"entryPoint": null,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reinvestExecutor_833": {
									"entryPoint": null,
									"id": 833,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reinvestPath_797": {
									"entryPoint": 3877,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_74": {
									"entryPoint": 3607,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAlpacaBeneficiaryConfig_1294": {
									"entryPoint": 4888,
									"id": 1294,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setAlpacaBountyConfig_1259": {
									"entryPoint": 2038,
									"id": 1259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setController_1435": {
									"entryPoint": 4191,
									"id": 1435,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setExecutor_1474": {
									"entryPoint": 4691,
									"id": 1474,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setFeeExemptedCallers_1146": {
									"entryPoint": 2504,
									"id": 1146,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setFees_1224": {
									"entryPoint": 5333,
									"id": 1224,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@setLeverageLevel_1104": {
									"entryPoint": 5927,
									"id": 1104,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setParams_951": {
									"entryPoint": 3661,
									"id": 951,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@setReinvestPath_1397": {
									"entryPoint": 3069,
									"id": 1397,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setStrategies_1556": {
									"entryPoint": 5059,
									"id": 1556,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setSwapConfig_1524": {
									"entryPoint": 3499,
									"id": 1524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setSwapRouter_1360": {
									"entryPoint": 2804,
									"id": 1360,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setValueLimit_1313": {
									"entryPoint": 2972,
									"id": 1313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWhitelistedCallers_993": {
									"entryPoint": 2226,
									"id": 993,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setWhitelistedRebalancer_1035": {
									"entryPoint": 4419,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setwhitelistedReinvestors_1077": {
									"entryPoint": 3919,
									"id": 1077,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stableAddTwoSideStrategy_843": {
									"entryPoint": null,
									"id": 843,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapFeeDenom_838": {
									"entryPoint": null,
									"id": 838,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapFee_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_97": {
									"entryPoint": 5674,
									"id": 97,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelistedCallers_801": {
									"entryPoint": null,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whitelistedRebalancers_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whitelistedReinvestors_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawExecutor_829": {
									"entryPoint": null,
									"id": 829,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawalFeeBps_782": {
									"entryPoint": null,
									"id": 782,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawalFeeTreasury_779": {
									"entryPoint": null,
									"id": 779,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 6611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 7248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_addresst_addresst_addresst_address": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 10
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_uint256": {
									"entryPoint": 7315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 6804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 7575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12206:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "297:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "364:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "380:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "385:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "376:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "376:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "389:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "372:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "372:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "360:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "360:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "342:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "288:4:7",
														"type": ""
													}
												],
												"src": "196:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "453:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "463:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "485:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "472:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "472:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "463:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "555:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "567:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "557:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "557:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "557:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "514:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "525:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "540:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "545:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "536:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "536:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "549:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "532:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "532:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "511:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "511:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "504:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:50:7"
															},
															"nodeType": "YulIf",
															"src": "501:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "432:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "443:5:7",
														"type": ""
													}
												],
												"src": "404:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "669:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "715:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "724:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "717:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "717:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "717:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "690:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "699:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "686:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "711:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:32:7"
															},
															"nodeType": "YulIf",
															"src": "679:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "740:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "769:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "750:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "788:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "815:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "826:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "811:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "798:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "798:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "788:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "627:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "638:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "650:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "658:6:7",
														"type": ""
													}
												],
												"src": "582:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "911:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "957:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "966:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "969:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "959:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "959:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "932:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "941:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "953:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "924:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:32:7"
															},
															"nodeType": "YulIf",
															"src": "921:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "982:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1011:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "992:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "982:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1127:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1137:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1149:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1160:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1145:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1145:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1137:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1179:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1204:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1197:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1197:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1190:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1190:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1172:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1172:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1096:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1107:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1118:4:7",
														"type": ""
													}
												],
												"src": "1032:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1308:283:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1357:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1366:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1369:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1359:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1359:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1359:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1336:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1344:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1332:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1351:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1328:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1321:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:35:7"
															},
															"nodeType": "YulIf",
															"src": "1318:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1382:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1405:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1392:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1382:6:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1427:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1435:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1424:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:30:7"
															},
															"nodeType": "YulIf",
															"src": "1421:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1480:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1504:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1492:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1480:8:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1569:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1581:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1571:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1571:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1532:6:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1544:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1547:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1540:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1540:14:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1528:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1528:27:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1557:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1524:38:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1564:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1521:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:47:7"
															},
															"nodeType": "YulIf",
															"src": "1518:67:7"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1271:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1279:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1287:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1297:6:7",
														"type": ""
													}
												],
												"src": "1224:367:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1715:479:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1761:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1770:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1773:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1763:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1763:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1763:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1736:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1745:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1732:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1732:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1757:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1728:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1728:32:7"
															},
															"nodeType": "YulIf",
															"src": "1725:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1786:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1813:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1790:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1878:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1838:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1846:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1835:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:30:7"
															},
															"nodeType": "YulIf",
															"src": "1832:50:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1891:96:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1970:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1955:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1955:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1979:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1917:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:70:7"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "1895:8:7",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "1905:8:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1996:18:7",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "2006:8:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2023:18:7",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "2033:8:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2050:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2091:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2076:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2063:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2054:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2148:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2157:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2160:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2150:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2150:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2150:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2117:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2138:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2131:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2131:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2124:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2124:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2114:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2114:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2107:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:40:7"
															},
															"nodeType": "YulIf",
															"src": "2104:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2173:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2183:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1665:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1676:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1688:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1696:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1704:6:7",
														"type": ""
													}
												],
												"src": "1596:598:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2269:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2315:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2324:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2327:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2317:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2317:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2290:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2299:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2286:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2311:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:32:7"
															},
															"nodeType": "YulIf",
															"src": "2279:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2340:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2363:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2350:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2350:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2340:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2235:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2246:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2258:6:7",
														"type": ""
													}
												],
												"src": "2199:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2489:332:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2535:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2544:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2547:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2537:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2537:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2537:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2510:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2519:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2531:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:32:7"
															},
															"nodeType": "YulIf",
															"src": "2499:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2560:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2587:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2574:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2574:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2564:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2640:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2649:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2652:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2642:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2642:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2642:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2612:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2620:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2609:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:30:7"
															},
															"nodeType": "YulIf",
															"src": "2606:50:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2665:96:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2733:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2729:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2753:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2691:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:70:7"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "2669:8:7",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "2679:8:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2770:18:7",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "2780:8:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2797:18:7",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "2807:8:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2447:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2458:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2470:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2478:6:7",
														"type": ""
													}
												],
												"src": "2384:437:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3049:618:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3096:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3070:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3079:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3066:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3066:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:3:7",
																		"type": "",
																		"value": "320"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:33:7"
															},
															"nodeType": "YulIf",
															"src": "3059:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3121:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3150:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3131:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3121:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3169:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3202:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3213:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3198:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3198:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3179:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3169:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3226:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3270:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3255:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3236:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:38:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3226:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3283:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3321:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:32:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3334:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3361:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3372:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3357:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3344:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:33:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3386:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3413:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3424:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3396:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:33:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3386:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3438:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3471:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3482:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3467:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3448:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:39:7"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3496:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3540:3:7",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3506:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:39:7"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "3496:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3554:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3587:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3598:3:7",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3583:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3583:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3564:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3564:39:7"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3612:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3645:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3656:3:7",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3641:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3641:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3622:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:39:7"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nodeType": "YulIdentifier",
																	"src": "3612:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2943:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2954:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2966:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2974:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2982:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2990:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2998:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3006:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3014:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3022:6:7",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "3030:6:7",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "3038:6:7",
														"type": ""
													}
												],
												"src": "2826:841:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3759:161:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3805:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3814:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3817:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3807:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3807:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3807:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3780:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3789:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3776:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3776:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3801:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3772:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:32:7"
															},
															"nodeType": "YulIf",
															"src": "3769:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3830:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3853:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3840:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3830:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3872:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3899:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3910:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3895:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3895:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3882:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3882:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3717:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3728:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3740:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3748:6:7",
														"type": ""
													}
												],
												"src": "3672:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4080:386:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4127:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4136:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4129:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4129:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4129:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4101:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4097:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4097:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:33:7"
															},
															"nodeType": "YulIf",
															"src": "4090:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4152:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4181:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4162:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4200:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4233:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4244:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4210:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4200:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4257:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4290:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4301:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4267:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:38:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4257:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4314:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4341:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4352:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4337:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4324:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:32:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4365:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4392:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4403:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4388:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4388:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4375:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:33:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4365:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4417:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4444:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4455:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4440:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4440:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4427:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:33:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4417:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4006:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4017:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4029:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4037:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4045:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4053:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4061:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4069:6:7",
														"type": ""
													}
												],
												"src": "3925:541:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4592:288:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4641:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4613:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4622:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4609:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4609:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4605:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4605:33:7"
															},
															"nodeType": "YulIf",
															"src": "4602:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4674:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4722:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4769:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4802:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4813:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4798:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4798:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4779:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4779:38:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4826:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4859:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4870:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4855:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4855:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4836:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4836:38:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4534:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4545:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4557:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4565:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4573:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4581:6:7",
														"type": ""
													}
												],
												"src": "4471:409:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4989:230:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5035:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5044:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5047:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5037:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5037:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5037:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5010:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5019:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5006:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5006:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5031:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:32:7"
															},
															"nodeType": "YulIf",
															"src": "4999:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5060:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5089:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5070:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5108:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5141:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5152:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5137:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5137:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5118:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5165:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5198:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5209:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5194:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5194:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5175:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5175:38:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4939:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4950:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4962:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4970:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4978:6:7",
														"type": ""
													}
												],
												"src": "4885:334:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5321:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5331:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5343:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5354:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5339:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5339:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5331:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5373:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5388:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5396:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5384:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5384:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5366:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5366:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5366:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5290:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5301:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5312:4:7",
														"type": ""
													}
												],
												"src": "5224:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5568:386:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5615:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5624:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5627:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5617:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5617:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5617:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5589:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5598:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5585:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5585:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5610:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5581:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5581:33:7"
															},
															"nodeType": "YulIf",
															"src": "5578:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5640:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5669:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5650:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5650:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5640:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5688:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5715:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5726:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5711:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5698:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5688:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5739:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5772:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5783:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5768:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5768:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5749:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5749:38:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5739:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5796:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5823:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5834:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5819:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5819:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5806:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:32:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5847:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5880:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5891:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5876:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5876:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5857:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5857:39:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5847:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5905:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5932:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5943:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5928:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5915:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:33:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5905:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5494:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5505:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5517:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5525:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5533:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5541:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5549:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5557:6:7",
														"type": ""
													}
												],
												"src": "5413:541:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6110:507:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6120:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6130:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6124:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6141:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6159:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6170:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6155:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6145:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6189:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6200:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6182:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6182:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6212:17:7",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6223:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "6216:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6238:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6258:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6252:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6242:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6281:6:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6289:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6274:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6274:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6274:22:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6305:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6316:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6327:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6312:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6312:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6305:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6339:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6357:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6365:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6343:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6377:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6386:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6381:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6445:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6466:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6481:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "6475:5:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6475:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6498:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6503:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "6494:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6494:11:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6507:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "6490:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6490:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6471:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6471:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6459:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6459:52:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6459:52:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6524:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6535:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6540:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6531:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6531:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6524:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6556:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6570:6:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6578:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6566:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6566:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6556:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6407:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6410:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6404:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6404:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6418:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6420:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6429:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6425:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6425:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6420:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6400:3:7",
																"statements": []
															},
															"src": "6396:195:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6600:11:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6608:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6600:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6079:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6090:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6101:4:7",
														"type": ""
													}
												],
												"src": "5959:658:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6690:201:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6736:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6745:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6748:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6738:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6738:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6738:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6711:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6720:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6707:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6707:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6732:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6703:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:32:7"
															},
															"nodeType": "YulIf",
															"src": "6700:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6761:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6787:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6774:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6765:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6845:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6854:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6857:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6847:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6847:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6847:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6819:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6830:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6837:4:7",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6826:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6826:16:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6816:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6816:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6809:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:35:7"
															},
															"nodeType": "YulIf",
															"src": "6806:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6870:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6880:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6870:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6656:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6667:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6679:6:7",
														"type": ""
													}
												],
												"src": "6622:269:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7070:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7087:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7098:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7080:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7080:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7080:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7121:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7132:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7117:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7117:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7110:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7110:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7160:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7171:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7156:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7156:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7176:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7149:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7149:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7149:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7220:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7232:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7243:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7228:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7228:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7220:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7047:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7061:4:7",
														"type": ""
													}
												],
												"src": "6896:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7386:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7396:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7408:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7419:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7404:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7404:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7396:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7438:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7453:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7469:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7474:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7465:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7465:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7478:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7461:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7461:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7449:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7449:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7431:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7431:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7431:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7502:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7513:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7498:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7498:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7518:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7491:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7491:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7491:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7347:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7358:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7366:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7377:4:7",
														"type": ""
													}
												],
												"src": "7257:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7568:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7585:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7592:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7597:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7588:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7588:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7578:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7578:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7578:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7625:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7628:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7618:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7618:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7649:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7652:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7642:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7642:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7642:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7536:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7715:185:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7754:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7775:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7782:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7787:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7778:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7778:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7768:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7768:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7819:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7822:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7812:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7812:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7812:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7847:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7850:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7840:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7840:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7840:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7731:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7742:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7738:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7738:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7728:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7728:17:7"
															},
															"nodeType": "YulIf",
															"src": "7725:140:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7874:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7881:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7874:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7697:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7707:3:7",
														"type": ""
													}
												],
												"src": "7668:232:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8066:475:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8076:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8086:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8080:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8097:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8115:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8126:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8111:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8111:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8101:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8145:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8156:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8168:17:7",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "8179:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "8172:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8209:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8194:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8194:22:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8225:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8236:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8247:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8232:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8232:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8225:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8259:20:7",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "8273:6:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8263:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8288:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8292:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8356:159:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8377:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8405:6:7"
																								}
																							],
																							"functionName": {
																								"name": "abi_decode_address",
																								"nodeType": "YulIdentifier",
																								"src": "8386:18:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8386:26:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8422:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8427:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "8418:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8418:11:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8431:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "8414:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8414:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8382:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8382:52:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8370:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8370:65:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8370:65:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8448:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8459:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8464:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8455:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8455:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8448:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8480:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8494:6:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8502:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8490:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8490:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8480:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8318:1:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8321:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8315:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8315:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8329:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8331:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8340:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8343:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8336:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8336:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8331:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8311:3:7",
																"statements": []
															},
															"src": "8307:208:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8524:11:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8532:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8524:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8027:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8038:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8046:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8057:4:7",
														"type": ""
													}
												],
												"src": "7905:636:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8653:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8663:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8675:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8686:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8671:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8663:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8705:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8720:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8728:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8716:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8716:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8698:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8698:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8622:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8633:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8644:4:7",
														"type": ""
													}
												],
												"src": "8546:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8874:119:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8884:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8896:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8907:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8892:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8892:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8884:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8926:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8937:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8919:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8919:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8919:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8964:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8975:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8960:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8960:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8980:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8953:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8953:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8835:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8846:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8854:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8865:4:7",
														"type": ""
													}
												],
												"src": "8745:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9239:359:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9249:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9261:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9272:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9257:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9257:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9249:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9285:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9303:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9308:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9299:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9312:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9295:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9289:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9330:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9345:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9353:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9341:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9341:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9323:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9323:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9323:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9377:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9388:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9373:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9373:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9397:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9405:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9393:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9393:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9366:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9366:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9366:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9429:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9440:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9425:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9425:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "9449:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9457:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9445:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9445:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9418:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9418:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9481:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9492:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9477:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9477:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9497:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9470:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9470:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9470:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9524:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9535:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9520:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9520:19:7"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9541:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9513:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9513:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9513:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:19:7"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "9585:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9168:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "9179:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9187:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9195:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9203:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9211:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9219:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9230:4:7",
														"type": ""
													}
												],
												"src": "8998:600:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9684:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9730:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9739:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9742:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9732:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9732:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9732:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9705:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9714:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9701:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9701:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9726:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9697:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9697:32:7"
															},
															"nodeType": "YulIf",
															"src": "9694:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9755:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9771:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9765:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9765:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9755:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9650:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9661:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9673:6:7",
														"type": ""
													}
												],
												"src": "9603:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9977:280:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9987:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9999:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10010:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9995:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9995:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9987:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10023:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10041:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10046:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10037:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10037:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10050:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10033:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10027:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10068:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10083:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10091:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10079:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10079:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10061:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10061:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10061:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10115:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10126:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10111:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10111:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10135:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10143:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10131:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10131:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10104:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10104:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10167:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10178:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10163:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10163:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10187:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10195:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10183:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10183:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10156:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10156:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10219:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10230:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10215:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10215:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "10239:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10247:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10235:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10208:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10208:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10208:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9922:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9933:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9941:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9949:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9957:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9968:4:7",
														"type": ""
													}
												],
												"src": "9792:465:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10419:227:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10429:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10441:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10452:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10437:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10437:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10429:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10464:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10482:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10487:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10478:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10478:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10491:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10474:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10468:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10509:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10524:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10532:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10520:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10520:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10502:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10502:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10556:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10567:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10552:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10552:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10576:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10584:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10572:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10572:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10545:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10545:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10545:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10608:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10619:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10604:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10604:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10628:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10636:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10624:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10624:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10597:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10597:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10372:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10383:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10391:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10399:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10410:4:7",
														"type": ""
													}
												],
												"src": "10262:384:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10808:162:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10818:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10841:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10826:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10826:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10818:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10860:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10871:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10853:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10853:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10898:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10909:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10894:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10894:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10914:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10887:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10887:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10887:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10941:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10952:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10937:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10937:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10930:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10930:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10930:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10761:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10772:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10780:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10788:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10799:4:7",
														"type": ""
													}
												],
												"src": "10651:319:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11149:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11166:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11177:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11159:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11159:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11159:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11200:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11211:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11196:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11196:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11216:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11189:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11189:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11189:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11239:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11250:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11235:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11235:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11255:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11228:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11310:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11321:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11306:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11326:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11299:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11299:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11299:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11344:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11356:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11367:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11352:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11352:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11344:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11126:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11140:4:7",
														"type": ""
													}
												],
												"src": "10975:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11556:236:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11573:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11584:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11566:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11566:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11566:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11607:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11618:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11603:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11603:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11623:2:7",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11596:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11596:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11596:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:7"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:34:7",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11635:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11717:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11728:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11713:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11713:18:7"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11733:16:7",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11706:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11706:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11706:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11759:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11771:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11782:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11767:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11767:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11759:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11533:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11547:4:7",
														"type": ""
													}
												],
												"src": "11382:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11971:233:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11988:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11999:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11981:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11981:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11981:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12022:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12033:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12018:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12018:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12038:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12011:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12011:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12011:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12061:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12072:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12057:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12057:18:7"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12077:34:7",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12050:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12050:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12050:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12132:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12143:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12128:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12128:18:7"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12148:13:7",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12121:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12121:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12121:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12171:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12183:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12194:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12179:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12171:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11948:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11962:4:7",
														"type": ""
													}
												],
												"src": "11797:407:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n    {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := abi_decode_address(add(headStart, 192))\n        value7 := abi_decode_address(add(headStart, 224))\n        value8 := abi_decode_address(add(headStart, 256))\n        value9 := abi_decode_address(add(headStart, 288))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 64)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_address(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79D37981 GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xD1783FA8 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xEF3BAC5E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF77C4791 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x7A4 JUMPI DUP1 PUSH4 0xF9BFD907 EQ PUSH2 0x7B7 JUMPI DUP1 PUSH4 0xFE865DB9 EQ PUSH2 0x7C0 JUMPI DUP1 PUSH4 0xFFC97CE9 EQ PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEF3BAC5E EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xF52C6764 EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0xF679EDA1 EQ PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDEBFDA30 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xDEBFDA30 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xE592C5FA EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0xE6ABB8BD EQ PUSH2 0x73A JUMPI DUP1 PUSH4 0xEEA99787 EQ PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD1783FA8 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xD4F3949A EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0xD77AB72D EQ PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E1B8FA2 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xB192362A GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xB192362A EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0xB8E09260 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xB9059D73 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xBED65BAE EQ PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E1B8FA2 EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0xA361F404 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xAB879827 EQ PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8ED5BB92 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8ED5BB92 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x91BA87D8 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0x956C9DA0 EQ PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79D37981 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x8C8A4B58 EQ PUSH2 0x5F3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F40E368 GT PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6155501B GT PUSH2 0x261 JUMPI DUP1 PUSH4 0x698D92CB GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x698D92CB EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x6A5BF606 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0x725C9C49 EQ PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6155501B EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x62969467 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x64C65705 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x64FACDD5 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x58D4C4EA GT PUSH2 0x29D JUMPI DUP1 PUSH4 0x58D4C4EA EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x595D4ECE EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x5C23AED6 EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0x60BDF9E5 EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F40E368 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x54CF2AEB EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x56FC97A0 EQ PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CE2A218 GT PUSH2 0x330 JUMPI DUP1 PUSH4 0x41273657 GT PUSH2 0x30A JUMPI DUP1 PUSH4 0x41273657 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x429E0971 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x45B61B00 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x49B2045C EQ PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CE2A218 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x35824061 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x3924F233 EQ PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12440CCB GT PUSH2 0x36C JUMPI DUP1 PUSH4 0x12440CCB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x1BB8C61D EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x1C425A45 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x235EC73D EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4336BB3 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x573F19C EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x1218CF18 EQ PUSH2 0x3DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39C PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x86 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1987 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x81 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7F SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x83 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x84 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x82 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x79 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A94 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x39C PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x39C PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x5C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B7B JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x3ED PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x73 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x85 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x601 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x64B CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x105F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x7A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x667 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x7B SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x6B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1987 JUMP JUMPDEST PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x6F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x80 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x1473 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x728 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x748 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x781 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x162A JUMP JUMPDEST PUSH2 0x39C PUSH1 0x7C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x7D SLOAD PUSH2 0x3C2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x7CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x7E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C4 DUP2 GT ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B14F147 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x79 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7A DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x7A990B3304DF1347B430697979619A7A4C80CB4BD939E73CED1F7CA6101D6F6 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 PUSH1 0x75 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x8FE JUMPI PUSH2 0x8FE PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x94D JUMPI PUSH2 0x94D PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x962 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6954B3B4020BD8480CD160FFFD549537B617F20A8074CE45B2DEE80CAB6EF8E2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9A8 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x9BA DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8DF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 PUSH1 0x77 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xA14 JUMPI PUSH2 0xA14 PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xA63 JUMPI PUSH2 0xA63 PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAFED47930189EA124B8D808450BA0E6C685037DE026CB6E56907751F1EEF52DC DUP5 PUSH1 0x40 MLOAD PUSH2 0xABE SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0xAD0 DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x68 SLOAD DUP3 GT ISZERO PUSH2 0xAEC JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB45 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4CD66137 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x73 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5647EFF4880E5135952763BDA009997B9C8669CAC9292EF87F28BADCA4F32A6 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x68 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA604CBDCA7EE706AAFEA3C555E0385946D7B121453A1B0AC8B3CD58C63014F07 SWAP1 PUSH1 0x20 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9BE12E77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 PUSH1 0x0 DUP2 PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC3E3D85 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB3 PUSH1 0x74 DUP4 DUP4 PUSH2 0x18F8 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB67C241A52658F85EC5362073FC9A0909E07AAD7E75F92291C35F910C57F8086 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB PUSH1 0x1 PUSH2 0x17BA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD1B PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE PUSH2 0xD4A DUP6 PUSH1 0x0 DUP6 DUP2 DUP9 DUP2 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0xD58 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0xE4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD9E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x82 DUP3 SWAP1 SSTORE PUSH1 0x83 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x377241D1CD344FBE941F17D99A8EA4B7C81990EC2DA5F6D7CCFE19B9B1676F8F SWAP2 ADD PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0xE4B PUSH1 0x0 PUSH2 0x1876 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x66 DUP1 SLOAD DUP10 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x67 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x69 DUP7 SWAP1 SSTORE PUSH1 0x6A DUP6 SWAP1 SSTORE PUSH1 0x6B DUP5 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xD4CA73C532248C12FC93B1DD748B3954751548CAC9A9565697A3849BF7DD3B4C SWAP1 PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 PUSH1 0x78 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xF9B JUMPI PUSH2 0xF9B PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xFEA JUMPI PUSH2 0xFEA PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E48685292272E85FA3BE83F07779AF7794D29A6EFB26B5F834BFB48E220D370 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1045 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x1057 DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3C88345B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF220D16C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST POP PUSH1 0x7D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1D38DCED3210495AD7EFF4825FD4DD5CC0E44C11C98519840691E5391C78CD15 SWAP1 PUSH1 0x20 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 PUSH1 0x76 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x118F JUMPI PUSH2 0x118F PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11A4 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x11DE JUMPI PUSH2 0x11DE PUSH2 0x1D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11F3 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA36D60ECFF7C14072A077A9B05C8C98CFDFBF7B5F8E354A071764C27E5330855 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1239 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x124B DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x7E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x7F DUP1 SLOAD DUP8 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP6 AND DUP2 OR DUP3 SSTORE PUSH1 0x81 DUP1 SLOAD SWAP5 DUP9 AND SWAP5 SWAP1 SWAP6 AND DUP5 OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0x11CBCE6C87791F09A7C2108A3ABEA2993AB3DE5C9ED89A0BD108618ECE832B23 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x1770 DUP2 GT ISZERO PUSH2 0x1368 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B14F147 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x7B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7C DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x49D9E0CA3AA68AF12938170E0CD7267D832389603122E97B1CC70333942B8D21 SWAP2 ADD PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x84 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x85 DUP1 SLOAD DUP7 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x86 DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x4AAF8791C546D8D1000B9D104834F06EEA9B95C08F81C36F7EEE152623EDF4AE SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x7E SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x149F JUMPI POP PUSH1 0x7F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 PUSH2 0x14B7 JUMPI POP PUSH1 0x80 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 PUSH2 0x14CF JUMPI POP PUSH1 0x81 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x3E8 DUP6 GT DUP1 PUSH2 0x1510 JUMPI POP PUSH2 0x3E8 DUP4 GT JUMPDEST DUP1 PUSH2 0x151E JUMPI POP PUSH4 0xBD014D7E DUP2 GT JUMPDEST ISZERO PUSH2 0x154D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B873B29 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x6D DUP8 SWAP1 SSTORE PUSH1 0x6E DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x6F DUP6 SWAP1 SSTORE PUSH1 0x70 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x71 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xC4D5650477CD4354E9A07E898DF55ABE6FECEC3E415531E27A8499597B462BE2 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 PUSH32 0x6EBCBF01234512B5D15E025B0AA6BD7514D7F7690B4FF5B260BEA6B9AAC29E0F SWAP1 PUSH1 0x60 ADD PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x820 JUMP JUMPDEST PUSH2 0x16C2 DUP2 PUSH2 0x1876 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x74 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x171D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16FF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1776 JUMPI PUSH1 0x40 MLOAD PUSH4 0x279A13C3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x162496FC30AED361442504CDD534D5911E2997E66EB97F7455486C9476C8BFB SWAP1 PUSH1 0x20 ADD PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1801 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x17DD JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x17F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP2 AND LT PUSH2 0x1828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x186E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0xE4B PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0xE4B CALLER PUSH2 0x1876 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x194B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x194B JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1918 JUMP JUMPDEST POP PUSH2 0x1957 SWAP3 SWAP2 POP PUSH2 0x195B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x195C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A3 DUP4 PUSH2 0x1970 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19CC DUP3 PUSH2 0x1970 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A57 DUP7 DUP3 DUP8 ADD PUSH2 0x19D3 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ACA DUP6 DUP3 DUP7 ADD PUSH2 0x19D3 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x1AF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AFF DUP12 PUSH2 0x1970 JUMP JUMPDEST SWAP10 POP PUSH2 0x1B0D PUSH1 0x20 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP9 POP PUSH2 0x1B1B PUSH1 0x40 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1B3E PUSH1 0xC0 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B4C PUSH1 0xE0 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP3 POP PUSH2 0x1B5B PUSH2 0x100 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A PUSH2 0x120 DUP13 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1BB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BBF DUP8 PUSH2 0x1970 JUMP JUMPDEST SWAP6 POP PUSH2 0x1BCD PUSH1 0x20 DUP9 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP5 POP PUSH2 0x1BDB PUSH1 0x40 DUP9 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1B DUP6 PUSH2 0x1970 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C29 PUSH1 0x20 DUP7 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C37 PUSH1 0x40 DUP7 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 PUSH1 0x60 DUP7 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6E DUP5 PUSH2 0x1970 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C7C PUSH1 0x20 DUP6 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8A PUSH1 0x40 DUP6 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1CAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB5 DUP8 PUSH2 0x1970 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1CCA PUSH1 0x40 DUP9 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH2 0x1CDF PUSH1 0x80 DUP9 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D33 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1D0E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1DCD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 PUSH1 0x40 DUP5 ADD DUP4 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1E15 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E02 DUP5 PUSH2 0x1970 JUMP JUMPDEST AND DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1DE9 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xA8 0xDD PUSH29 0xAE10FD0CEEA443A3032F42612CC08C36BBA6CF5A0EF69C690CA0EA7B64 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "584:16065:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4762:40;;;;;;;;;160:25:7;;;148:2;133:18;4762:40:4;;;;;;;;6439:38;;;;;-1:-1:-1;;;;;6439:38:4;;;;;;-1:-1:-1;;;;;360:32:7;;;342:51;;330:2;315:18;6439:38:4;196:203:7;12001:478:4;;;;;;:::i;:::-;;:::i;:::-;;5615:54;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1197:14:7;;1190:22;1172:41;;1160:2;1145:18;5615:54:4;1032:187:7;8167:284:4;;;;;;:::i;:::-;;:::i;6211:31::-;;;;;-1:-1:-1;;;;;6211:31:4;;;6138;;;;;-1:-1:-1;;;;;6138:31:4;;;10068:284;;;;;;:::i;:::-;;:::i;13710:197::-;;;;;;:::i;:::-;;:::i;5532:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14015:244;;;;;;:::i;:::-;;:::i;6295:27::-;;;;;;4838:36;;;;;-1:-1:-1;;;;;4838:36:4;;;6347:43;;;;;-1:-1:-1;;;;;6347:43:4;;;5439:54;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6268:22;;;;;;4100:36;;;;;;6103:30;;;;;-1:-1:-1;;;;;6103:30:4;;;5698:40;;;;;-1:-1:-1;;;;;5698:40:4;;;3994:29;;;;;-1:-1:-1;;;;;3994:29:4;;;13385:197;;;;;;:::i;:::-;;:::i;14359:371::-;;;;;;:::i;:::-;;:::i;4204:39::-;;;;;;6484:745;;;;;;:::i;:::-;;:::i;4428:42::-;;;;;;4667:36;;;;;-1:-1:-1;;;;;4667:36:4;;;15904:216;;;;;;:::i;:::-;;:::i;1908:101:0:-;;;:::i;5195:28:4:-;;;;;-1:-1:-1;;;;;5195:28:4;;;6395:39;;;;;-1:-1:-1;;;;;6395:39:4;;;7235:745;;;;;;:::i;:::-;;:::i;1276:85:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;1276:85;;5270:29:4;;;;;;:::i;:::-;;:::i;9128:296::-;;;;;;:::i;:::-;;:::i;14877:233::-;;;;;;:::i;:::-;;:::i;5775:30::-;;;;;;8642:295;;;;;;:::i;:::-;;:::i;5897:32::-;;;;;-1:-1:-1;;;;;5897:32:4;;;4594:37;;;;;;4930:43;;;;;;15116:467;;;;;;:::i;:::-;;:::i;12733:491::-;;;;;;:::i;:::-;;:::i;5101:26::-;;;;;;;;-1:-1:-1;;;;;5101:26:4;;;3914:41;;;;;-1:-1:-1;;;;;3914:41:4;;;16126:520;;;;;;:::i;:::-;;:::i;6174:32::-;;;;;-1:-1:-1;;;;;6174:32:4;;;15664:234;;;;;;:::i;:::-;;:::i;5040:35::-;;;;;;;;;;;;5396:4:7;5384:17;;;5366:36;;5354:2;5339:18;5040:35:4;5224:184:7;10648:1101:4;;;;;;:::i;:::-;;:::i;4505:33::-;;;;;-1:-1:-1;;;;;4505:33:4;;;3832:44;;;;;-1:-1:-1;;;;;3832:44:4;;;2158:198:0;;;;;;:::i;:::-;;:::i;5971:35:4:-;;;;;;14771:100;;;:::i;:::-;;;;;;;:::i;6046:34::-;;;;;-1:-1:-1;;;;;6046:34:4;;;4307:46;;;;;;9586:297;;;;;;:::i;:::-;;:::i;5343:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;12001:478;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;;;;;;;;;3646:4:4::1;12143:19;:43;12139:131;;;12204:58;::::0;-1:-1:-1;;;12204:58:4;;::::1;::::0;::::1;160:25:7::0;;;133:18;;12204:58:4::1;14:177:7::0;12139:131:4::1;12278:25;:57:::0;;-1:-1:-1;;;;;;12278:57:4::1;-1:-1:-1::0;;;;;12278:57:4;::::1;::::0;;::::1;::::0;;;12342:15:::1;:37:::0;;;12393:80:::1;::::0;;7431:51:7;;;7513:2;7498:18;;7491:34;;;12418:10:4::1;::::0;12393:80:::1;::::0;7404:18:7;12393:80:4::1;;;;;;;;12001:478:::0;;:::o;8167:284::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;8268:12:4::1;8263:183;8286:22:::0;;::::1;8263:183;;;8364:3;8327:18;:34;8346:8;;8355:4;8346:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8327:34:4::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;8327:34:4;:40;;-1:-1:-1;;8327:40:4::1;::::0;::::1;;::::0;;;::::1;::::0;;8418:8;;8427:4;8418:14;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8381:57:4::1;8406:10;-1:-1:-1::0;;;;;8381:57:4::1;;8434:3;8381:57;;;;1197:14:7::0;1190:22;1172:41;;1160:2;1145:18;;1032:187;8381:57:4::1;;;;;;;;8310:6:::0;::::1;::::0;::::1;:::i;:::-;;;;8263:183;;;;8167:284:::0;;;:::o;10068:::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;10169:12:4::1;10164:183;10187:22:::0;;::::1;10164:183;;;10265:3;10228:18;:34;10247:8;;10256:4;10247:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10228:34:4::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;10228:34:4;:40;;-1:-1:-1;;10228:40:4::1;::::0;::::1;;::::0;;;::::1;::::0;;10319:8;;10328:4;10319:14;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10282:57:4::1;10307:10;-1:-1:-1::0;;;;;10282:57:4::1;;10335:3;10282:57;;;;1197:14:7::0;1190:22;1172:41;;1160:2;1145:18;;1032:187;10282:57:4::1;;;;;;;;10211:6:::0;::::1;::::0;::::1;:::i;:::-;;;;10164:183;;13710:197:::0;13793:4;13832:21;;13810:19;:43;13806:78;;;-1:-1:-1;13871:5:4;;13710:197;-1:-1:-1;13710:197:4:o;13806:78::-;-1:-1:-1;13897:4:4;;13710:197;-1:-1:-1;13710:197:4:o;14015:244::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;14089:25:4;::::1;14085:81;;14123:43;;-1:-1:-1::0;;;14123:43:4::1;;;;;;;;;;;14085:81;14173:13;:27:::0;;-1:-1:-1;;;;;;14173:27:4::1;-1:-1:-1::0;;;;;14173:27:4;::::1;::::0;;::::1;::::0;;;14212:41:::1;::::0;342:51:7;;;14229:10:4::1;::::0;14212:41:::1;::::0;330:2:7;315:18;14212:41:4::1;;;;;;;;14015:244:::0;:::o;13385:197::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;13466:21:4::1;:46:::0;;;13524:52:::1;::::0;160:25:7;;;13541:10:4::1;::::0;13524:52:::1;::::0;148:2:7;133:18;13524:52:4::1;14:177:7::0;14359:371:4;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;14471:1:4::1;14448:24:::0;::::1;14444:88;;;14481:51;;-1:-1:-1::0;;;14481:51:4::1;;;;;;;;;;;14444:88;14565:11;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;;14565:11:4::1;14545:13:::0;;14559:1:::1;14545:13:::0;:16:::1;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14545:31:4::1;;14541:89;;14585:45;;-1:-1:-1::0;;;14585:45:4::1;;;;;;;;;;;14541:89;14639:28;:12;14654:13:::0;;14639:28:::1;:::i;:::-;;14698:10;-1:-1:-1::0;;;;;14679:45:4::1;;14710:13;;14679:45;;;;;;;:::i;6484:745::-:0;3111:19:1;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:1;;;;;3168:65;6872:35:4::1;:33;:35::i;:::-;6916:11;:26:::0;;-1:-1:-1;;;;;;6916:26:4::1;;-1:-1:-1::0;;;;;6916:26:4;::::1;;;::::0;;6951:83:::1;6959:19:::0;-1:-1:-1;6983:20:4;-1:-1:-1;7008:22:4;-1:-1:-1;6951:7:4::1;:83::i;:::-;7041:182;7059:21;7089:18;7116:15;7140:16;7165:23;7197:19;7041:9;:182::i;:::-;3257:14:1::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:1;;;3327:14;;-1:-1:-1;5366:36:7;;3327:14:1;;5354:2:7;5339:18;3327:14:1;;;;;;;3253:99;3101:257;6484:745:4;;;;;;;;;;:::o;15904:216::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;15994:7:4::1;:18:::0;;;16019:12:::1;:28:::0;;;16061:53:::1;::::0;;8919:25:7;;;8975:2;8960:18;;8953:34;;;16078:10:4::1;::::0;16061:53:::1;::::0;8892:18:7;16061:53:4::1;8745:248:7::0;1908:101:0;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;7235:745:4:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7485:20:4::1;:44:::0;;-1:-1:-1;;;;;7485:44:4;;::::1;-1:-1:-1::0;;;;;;7485:44:4;;::::1;::::0;::::1;::::0;;;7536:17:::1;:38:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;7581:14:::1;:32:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;7620:15:::1;:34:::0;;;7661:22:::1;:48:::0;;;7716:18:::1;:40:::0;;;7770:204:::1;::::0;;9323:34:7;;;9388:2;9373:18;;9366:43;;;;9425:18;;;9418:43;9492:2;9477:18;;9470:34;;;9535:3;9520:19;;9513:35;;;9303:3;9564:19;;9557:35;;;7791:10:4::1;::::0;7770:204:::1;::::0;9272:3:7;9257:19;7770:204:4::1;;;;;;;;7235:745:::0;;;;;;:::o;5270:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5270:29:4;;-1:-1:-1;5270:29:4;:::o;9128:296::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;9233:12:4::1;9228:191;9251:22:::0;;::::1;9228:191;;;9333:3;9292:22;:38;9315:8;;9324:4;9315:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9292:38:4::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;9292:38:4;:44;;-1:-1:-1;;9292:44:4::1;::::0;::::1;;::::0;;;::::1;::::0;;9391:8;;9400:4;9391:14;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9350:61:4::1;9379:10;-1:-1:-1::0;;;;;9350:61:4::1;;9407:3;9350:61;;;;1197:14:7::0;1190:22;1172:41;;1160:2;1145:18;;1032:187;9350:61:4::1;;;;;;;;9275:6:::0;::::1;::::0;::::1;:::i;:::-;;;;9228:191;;14877:233:::0;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;14968:48:4::1;::::0;-1:-1:-1;;;14968:48:4;;15013:1:::1;14968:48;::::0;::::1;342:51:7::0;-1:-1:-1;;;;;14968:36:4;::::1;::::0;::::1;::::0;315:18:7;;14968:48:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;15025:10:4::1;:24:::0;;-1:-1:-1;;;;;;15025:24:4::1;-1:-1:-1::0;;;;;15025:24:4;::::1;::::0;;::::1;::::0;;;15063:41:::1;::::0;342:51:7;;;15080:10:4::1;::::0;15063:41:::1;::::0;330:2:7;315:18;15063:41:4::1;196:203:7::0;8642:295:4;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;8746:12:4::1;8741:191;8764:22:::0;;::::1;8741:191;;;8846:3;8805:22;:38;8828:8;;8837:4;8828:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8805:38:4::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;8805:38:4;:44;;-1:-1:-1;;8805:44:4::1;::::0;::::1;;::::0;;;::::1;::::0;;8904:8;;8913:4;8904:14;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8863:61:4::1;8892:10;-1:-1:-1::0;;;;;8863:61:4::1;;8920:3;8863:61;;;;1197:14:7::0;1190:22;1172:41;;1160:2;1145:18;;1032:187;8863:61:4::1;;;;;;;;8788:6:::0;::::1;::::0;::::1;:::i;:::-;;;;8741:191;;15116:467:::0;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;15296:15:4::1;:34:::0;;-1:-1:-1;;;;;15296:34:4;;::::1;-1:-1:-1::0;;;;;;15296:34:4;;::::1;::::0;::::1;::::0;;;15337:16:::1;:36:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;15380:17:::1;:38:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;15425:16:::1;:36:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;15475:102:::1;::::0;;10061:34:7;;;10126:2;10111:18;;10104:43;;;;10163:18;;;10156:43;;;;10230:2;10215:18;;10208:43;15490:10:4::1;::::0;15475:102:::1;::::0;9995:19:7;15475:102:4::1;;;;;;;15116:467:::0;;;;:::o;12733:491::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;3709:4:4::1;12877:24;:53;12873:146;;;12948:63;::::0;-1:-1:-1;;;12948:63:4;;::::1;::::0;::::1;160:25:7::0;;;133:18;;12948:63:4::1;14:177:7::0;12873:146:4::1;13027:17;:41:::0;;-1:-1:-1;;;;;;13027:41:4::1;-1:-1:-1::0;;;;;13027:41:4;::::1;::::0;;::::1;::::0;;;13075:20:::1;:47:::0;;;13136:82:::1;::::0;;7431:51:7;;;7513:2;7498:18;;7491:34;;;13166:10:4::1;::::0;13136:82:::1;::::0;7404:18:7;13136:82:4::1;7257:274:7::0;16126:520:4;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;16303:28:4::1;:60:::0;;-1:-1:-1;;;;;16303:60:4;;::::1;-1:-1:-1::0;;;;;;16303:60:4;;::::1;::::0;::::1;::::0;;;16370:24:::1;:52:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;16429:23:::1;:50:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;16493:147:::1;::::0;;10502:34:7;;;10567:2;10552:18;;10545:43;;;;10604:18;;;10597:43;16518:10:4::1;::::0;16493:147:::1;::::0;10452:2:7;10437:18;16493:147:4::1;;;;;;;16126:520:::0;;;:::o;15664:234::-;15762:15;;15724:4;;-1:-1:-1;;;;;15751:26:4;;;15762:15;;15751:26;;:64;;-1:-1:-1;15799:16:4;;-1:-1:-1;;;;;15788:27:4;;;15799:16;;15788:27;15751:64;:103;;;-1:-1:-1;15837:17:4;;-1:-1:-1;;;;;15826:28:4;;;15837:17;;15826:28;15751:103;:141;;;-1:-1:-1;15876:16:4;;-1:-1:-1;;;;;15865:27:4;;;15876:16;;15865:27;15751:141;15737:155;15664:234;-1:-1:-1;;15664:234:4:o;10648:1101::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;3461:4:4::1;10928:17;:39;:95;;;;3520:4;10978:20;:45;10928:95;:157;;;;3582:10;11034:23;:51;10928:157;10916:301;;;11109:100;::::0;-1:-1:-1;;;11109:100:4;;::::1;::::0;::::1;10853:25:7::0;;;10894:18;;;10887:34;;;10937:18;;;10930:34;;;10826:18;;11109:100:4::1;10651:319:7::0;10916:301:4::1;11225:18;:43:::0;;-1:-1:-1;;;;;11225:43:4;;::::1;-1:-1:-1::0;;;;;;11225:43:4;;::::1;;::::0;;;11275:13:::1;:33:::0;;;11317:21:::1;:49:::0;;;;::::1;::::0;;::::1;;::::0;;11373:16:::1;:39:::0;;;11421:21:::1;:49:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;11477:19:::1;:45:::0;;;11536:88:::1;::::0;;10853:25:7;;;10909:2;10894:18;;10887:34;;;10937:18;;;10930:34;;;11547:10:4::1;::::0;11536:88:::1;::::0;10841:2:7;10826:18;11536:88:4::1;;;;;;;11636:107;::::0;;-1:-1:-1;;;;;10520:15:7;;;10502:34;;10572:15;;;10567:2;10552:18;;10545:43;10624:15;;10604:18;;;10597:43;;;;11654:10:4::1;::::0;11636:107:::1;::::0;10452:2:7;10437:18;11636:107:4::1;10262:384:7::0;2158:198:0;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:0;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:0;;11177:2:7;2238:73:0::1;::::0;::::1;11159:21:7::0;11216:2;11196:18;;;11189:30;11255:34;11235:18;;;11228:62;-1:-1:-1;;;11306:18:7;;;11299:36;11352:19;;2238:73:0::1;10975:402:7::0;2238:73:0::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;14771:100:4:-;14821:16;14853:12;14846:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14846:19:4;;;;;;;;;;;;;;;;;;;;;;;14771:100;:::o;9586:297::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;3408:1:4::1;9667:38;::::0;::::1;;9663:113;;;9723:45;;-1:-1:-1::0;;;9723:45:4::1;;;;;;;;;;;9663:113;9782:13;:33:::0;;-1:-1:-1;;9782:33:4::1;;::::0;::::1;::::0;;::::1;::::0;;;9827:50:::1;::::0;5366:36:7;;;9847:10:4::1;::::0;9827:50:::1;::::0;5354:2:7;5339:18;9827:50:4::1;5224:184:7::0;5287:808:1;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:1;1476:19:2;:23;5738:61:1;5713:166;;;;-1:-1:-1;;;5713:166:1;;;;;;;:::i;:::-;-1:-1:-1;5900:5:1;;5287:808;-1:-1:-1;5287:808:1:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:1;;;;;;;:::i;:::-;-1:-1:-1;6031:12:1;:22;;-1:-1:-1;;6031:22:1;;;;;;;;;;;;-1:-1:-1;;5287:808:1:o;5680:409::-;5287:808;;;:::o;988:95:0:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;2510:187::-:0;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;1089:111::-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:3::0;1161:18:0::1;:32::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;404:173:7;472:20;;-1:-1:-1;;;;;521:31:7;;511:42;;501:70;;567:1;564;557:12;582:254;650:6;658;711:2;699:9;690:7;686:23;682:32;679:52;;;727:1;724;717:12;679:52;750:29;769:9;750:29;:::i;:::-;740:39;826:2;811:18;;;;798:32;;-1:-1:-1;;;582:254:7:o;841:186::-;900:6;953:2;941:9;932:7;928:23;924:32;921:52;;;969:1;966;959:12;921:52;992:29;1011:9;992:29;:::i;:::-;982:39;841:186;-1:-1:-1;;;841:186:7:o;1224:367::-;1287:8;1297:6;1351:3;1344:4;1336:6;1332:17;1328:27;1318:55;;1369:1;1366;1359:12;1318:55;-1:-1:-1;1392:20:7;;1435:18;1424:30;;1421:50;;;1467:1;1464;1457:12;1421:50;1504:4;1496:6;1492:17;1480:29;;1564:3;1557:4;1547:6;1544:1;1540:14;1532:6;1528:27;1524:38;1521:47;1518:67;;;1581:1;1578;1571:12;1518:67;1224:367;;;;;:::o;1596:598::-;1688:6;1696;1704;1757:2;1745:9;1736:7;1732:23;1728:32;1725:52;;;1773:1;1770;1763:12;1725:52;1813:9;1800:23;1846:18;1838:6;1835:30;1832:50;;;1878:1;1875;1868:12;1832:50;1917:70;1979:7;1970:6;1959:9;1955:22;1917:70;:::i;:::-;2006:8;;-1:-1:-1;1891:96:7;-1:-1:-1;;2091:2:7;2076:18;;2063:32;2131:13;;2124:21;2114:32;;2104:60;;2160:1;2157;2150:12;2104:60;2183:5;2173:15;;;1596:598;;;;;:::o;2199:180::-;2258:6;2311:2;2299:9;2290:7;2286:23;2282:32;2279:52;;;2327:1;2324;2317:12;2279:52;-1:-1:-1;2350:23:7;;2199:180;-1:-1:-1;2199:180:7:o;2384:437::-;2470:6;2478;2531:2;2519:9;2510:7;2506:23;2502:32;2499:52;;;2547:1;2544;2537:12;2499:52;2587:9;2574:23;2620:18;2612:6;2609:30;2606:50;;;2652:1;2649;2642:12;2606:50;2691:70;2753:7;2744:6;2733:9;2729:22;2691:70;:::i;:::-;2780:8;;2665:96;;-1:-1:-1;2384:437:7;-1:-1:-1;;;;2384:437:7:o;2826:841::-;2966:6;2974;2982;2990;2998;3006;3014;3022;3030;3038;3091:3;3079:9;3070:7;3066:23;3062:33;3059:53;;;3108:1;3105;3098:12;3059:53;3131:29;3150:9;3131:29;:::i;:::-;3121:39;;3179:38;3213:2;3202:9;3198:18;3179:38;:::i;:::-;3169:48;;3236:38;3270:2;3259:9;3255:18;3236:38;:::i;:::-;3226:48;;3321:2;3310:9;3306:18;3293:32;3283:42;;3372:3;3361:9;3357:19;3344:33;3334:43;;3424:3;3413:9;3409:19;3396:33;3386:43;;3448:39;3482:3;3471:9;3467:19;3448:39;:::i;:::-;3438:49;;3506:39;3540:3;3529:9;3525:19;3506:39;:::i;:::-;3496:49;;3564:39;3598:3;3587:9;3583:19;3564:39;:::i;:::-;3554:49;;3622:39;3656:3;3645:9;3641:19;3622:39;:::i;:::-;3612:49;;2826:841;;;;;;;;;;;;;:::o;3672:248::-;3740:6;3748;3801:2;3789:9;3780:7;3776:23;3772:32;3769:52;;;3817:1;3814;3807:12;3769:52;-1:-1:-1;;3840:23:7;;;3910:2;3895:18;;;3882:32;;-1:-1:-1;3672:248:7:o;3925:541::-;4029:6;4037;4045;4053;4061;4069;4122:3;4110:9;4101:7;4097:23;4093:33;4090:53;;;4139:1;4136;4129:12;4090:53;4162:29;4181:9;4162:29;:::i;:::-;4152:39;;4210:38;4244:2;4233:9;4229:18;4210:38;:::i;:::-;4200:48;;4267:38;4301:2;4290:9;4286:18;4267:38;:::i;:::-;4257:48;;4352:2;4341:9;4337:18;4324:32;4314:42;;4403:3;4392:9;4388:19;4375:33;4365:43;;4455:3;4444:9;4440:19;4427:33;4417:43;;3925:541;;;;;;;;:::o;4471:409::-;4557:6;4565;4573;4581;4634:3;4622:9;4613:7;4609:23;4605:33;4602:53;;;4651:1;4648;4641:12;4602:53;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4779:38;4813:2;4802:9;4798:18;4779:38;:::i;:::-;4769:48;;4836:38;4870:2;4859:9;4855:18;4836:38;:::i;:::-;4826:48;;4471:409;;;;;;;:::o;4885:334::-;4962:6;4970;4978;5031:2;5019:9;5010:7;5006:23;5002:32;4999:52;;;5047:1;5044;5037:12;4999:52;5070:29;5089:9;5070:29;:::i;:::-;5060:39;;5118:38;5152:2;5141:9;5137:18;5118:38;:::i;:::-;5108:48;;5175:38;5209:2;5198:9;5194:18;5175:38;:::i;:::-;5165:48;;4885:334;;;;;:::o;5413:541::-;5517:6;5525;5533;5541;5549;5557;5610:3;5598:9;5589:7;5585:23;5581:33;5578:53;;;5627:1;5624;5617:12;5578:53;5650:29;5669:9;5650:29;:::i;:::-;5640:39;;5726:2;5715:9;5711:18;5698:32;5688:42;;5749:38;5783:2;5772:9;5768:18;5749:38;:::i;:::-;5739:48;;5834:2;5823:9;5819:18;5806:32;5796:42;;5857:39;5891:3;5880:9;5876:19;5857:39;:::i;:::-;5847:49;;5943:3;5932:9;5928:19;5915:33;5905:43;;5413:541;;;;;;;;:::o;5959:658::-;6130:2;6182:21;;;6252:13;;6155:18;;;6274:22;;;6101:4;;6130:2;6353:15;;;;6327:2;6312:18;;;6101:4;6396:195;6410:6;6407:1;6404:13;6396:195;;;6475:13;;-1:-1:-1;;;;;6471:39:7;6459:52;;6566:15;;;;6531:12;;;;6507:1;6425:9;6396:195;;;-1:-1:-1;6608:3:7;;5959:658;-1:-1:-1;;;;;;5959:658:7:o;6622:269::-;6679:6;6732:2;6720:9;6711:7;6707:23;6703:32;6700:52;;;6748:1;6745;6738:12;6700:52;6787:9;6774:23;6837:4;6830:5;6826:16;6819:5;6816:27;6806:55;;6857:1;6854;6847:12;6896:356;7098:2;7080:21;;;7117:18;;;7110:30;7176:34;7171:2;7156:18;;7149:62;7243:2;7228:18;;6896:356::o;7536:127::-;7597:10;7592:3;7588:20;7585:1;7578:31;7628:4;7625:1;7618:15;7652:4;7649:1;7642:15;7668:232;7707:3;7728:17;;;7725:140;;7787:10;7782:3;7778:20;7775:1;7768:31;7822:4;7819:1;7812:15;7850:4;7847:1;7840:15;7725:140;-1:-1:-1;7892:1:7;7881:13;;7668:232::o;7905:636::-;8086:2;8138:21;;;8111:18;;;8194:22;;;8057:4;;8273:6;8247:2;8232:18;;8057:4;8307:208;8321:6;8318:1;8315:13;8307:208;;;-1:-1:-1;;;;;8386:26:7;8405:6;8386:26;:::i;:::-;8382:52;8370:65;;8490:15;;;;8455:12;;;;8343:1;8336:9;8307:208;;;-1:-1:-1;8532:3:7;7905:636;-1:-1:-1;;;;;;7905:636:7:o;9603:184::-;9673:6;9726:2;9714:9;9705:7;9701:23;9697:32;9694:52;;;9742:1;9739;9732:12;9694:52;-1:-1:-1;9765:16:7;;9603:184;-1:-1:-1;9603:184:7:o;11382:410::-;11584:2;11566:21;;;11623:2;11603:18;;;11596:30;11662:34;11657:2;11642:18;;11635:62;-1:-1:-1;;;11728:2:7;11713:18;;11706:44;11782:3;11767:19;;11382:410::o;11797:407::-;11999:2;11981:21;;;12038:2;12018:18;;;12011:30;12077:34;12072:2;12057:18;;12050:62;-1:-1:-1;;;12143:2:7;12128:18;;12121:41;12194:3;12179:19;;11797:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1588800",
								"executionCost": "1666",
								"totalCost": "1590466"
							},
							"external": {
								"alpacaBeneficiary()": "2427",
								"alpacaBeneficiaryBps()": "2395",
								"alpacaBountyBps()": "2418",
								"alpacaReinvestFeeTreasury()": "2427",
								"alpacaToken()": "2481",
								"assetAddTwoSideStrategy()": "2429",
								"controller()": "2403",
								"debtRatioTolerance()": "2418",
								"depositExecutor()": "2405",
								"depositFeeBps()": "2396",
								"depositFeeTreasury()": "2470",
								"fairLaunchAddr()": "2449",
								"feeExemptedCallers(address)": "2644",
								"getReinvestPath()": "infinite",
								"getSwapRouter()": "2470",
								"getWNativeRelayer()": "2405",
								"getWrappedNativeAddr()": "2404",
								"initialize(address,address,address,uint256,uint256,uint256,address,address,address,address)": "infinite",
								"isExecutor(address)": "9049",
								"isVaultSizeAcceptable(uint256)": "2517",
								"leverageLevel()": "2402",
								"managementFeePerSec()": "2351",
								"managementFeeTreasury()": "2449",
								"maxVaultPositionValue()": "2397",
								"owner()": "2444",
								"partialCloseMinimizeStrategy()": "2471",
								"positionValueTolerance()": "2372",
								"rebalanceExecutor()": "2449",
								"rebalanceFactor()": "2374",
								"reinvestExecutor()": "2450",
								"reinvestPath(uint256)": "4682",
								"renounceOwnership()": "28228",
								"setAlpacaBeneficiaryConfig(address,uint256)": "50702",
								"setAlpacaBountyConfig(address,uint256)": "50694",
								"setController(address)": "infinite",
								"setExecutor(address,address,address,address)": "infinite",
								"setFeeExemptedCallers(address[],bool)": "infinite",
								"setFees(address,uint256,address,uint256,address,uint256)": "infinite",
								"setLeverageLevel(uint8)": "28227",
								"setParams(address,address,address,uint256,uint256,uint256)": "infinite",
								"setReinvestPath(address[])": "infinite",
								"setStrategies(address,address,address)": "infinite",
								"setSwapConfig(uint256,uint256)": "48421",
								"setSwapRouter(address)": "28248",
								"setValueLimit(uint256)": "26055",
								"setWhitelistedCallers(address[],bool)": "infinite",
								"setWhitelistedRebalancer(address[],bool)": "infinite",
								"setwhitelistedReinvestors(address[],bool)": "infinite",
								"stableAddTwoSideStrategy()": "2406",
								"swapFee()": "2375",
								"swapFeeDenom()": "2374",
								"transferOwnership(address)": "28401",
								"whitelistedCallers(address)": "2663",
								"whitelistedRebalancers(address)": "2600",
								"whitelistedReinvestors(address)": "2600",
								"withdrawExecutor()": "2472",
								"withdrawalFeeBps()": "2354",
								"withdrawalFeeTreasury()": "2404"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 584,
									"end": 16649,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 16649,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ca8dd7cae10fd0ceea443a3032f42612cc08c36bba6cf5a0ef69c690ca0ea7b64736f6c634300080d0033",
									".code": [
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "79D37981"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "D1783FA8"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "EF3BAC5E"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "F77C4791"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "F77C4791"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "F9BFD907"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "FE865DB9"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "FFC97CE9"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "EF3BAC5E"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "F52C6764"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "F679EDA1"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "DEBFDA30"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "DEBFDA30"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "E592C5FA"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "E6ABB8BD"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "EEA99787"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "D1783FA8"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "D4F3949A"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "D77AB72D"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "9E1B8FA2"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "B192362A"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "B192362A"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "B8E09260"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "B9059D73"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "BED65BAE"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "9E1B8FA2"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "A361F404"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "AB879827"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "8ED5BB92"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "8ED5BB92"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "91BA87D8"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "92EEFE9B"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "956C9DA0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "79D37981"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "8C8A4B58"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "4F40E368"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "6155501B"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "698D92CB"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "698D92CB"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "6A5BF606"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "725C9C49"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "6155501B"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "62969467"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "64C65705"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "64FACDD5"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "58D4C4EA"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "58D4C4EA"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "595D4ECE"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "5C23AED6"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "60BDF9E5"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "4F40E368"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "54CF2AEB"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "56FC97A0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "2CE2A218"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "41273657"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "41273657"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "429E0971"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "45B61B00"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "49B2045C"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "2CE2A218"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "35824061"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "3924F233"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "12440CCB"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "12440CCB"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "1BB8C61D"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "1C425A45"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "235EC73D"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "4336BB3"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "573F19C"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "1218CF18"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 16649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "PUSH",
											"source": 4,
											"value": "6F"
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4802,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "PUSH",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 360,
											"end": 392,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1212,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1032,
											"end": 1219,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6169,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6295,
											"end": 6322,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 6295,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6295,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6295,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6322,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "PUSH",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4874,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6347,
											"end": 6390,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "PUSH",
											"source": 4,
											"value": "7E"
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "PUSH",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5738,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4023,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4204,
											"end": 4243,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4204,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4204,
											"end": 4243,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4204,
											"end": 4243,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4243,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "PUSH",
											"source": 4,
											"value": "6B"
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "PUSH",
											"source": 4,
											"value": "6E"
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4667,
											"end": 4703,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "PUSH",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5195,
											"end": 5223,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "PUSH",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6434,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1276,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1276,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1276,
											"end": 1361,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5775,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5775,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5775,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "7A"
										},
										{
											"begin": 5775,
											"end": 5805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5805,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "PUSH",
											"source": 4,
											"value": "7B"
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4631,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4594,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4594,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "6D"
										},
										{
											"begin": 4594,
											"end": 4631,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4631,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "PUSH",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "PUSH",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5127,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "PUSH",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3955,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6206,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "PUSH",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5384,
											"end": 5401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5384,
											"end": 5401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5384,
											"end": 5401,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5224,
											"end": 5408,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "PUSH",
											"source": 4,
											"value": "6C"
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4538,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3876,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5971,
											"end": 6006,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5971,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5971,
											"end": 6006,
											"name": "PUSH",
											"source": 4,
											"value": "7C"
										},
										{
											"begin": 5971,
											"end": 6006,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6006,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "PUSH",
											"source": 4,
											"value": "7D"
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6080,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4353,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4307,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4307,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "6A"
										},
										{
											"begin": 4307,
											"end": 4353,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4353,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5393,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3646,
											"end": 3650,
											"name": "PUSH",
											"source": 4,
											"value": "9C4"
										},
										{
											"begin": 12143,
											"end": 12162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12143,
											"end": 12186,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12139,
											"end": 12270,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12139,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 12139,
											"end": 12270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12204,
											"end": 12262,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12204,
											"end": 12262,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B14F147"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12204,
											"end": 12262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12204,
											"end": 12262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12204,
											"end": 12262,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12204,
											"end": 12262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12204,
											"end": 12262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12139,
											"end": 12270,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 12139,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12303,
											"name": "PUSH",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12278,
											"end": 12335,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12342,
											"end": 12357,
											"name": "PUSH",
											"source": 4,
											"value": "7A"
										},
										{
											"begin": 12342,
											"end": 12379,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12342,
											"end": 12379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12342,
											"end": 12379,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7431,
											"end": 7482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7513,
											"end": 7515,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7525,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12418,
											"end": 12428,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 12418,
											"end": 12428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "PUSH",
											"source": 4,
											"value": "7A990B3304DF1347B430697979619A7A4C80CB4BD939E73CED1F7CA6101D6F6"
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7404,
											"end": 7422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12393,
											"end": 12473,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12001,
											"end": 12479,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8286,
											"end": 8308,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8286,
											"end": 8308,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8286,
											"end": 8308,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8354,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8354,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8367,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8426,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8426,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8427,
											"end": 8431,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 8418,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8406,
											"end": 8416,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "PUSH",
											"source": 4,
											"value": "6954B3B4020BD8480CD160FFFD549537B617F20A8074CE45B2DEE80CAB6EF8E2"
										},
										{
											"begin": 8434,
											"end": 8437,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1212,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1219,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8381,
											"end": 8438,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8451,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 10068,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10169,
											"end": 10181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10347,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10164,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10187,
											"end": 10209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10187,
											"end": 10209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10187,
											"end": 10209,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10164,
											"end": 10347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10164,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 10164,
											"end": 10347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10265,
											"end": 10268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10246,
											"name": "PUSH",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10247,
											"end": 10255,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10255,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10260,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10262,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10228,
											"end": 10268,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10328,
											"end": 10332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 10319,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10307,
											"end": 10317,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "PUSH",
											"source": 4,
											"value": "AFED47930189EA124B8D808450BA0E6C685037DE026CB6E56907751F1EEF52DC"
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1212,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1219,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10282,
											"end": 10339,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10164,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10164,
											"end": 10347,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13793,
											"end": 13797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13832,
											"end": 13853,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 13832,
											"end": 13853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13810,
											"end": 13829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13810,
											"end": 13853,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13806,
											"end": 13884,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13806,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 13806,
											"end": 13884,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13871,
											"end": 13876,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13806,
											"end": 13884,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 13806,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13897,
											"end": 13901,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13897,
											"end": 13901,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13710,
											"end": 13907,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14089,
											"end": 14114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14089,
											"end": 14114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14085,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 14085,
											"end": 14166,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4CD66137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14123,
											"end": 14166,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14085,
											"end": 14166,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 14085,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14186,
											"name": "PUSH",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14173,
											"end": 14200,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 342,
											"end": 393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14239,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 14229,
											"end": 14239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "PUSH",
											"source": 4,
											"value": "5647EFF4880E5135952763BDA009997B9C8669CAC9292EF87F28BADCA4F32A6"
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14212,
											"end": 14253,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14015,
											"end": 14259,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 13385,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13487,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 13466,
											"end": 13512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13466,
											"end": 13512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13466,
											"end": 13512,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13524,
											"end": 13576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13524,
											"end": 13576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13551,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13541,
											"end": 13551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13524,
											"end": 13576,
											"name": "PUSH",
											"source": 4,
											"value": "A604CBDCA7EE706AAFEA3C555E0385946D7B121453A1B0AC8B3CD58C63014F07"
										},
										{
											"begin": 13524,
											"end": 13576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 14359,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14472,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 14448,
											"end": 14472,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14448,
											"end": 14472,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14444,
											"end": 14532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14444,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 14444,
											"end": 14532,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9BE12E77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14481,
											"end": 14532,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14444,
											"end": 14532,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 14444,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14565,
											"end": 14576,
											"name": "PUSH",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 14565,
											"end": 14576,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14565,
											"end": 14576,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 14565,
											"end": 14576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14565,
											"end": 14576,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14565,
											"end": 14576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14559,
											"end": 14560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14545,
											"end": 14558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 14545,
											"end": 14561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14545,
											"end": 14576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14545,
											"end": 14576,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14541,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 14541,
											"end": 14630,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3E3D85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14541,
											"end": 14630,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 14541,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14639,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 14639,
											"end": 14651,
											"name": "PUSH",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 14654,
											"end": 14667,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14654,
											"end": 14667,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14639,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 14639,
											"end": 14667,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14639,
											"end": 14667,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 14639,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14639,
											"end": 14667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14698,
											"end": 14708,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "PUSH",
											"source": 4,
											"value": "B67C241A52658F85EC5362073FC9A0909E07AAD7E75F92291C35F910C57F8086"
										},
										{
											"begin": 14710,
											"end": 14723,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14710,
											"end": 14723,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 14679,
											"end": 14724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3133,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 3133,
											"end": 3158,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3133,
											"end": 3158,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3133,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 6872,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6872,
											"end": 6907,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6872,
											"end": 6907,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 6872,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6927,
											"name": "PUSH",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 6959,
											"end": 6978,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7003,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7008,
											"end": 7030,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6951,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 6951,
											"end": 7034,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6951,
											"end": 7034,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 6951,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7041,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 7059,
											"end": 7080,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 7116,
											"end": 7131,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 7140,
											"end": 7156,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 7165,
											"end": 7188,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7041,
											"end": 7223,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7041,
											"end": 7223,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 7041,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 7229,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 15904,
											"end": 16120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15994,
											"end": 16001,
											"name": "PUSH",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 15994,
											"end": 16012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15994,
											"end": 16012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15994,
											"end": 16012,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 16019,
											"end": 16031,
											"name": "PUSH",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 16019,
											"end": 16047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16019,
											"end": 16047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16019,
											"end": 16047,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 16061,
											"end": 16114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16061,
											"end": 16114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16061,
											"end": 16114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8919,
											"end": 8944,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 8944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 8944,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 8977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8960,
											"end": 8978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8978,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8953,
											"end": 8987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8953,
											"end": 8987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8953,
											"end": 8987,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16078,
											"end": 16088,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 16078,
											"end": 16088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16061,
											"end": 16114,
											"name": "PUSH",
											"source": 4,
											"value": "377241D1CD344FBE941F17D99A8EA4B7C81990EC2DA5F6D7CCFE19B9B1676F8F"
										},
										{
											"begin": 16061,
											"end": 16114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16061,
											"end": 16114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8745,
											"end": 8993,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1972,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1999,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1972,
											"end": 2002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2002,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1972,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7505,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7529,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7553,
											"name": "PUSH",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7574,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7595,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7613,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7620,
											"end": 7635,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7620,
											"end": 7654,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7620,
											"end": 7654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7620,
											"end": 7654,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7661,
											"end": 7683,
											"name": "PUSH",
											"source": 4,
											"value": "6A"
										},
										{
											"begin": 7661,
											"end": 7709,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7661,
											"end": 7709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7661,
											"end": 7709,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "PUSH",
											"source": 4,
											"value": "6B"
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7756,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9357,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9323,
											"end": 9357,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9323,
											"end": 9357,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9373,
											"end": 9391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9373,
											"end": 9391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9366,
											"end": 9409,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9366,
											"end": 9409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9366,
											"end": 9409,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9366,
											"end": 9409,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9418,
											"end": 9461,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9492,
											"end": 9494,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9477,
											"end": 9495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9477,
											"end": 9495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9504,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9535,
											"end": 9538,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9520,
											"end": 9539,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9306,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9564,
											"end": 9583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9564,
											"end": 9583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9557,
											"end": 9592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9557,
											"end": 9592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9557,
											"end": 9592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7791,
											"end": 7801,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "PUSH",
											"source": 4,
											"value": "D4CA73C532248C12FC93B1DD748B3954751548CAC9A9565697A3849BF7DD3B4C"
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9272,
											"end": 9275,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 9257,
											"end": 9276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7974,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7980,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5299,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 9128,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9233,
											"end": 9245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9419,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 9228,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9251,
											"end": 9273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9251,
											"end": 9273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9251,
											"end": 9273,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9228,
											"end": 9419,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9228,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 9228,
											"end": 9419,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9314,
											"name": "PUSH",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9323,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9323,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9328,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 9315,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9330,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9336,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9399,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9399,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "tag",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 9391,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9379,
											"end": 9389,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "PUSH",
											"source": 4,
											"value": "9E48685292272E85FA3BE83F07779AF7794D29A6EFB26B5F834BFB48E220D370"
										},
										{
											"begin": 9407,
											"end": 9410,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1212,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1219,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9350,
											"end": 9411,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9228,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 9228,
											"end": 9419,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 14877,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3C88345B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15013,
											"end": 15014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14968,
											"end": 15004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15004,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15004,
											"name": "PUSH",
											"source": 4,
											"value": "F220D16C"
										},
										{
											"begin": 14968,
											"end": 15004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 315,
											"end": 333,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 14968,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15025,
											"end": 15035,
											"name": "PUSH",
											"source": 4,
											"value": "7D"
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15025,
											"end": 15049,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15063,
											"end": 15104,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15063,
											"end": 15104,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 342,
											"end": 393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15080,
											"end": 15090,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 15080,
											"end": 15090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15063,
											"end": 15104,
											"name": "PUSH",
											"source": 4,
											"value": "1D38DCED3210495AD7EFF4825FD4DD5CC0E44C11C98519840691E5391C78CD15"
										},
										{
											"begin": 15063,
											"end": 15104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15063,
											"end": 15104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8642,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8932,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 8741,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8786,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8786,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 8932,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 8741,
											"end": 8932,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 8849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "PUSH",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8836,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8836,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8837,
											"end": 8841,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 8828,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8805,
											"end": 8843,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8805,
											"end": 8849,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8912,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8912,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8892,
											"end": 8902,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "PUSH",
											"source": 4,
											"value": "A36D60ECFF7C14072A077A9B05C8C98CFDFBF7B5F8E354A071764C27E5330855"
										},
										{
											"begin": 8920,
											"end": 8923,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1212,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1219,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8924,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 8741,
											"end": 8932,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "7E"
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15330,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15353,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15397,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15441,
											"name": "PUSH",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15461,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10095,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10095,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10095,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10126,
											"end": 10128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10181,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10181,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10156,
											"end": 10199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10156,
											"end": 10199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10156,
											"end": 10199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10156,
											"end": 10199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10230,
											"end": 10232,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10215,
											"end": 10233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10215,
											"end": 10233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10251,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15490,
											"end": 15500,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 15490,
											"end": 15500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "PUSH",
											"source": 4,
											"value": "11CBCE6C87791F09A7C2108A3ABEA2993AB3DE5C9ED89A0BD108618ECE832B23"
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15475,
											"end": 15577,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15116,
											"end": 15583,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 12733,
											"end": 13224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3713,
											"name": "PUSH",
											"source": 4,
											"value": "1770"
										},
										{
											"begin": 12877,
											"end": 12901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12877,
											"end": 12930,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12873,
											"end": 13019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12873,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 12873,
											"end": 13019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12948,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12948,
											"end": 13011,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B14F147"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12948,
											"end": 13011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12948,
											"end": 13011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12948,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12948,
											"end": 13011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12948,
											"end": 13011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12948,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 13019,
											"name": "tag",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 12873,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13044,
											"name": "PUSH",
											"source": 4,
											"value": "7B"
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13027,
											"end": 13068,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13075,
											"end": 13095,
											"name": "PUSH",
											"source": 4,
											"value": "7C"
										},
										{
											"begin": 13075,
											"end": 13122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13075,
											"end": 13122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13075,
											"end": 13122,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13136,
											"end": 13218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7431,
											"end": 7482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7513,
											"end": 7515,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7525,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13166,
											"end": 13176,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13166,
											"end": 13176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13218,
											"name": "PUSH",
											"source": 4,
											"value": "49D9E0CA3AA68AF12938170E0CD7267D832389603122E97B1CC70333942B8D21"
										},
										{
											"begin": 13136,
											"end": 13218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7404,
											"end": 7422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7257,
											"end": 7531,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 16303,
											"end": 16363,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16394,
											"name": "PUSH",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16370,
											"end": 16422,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16452,
											"name": "PUSH",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16429,
											"end": 16479,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10597,
											"end": 10640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16518,
											"end": 16528,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 16518,
											"end": 16528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "PUSH",
											"source": 4,
											"value": "4AAF8791C546D8D1000B9D104834F06EEA9B95C08F81C36F7EEE152623EDF4AE"
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10452,
											"end": 10454,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10437,
											"end": 10455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16493,
											"end": 16640,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16126,
											"end": 16646,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15762,
											"end": 15777,
											"name": "PUSH",
											"source": 4,
											"value": "7E"
										},
										{
											"begin": 15762,
											"end": 15777,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15724,
											"end": 15728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15724,
											"end": 15728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15762,
											"end": 15777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15762,
											"end": 15777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 15751,
											"end": 15815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15799,
											"end": 15815,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 15799,
											"end": 15815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15788,
											"end": 15815,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15788,
											"end": 15815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15788,
											"end": 15815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15799,
											"end": 15815,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15799,
											"end": 15815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15788,
											"end": 15815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15815,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 15751,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 15751,
											"end": 15854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15837,
											"end": 15854,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 15837,
											"end": 15854,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15826,
											"end": 15854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15826,
											"end": 15854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15826,
											"end": 15854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15837,
											"end": 15854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15837,
											"end": 15854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15826,
											"end": 15854,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15854,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 15751,
											"end": 15854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15892,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 15751,
											"end": 15892,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15876,
											"end": 15892,
											"name": "PUSH",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 15876,
											"end": 15892,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15865,
											"end": 15892,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15865,
											"end": 15892,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15865,
											"end": 15892,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15876,
											"end": 15892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15876,
											"end": 15892,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15865,
											"end": 15892,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15892,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 15751,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15737,
											"end": 15892,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15664,
											"end": 15898,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10648,
											"end": 11749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3465,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 10928,
											"end": 10945,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10967,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 11023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 10928,
											"end": 11023,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 11023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 10978,
											"end": 10998,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10978,
											"end": 11023,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 11023,
											"name": "tag",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 10928,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 11085,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 10928,
											"end": 11085,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 11085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "BD014D7E"
										},
										{
											"begin": 11034,
											"end": 11057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11034,
											"end": 11085,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 11085,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 10928,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10916,
											"end": 11217,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10916,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 10916,
											"end": 11217,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11109,
											"end": 11209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B873B29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11109,
											"end": 11209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11209,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11109,
											"end": 11209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10878,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10853,
											"end": 10878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10853,
											"end": 10878,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 10651,
											"end": 10970,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10916,
											"end": 11217,
											"name": "tag",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 10916,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "PUSH",
											"source": 4,
											"value": "6C"
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11268,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11275,
											"end": 11288,
											"name": "PUSH",
											"source": 4,
											"value": "6D"
										},
										{
											"begin": 11275,
											"end": 11308,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11275,
											"end": 11308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11275,
											"end": 11308,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11338,
											"name": "PUSH",
											"source": 4,
											"value": "6E"
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11366,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11373,
											"end": 11389,
											"name": "PUSH",
											"source": 4,
											"value": "6F"
										},
										{
											"begin": 11373,
											"end": 11412,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11373,
											"end": 11412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11373,
											"end": 11412,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11442,
											"name": "PUSH",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11421,
											"end": 11470,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11477,
											"end": 11496,
											"name": "PUSH",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 11477,
											"end": 11522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11477,
											"end": 11522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11477,
											"end": 11522,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10878,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10853,
											"end": 10878,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10853,
											"end": 10878,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10909,
											"end": 10911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10921,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10937,
											"end": 10955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11547,
											"end": 11557,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11547,
											"end": 11557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "PUSH",
											"source": 4,
											"value": "C4D5650477CD4354E9A07E898DF55ABE6FECEC3E415531E27A8499597B462BE2"
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10841,
											"end": 10843,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11624,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 11636,
											"end": 11743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11636,
											"end": 11743,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10520,
											"end": 10535,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10535,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10535,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10587,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10624,
											"end": 10639,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10624,
											"end": 10639,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10597,
											"end": 10640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10597,
											"end": 10640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10597,
											"end": 10640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10597,
											"end": 10640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11664,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11654,
											"end": 11664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11636,
											"end": 11743,
											"name": "PUSH",
											"source": 4,
											"value": "6EBCBF01234512B5D15E025B0AA6BD7514D7F7690B4FF5B260BEA6B9AAC29E0F"
										},
										{
											"begin": 11636,
											"end": 11743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10452,
											"end": 10454,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10437,
											"end": 10455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11636,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 10262,
											"end": 10646,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11216,
											"end": 11218,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 11196,
											"end": 11214,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11196,
											"end": 11214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11196,
											"end": 11214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11189,
											"end": 11219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11255,
											"end": 11289,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11228,
											"end": 11290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11299,
											"end": 11335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11371,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11352,
											"end": 11371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 10975,
											"end": 11377,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 2340,
											"end": 2348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 2321,
											"end": 2349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2349,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 2321,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14821,
											"end": 14837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 14853,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "tag",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "tag",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14771,
											"end": 14871,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 9586,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "499"
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "279A13C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "tag",
											"source": 4,
											"value": "499"
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9795,
											"name": "PUSH",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9815,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9827,
											"end": 9877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9827,
											"end": 9877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9847,
											"end": 9857,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9847,
											"end": 9857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9827,
											"end": 9877,
											"name": "PUSH",
											"source": 4,
											"value": "162496FC30AED361442504CDD534D5911E2997E66EB97F7455486C9476C8BFB"
										},
										{
											"begin": 9827,
											"end": 9877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9827,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5224,
											"end": 5408,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5956,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5956,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 988,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1050,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 1050,
											"end": 1076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2697,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 2510,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1089,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 1089,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1161,
											"end": 1193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "530"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "529"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "530"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "529"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "530"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "531"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "532"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "531"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "532"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "533"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "531"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "533"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 404,
											"end": 577,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 404,
											"end": 577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 472,
											"end": 492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 492,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 521,
											"end": 552,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 552,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 511,
											"end": 553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 553,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 501,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 501,
											"end": 571,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 567,
											"end": 568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 557,
											"end": 569,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 582,
											"end": 836,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 582,
											"end": 836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 711,
											"end": 713,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 690,
											"end": 697,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 682,
											"end": 714,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 679,
											"end": 731,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 679,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 679,
											"end": 731,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 727,
											"end": 728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 725,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 717,
											"end": 729,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 679,
											"end": 731,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 679,
											"end": 731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 750,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 750,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 750,
											"end": 779,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 779,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 750,
											"end": 779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 740,
											"end": 779,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 811,
											"end": 829,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 798,
											"end": 830,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 798,
											"end": 830,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 582,
											"end": 836,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1027,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 841,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 932,
											"end": 939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 928,
											"end": 951,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 924,
											"end": 956,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 921,
											"end": 973,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 921,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 921,
											"end": 973,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 969,
											"end": 970,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 959,
											"end": 971,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 921,
											"end": 973,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 921,
											"end": 973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 1011,
											"end": 1020,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 992,
											"end": 1021,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 992,
											"end": 1021,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 992,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1021,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1027,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 841,
											"end": 1027,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1224,
											"end": 1591,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 1224,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1354,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1348,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1336,
											"end": 1342,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1355,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 1318,
											"end": 1373,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1371,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1373,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 1318,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1392,
											"end": 1412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1392,
											"end": 1412,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1424,
											"end": 1454,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1471,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 1421,
											"end": 1471,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1471,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 1421,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1540,
											"end": 1554,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1568,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1591,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1591,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1591,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1596,
											"end": 2194,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1596,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1777,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 1725,
											"end": 1777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1775,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1777,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 1725,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1823,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1864,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1865,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1832,
											"end": 1882,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1832,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 1832,
											"end": 1882,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 1879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1868,
											"end": 1880,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1832,
											"end": 1882,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 1832,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1977,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 1917,
											"end": 1987,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 1987,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 1917,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1987,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2093,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2094,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2146,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 2104,
											"end": 2164,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2164,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 2104,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 2194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 2194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 2194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 2194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 2194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 2194,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2199,
											"end": 2379,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2199,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2297,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2309,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2314,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2329,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2373,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2379,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2384,
											"end": 2821,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2384,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2470,
											"end": 2476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2533,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2519,
											"end": 2528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2529,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2534,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2551,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 2499,
											"end": 2551,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2545,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2549,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2551,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 2499,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2597,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2639,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 2606,
											"end": 2656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2654,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2656,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 2606,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 2691,
											"end": 2761,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2691,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 2691,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2788,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2761,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2821,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2821,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3094,
											"name": "PUSH",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3077,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3089,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3095,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3112,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 3059,
											"end": 3112,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3110,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3112,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 3059,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 3131,
											"end": 3160,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3160,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 3131,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3160,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3179,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3211,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3179,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 3179,
											"end": 3217,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3179,
											"end": 3217,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 3179,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3169,
											"end": 3217,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 3169,
											"end": 3217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 3270,
											"end": 3272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 3236,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3274,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3293,
											"end": 3325,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3325,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3375,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3361,
											"end": 3370,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3377,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3427,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3413,
											"end": 3422,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 3409,
											"end": 3428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3429,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3386,
											"end": 3429,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3386,
											"end": 3429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 3482,
											"end": 3485,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3487,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3544,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 3506,
											"end": 3545,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3545,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 3506,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3545,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 3598,
											"end": 3601,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3587,
											"end": 3596,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3602,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 3564,
											"end": 3603,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3564,
											"end": 3603,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 3564,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 3656,
											"end": 3659,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 3622,
											"end": 3661,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3622,
											"end": 3661,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 3622,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3667,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3672,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3672,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3789,
											"end": 3798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3787,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3799,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 3769,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3840,
											"end": 3863,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3863,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3914,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3914,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3672,
											"end": 3920,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4101,
											"end": 4108,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4126,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 4090,
											"end": 4143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4141,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4143,
											"name": "tag",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 4090,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 4181,
											"end": 4190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 4162,
											"end": 4191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4191,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 4162,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4191,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 4244,
											"end": 4246,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4233,
											"end": 4242,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4229,
											"end": 4247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 4210,
											"end": 4248,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4210,
											"end": 4248,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 4210,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4248,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 4301,
											"end": 4303,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4290,
											"end": 4299,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4305,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4341,
											"end": 4350,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4406,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4392,
											"end": 4401,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4388,
											"end": 4407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4408,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4408,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4458,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4444,
											"end": 4453,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4460,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4466,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4637,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4622,
											"end": 4631,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4620,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 4638,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4602,
											"end": 4655,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4602,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 4602,
											"end": 4655,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4602,
											"end": 4655,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 4602,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4779,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 4813,
											"end": 4815,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4779,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 4779,
											"end": 4817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4779,
											"end": 4817,
											"name": "tag",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 4779,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 4870,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4859,
											"end": 4868,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 4836,
											"end": 4874,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4836,
											"end": 4874,
											"name": "tag",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 4836,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4880,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4885,
											"end": 5219,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4885,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4962,
											"end": 4968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5019,
											"end": 5028,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5017,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5006,
											"end": 5029,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5034,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 5089,
											"end": 5098,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 5070,
											"end": 5099,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5070,
											"end": 5099,
											"name": "tag",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 5070,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5099,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 5118,
											"end": 5156,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5156,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 5118,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 5175,
											"end": 5213,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5175,
											"end": 5213,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 5175,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 5219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 5219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 5219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 5219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 5219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 5219,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5531,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5547,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5613,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 5598,
											"end": 5607,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5596,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5585,
											"end": 5608,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5614,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5624,
											"end": 5625,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 5669,
											"end": 5678,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "tag",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5679,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5726,
											"end": 5728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5724,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 5730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5688,
											"end": 5730,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5688,
											"end": 5730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 5783,
											"end": 5785,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5772,
											"end": 5781,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 5749,
											"end": 5787,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5749,
											"end": 5787,
											"name": "tag",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 5749,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5739,
											"end": 5787,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5739,
											"end": 5787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5823,
											"end": 5832,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5838,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5796,
											"end": 5838,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5796,
											"end": 5838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5857,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 5891,
											"end": 5894,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5880,
											"end": 5889,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5857,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 5857,
											"end": 5896,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5857,
											"end": 5896,
											"name": "tag",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 5857,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5946,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5932,
											"end": 5941,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5948,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5954,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5959,
											"end": 6617,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5959,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6182,
											"end": 6203,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6265,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6353,
											"end": 6368,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6353,
											"end": 6368,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6353,
											"end": 6368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6353,
											"end": 6368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6329,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6408,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6417,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6488,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6488,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6471,
											"end": 6510,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6511,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6581,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6581,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6581,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6543,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6508,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6425,
											"end": 6434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "tag",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 6396,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6611,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 5959,
											"end": 6617,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5959,
											"end": 6617,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6622,
											"end": 6891,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 6622,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6734,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6720,
											"end": 6729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 6718,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6730,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6735,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6700,
											"end": 6752,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6700,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 6700,
											"end": 6752,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6748,
											"end": 6749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6738,
											"end": 6750,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6700,
											"end": 6752,
											"name": "tag",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 6700,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6797,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6830,
											"end": 6835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6842,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6843,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 6806,
											"end": 6861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 7252,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 6896,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7080,
											"end": 7101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7080,
											"end": 7101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7080,
											"end": 7101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7110,
											"end": 7140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7210,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7171,
											"end": 7173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7245,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 7252,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7536,
											"end": 7663,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7536,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7607,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 7592,
											"end": 7595,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7618,
											"end": 7633,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7656,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7657,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7900,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7668,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7728,
											"end": 7745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7725,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 7725,
											"end": 7865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7787,
											"end": 7797,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 7782,
											"end": 7785,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 7776,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7819,
											"end": 7820,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7812,
											"end": 7827,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7854,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7855,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7725,
											"end": 7865,
											"name": "tag",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 7725,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7892,
											"end": 7893,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7881,
											"end": 7894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 7894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7900,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7905,
											"end": 8541,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7905,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8138,
											"end": 8159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8194,
											"end": 8216,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8194,
											"end": 8216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8194,
											"end": 8216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8273,
											"end": 8279,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8247,
											"end": 8249,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8232,
											"end": 8250,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "tag",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8315,
											"end": 8328,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 8405,
											"end": 8411,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "tag",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 8386,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8434,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8505,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8467,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8336,
											"end": 8345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "tag",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 8307,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8532,
											"end": 8535,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 8541,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7905,
											"end": 8541,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9603,
											"end": 9787,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9603,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9673,
											"end": 9679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9714,
											"end": 9723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 9724,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9697,
											"end": 9729,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9742,
											"end": 9743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9739,
											"end": 9740,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9732,
											"end": 9744,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "tag",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 9694,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9787,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11382,
											"end": 11792,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 11382,
											"end": 11792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11584,
											"end": 11586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11566,
											"end": 11587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11587,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11623,
											"end": 11625,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11596,
											"end": 11626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11662,
											"end": 11696,
											"name": "PUSH",
											"source": 7,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11635,
											"end": 11697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11728,
											"end": 11730,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11713,
											"end": 11731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11713,
											"end": 11731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11706,
											"end": 11750,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11782,
											"end": 11785,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11767,
											"end": 11786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11767,
											"end": 11786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11382,
											"end": 11792,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11797,
											"end": 12204,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 11797,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11999,
											"end": 12001,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11981,
											"end": 12002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12038,
											"end": 12040,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 12018,
											"end": 12036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12011,
											"end": 12041,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12077,
											"end": 12111,
											"name": "PUSH",
											"source": 7,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 12072,
											"end": 12074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12057,
											"end": 12075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12057,
											"end": 12075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12112,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12143,
											"end": 12145,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12121,
											"end": 12162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12194,
											"end": 12197,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 12179,
											"end": 12198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11797,
											"end": 12204,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"alpacaBeneficiary()": "a361f404",
							"alpacaBeneficiaryBps()": "f52c6764",
							"alpacaBountyBps()": "956c9da0",
							"alpacaReinvestFeeTreasury()": "595d4ece",
							"alpacaToken()": "bed65bae",
							"assetAddTwoSideStrategy()": "0573f19c",
							"controller()": "f77c4791",
							"debtRatioTolerance()": "64facdd5",
							"depositExecutor()": "58d4c4ea",
							"depositFeeBps()": "ab879827",
							"depositFeeTreasury()": "eea99787",
							"fairLaunchAddr()": "5c23aed6",
							"feeExemptedCallers(address)": "3924f233",
							"getReinvestPath()": "f679eda1",
							"getSwapRouter()": "725c9c49",
							"getWNativeRelayer()": "d1783fa8",
							"getWrappedNativeAddr()": "ef3bac5e",
							"initialize(address,address,address,uint256,uint256,uint256,address,address,address,address)": "64c65705",
							"isExecutor(address)": "debfda30",
							"isVaultSizeAcceptable(uint256)": "35824061",
							"leverageLevel()": "e592c5fa",
							"managementFeePerSec()": "b192362a",
							"managementFeeTreasury()": "45b61b00",
							"maxVaultPositionValue()": "56fc97a0",
							"owner()": "8da5cb5b",
							"partialCloseMinimizeStrategy()": "49b2045c",
							"positionValueTolerance()": "f9bfd907",
							"rebalanceExecutor()": "d77ab72d",
							"rebalanceFactor()": "62969467",
							"reinvestExecutor()": "1c425a45",
							"reinvestPath(uint256)": "8ed5bb92",
							"renounceOwnership()": "715018a6",
							"setAlpacaBeneficiaryConfig(address,uint256)": "b9059d73",
							"setAlpacaBountyConfig(address,uint256)": "1218cf18",
							"setController(address)": "92eefe9b",
							"setExecutor(address,address,address,address)": "b8e09260",
							"setFeeExemptedCallers(address[],bool)": "2ce2a218",
							"setFees(address,uint256,address,uint256,address,uint256)": "e6abb8bd",
							"setLeverageLevel(uint8)": "fe865db9",
							"setParams(address,address,address,uint256,uint256,uint256)": "8c8a4b58",
							"setReinvestPath(address[])": "6155501b",
							"setStrategies(address,address,address)": "d4f3949a",
							"setSwapConfig(uint256,uint256)": "6a5bf606",
							"setSwapRouter(address)": "41273657",
							"setValueLimit(uint256)": "60bdf9e5",
							"setWhitelistedCallers(address[],bool)": "1bb8c61d",
							"setWhitelistedRebalancer(address[],bool)": "9e1b8fa2",
							"setwhitelistedReinvestors(address[],bool)": "91ba87d8",
							"stableAddTwoSideStrategy()": "79d37981",
							"swapFee()": "54cf2aeb",
							"swapFeeDenom()": "429e0971",
							"transferOwnership(address)": "f2fde38b",
							"whitelistedCallers(address)": "ffc97ce9",
							"whitelistedRebalancers(address)": "4f40e368",
							"whitelistedReinvestors(address)": "12440ccb",
							"withdrawExecutor()": "235ec73d",
							"withdrawalFeeBps()": "04336bb3",
							"withdrawalFeeTreasury()": "698d92cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DeltaNeutralVaultConfig_InvalidReinvestPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaNeutralVaultConfig_InvalidReinvestPathLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaNeutralVaultConfig_InvalidSwapRouter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaNeutralVaultConfig_LeverageLevelTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"DeltaNeutralVaultConfig_TooMuchBounty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositFeeBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawalFeeBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mangementFeeBps\",\"type\":\"uint256\"}],\"name\":\"DeltaNeutralVaultConfig_TooMuchFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_alpacaBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_alpacaBeneficiaryBps\",\"type\":\"uint256\"}],\"name\":\"LogSetAlpacaBeneficiaryConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_alpacaReinvestTreasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_alpacaBountyBps\",\"type\":\"uint256\"}],\"name\":\"LogSetAlpacaBountyConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"LogSetController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_depositExecutor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_withdrawExecutor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rebalanceExecutor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_reinvestExecutor\",\"type\":\"address\"}],\"name\":\"LogSetExecutor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_ok\",\"type\":\"bool\"}],\"name\":\"LogSetFeeExemptedCallers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_depositFeeTreasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_withdrawFeeTreasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_managementFeeTreasury\",\"type\":\"address\"}],\"name\":\"LogSetFeeTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositFeeBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawalFeeBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_managementFeePerSec\",\"type\":\"uint256\"}],\"name\":\"LogSetFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_newLeverageLevel\",\"type\":\"uint8\"}],\"name\":\"LogSetLeverageLevel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_getWrappedNativeAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_getWNativeRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_fairLaunchAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rebalanceFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_positionValueTolerance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_debtRatioTolerance\",\"type\":\"uint256\"}],\"name\":\"LogSetParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_reinvestPath\",\"type\":\"address[]\"}],\"name\":\"LogSetReinvestPath\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"partialCloseMinimizeStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stableAddTwoSideStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetAddTwoSideStrategy\",\"type\":\"address\"}],\"name\":\"LogSetStrategies\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeeDenom\",\"type\":\"uint256\"}],\"name\":\"LogSetSwapConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"LogSetSwapRoute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"name\":\"LogSetSwapRouter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxVaultPositionValue\",\"type\":\"uint256\"}],\"name\":\"LogSetValueLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_ok\",\"type\":\"bool\"}],\"name\":\"LogSetWhitelistedCallers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_ok\",\"type\":\"bool\"}],\"name\":\"LogSetWhitelistedRebalancers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_ok\",\"type\":\"bool\"}],\"name\":\"LogSetWhitelistedReinvestors\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"alpacaBeneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alpacaBeneficiaryBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alpacaBountyBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alpacaReinvestFeeTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alpacaToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetAddTwoSideStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtRatioTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFeeTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fairLaunchAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeExemptedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReinvestPath\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNativeRelayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedNativeAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_getWrappedNativeAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_getWNativeRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fairLaunchAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rebalanceFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_positionValueTolerance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_debtRatioTolerance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_depositFeeTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_managementFeeTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawFeeTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_alpacaToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"isExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalPositionValue\",\"type\":\"uint256\"}],\"name\":\"isVaultSizeAcceptable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leverageLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managementFeePerSec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managementFeeTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxVaultPositionValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partialCloseMinimizeStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionValueTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinvestExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reinvestPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAlpacaBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newAlpacaBeneficiaryBps\",\"type\":\"uint256\"}],\"name\":\"setAlpacaBeneficiaryConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAlpacaReinvestFeeTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newAlpacaBountyBps\",\"type\":\"uint256\"}],\"name\":\"setAlpacaBountyConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositExecutor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawExecutor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalanceExecutor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reinvestExecutor\",\"type\":\"address\"}],\"name\":\"setExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_ok\",\"type\":\"bool\"}],\"name\":\"setFeeExemptedCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDepositFeeTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newDepositFeeBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_newWithdrawalFeeTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newWithdrawalFeeBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_newManagementFeeTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newManagementFeePerSec\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_newLeverageLevel\",\"type\":\"uint8\"}],\"name\":\"setLeverageLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_getWrappedNativeAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_getWNativeRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fairLaunchAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rebalanceFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_positionValueTolerance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_debtRatioTolerance\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_reinvestPath\",\"type\":\"address[]\"}],\"name\":\"setReinvestPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_partialCloseMinimizeStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stableAddTwoSideStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_assetAddTwoSideStrategy\",\"type\":\"address\"}],\"name\":\"setStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeeDenom\",\"type\":\"uint256\"}],\"name\":\"setSwapConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"name\":\"setSwapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxVaultPositionValue\",\"type\":\"uint256\"}],\"name\":\"setValueLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_ok\",\"type\":\"bool\"}],\"name\":\"setWhitelistedCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_ok\",\"type\":\"bool\"}],\"name\":\"setWhitelistedRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_ok\",\"type\":\"bool\"}],\"name\":\"setwhitelistedReinvestors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableAddTwoSideStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeDenom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedRebalancers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedReinvestors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFeeTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getReinvestPath()\":{\"details\":\"Get the reinvest path.\"},\"isExecutor(address)\":{\"params\":{\"_caller\":\"caller.\"}},\"isVaultSizeAcceptable(uint256)\":{\"params\":{\"_totalPositionValue\":\"new vault position value.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAlpacaBeneficiaryConfig(address,uint256)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_newAlpacaBeneficiary\":\"The new address to received ALPACA reinvest fee\",\"_newAlpacaBeneficiaryBps\":\"Fee from reinvesting ALPACA to positions.\"}},\"setAlpacaBountyConfig(address,uint256)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_newAlpacaBountyBps\":\"Fee from reinvesting ALPACA to positions.\",\"_newAlpacaReinvestFeeTreasury\":\"The new address to received ALPACA reinvest fee\"}},\"setController(address)\":{\"details\":\"Set a new controller\"},\"setFeeExemptedCallers(address[],bool)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_callers\":\"addresses to be exempted.\",\"_ok\":\"The new ok flag for callers.\"}},\"setFees(address,uint256,address,uint256,address,uint256)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_newDepositFeeBps\":\"Fee when user deposit to delta neutral vault.\",\"_newManagementFeePerSec\":\"Mangement Fee per second.\",\"_newWithdrawalFeeBps\":\"Fee when user deposit to delta neutral vault.\"}},\"setLeverageLevel(uint8)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_newLeverageLevel\":\"The new leverage level to be set. Must be >= 3\"}},\"setReinvestPath(address[])\":{\"details\":\"Set the reinvest path.\",\"params\":{\"_reinvestPath\":\"- The reinvest path to update.\"}},\"setSwapRouter(address)\":{\"details\":\"Set the reinvest configuration.\",\"params\":{\"_swapRouter\":\"- The router address to update.\"}},\"setValueLimit(uint256)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_maxVaultPositionValue\":\"Maximum vault size position value.\"}},\"setWhitelistedCallers(address[],bool)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_callers\":\"addresses to be whitelisted.\",\"_ok\":\"The new ok flag for callers.\"}},\"setWhitelistedRebalancer(address[],bool)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_callers\":\"addresses to be whitelisted.\",\"_ok\":\"The new ok flag for callers.\"}},\"setwhitelistedReinvestors(address[],bool)\":{\"details\":\"Must only be called by owner.\",\"params\":{\"_callers\":\"addresses to be whitelisted.\",\"_ok\":\"The new ok flag for callers.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"alpacaBeneficiary\":{\"details\":\"Return ALPACA beneficiary address.\"},\"alpacaBeneficiaryBps\":{\"details\":\"Return ALPACA beneficiary bps.\"},\"alpacaBountyBps\":{\"details\":\"Return alpaca bounty bps.\"},\"alpacaReinvestFeeTreasury\":{\"details\":\"Return ALPACA reinvest fee treasury.\"},\"assetAddTwoSideStrategy\":{\"details\":\"Return Asset add two side strategy address\"},\"controller\":{\"details\":\"Return controller address\"},\"depositFeeBps\":{\"details\":\"Get deposit fee.\"},\"depositFeeTreasury\":{\"details\":\"Return the deposit fee treasury.\"},\"fairLaunchAddr\":{\"details\":\"Get fairlaunch address.\"},\"feeExemptedCallers\":{\"details\":\"Return if the caller is exempted from fee.\"},\"getSwapRouter\":{\"details\":\"Return swap router\"},\"leverageLevel\":{\"details\":\"Get leverage level.\"},\"managementFeePerSec\":{\"details\":\"Return management fee per sec.\"},\"managementFeeTreasury\":{\"details\":\"Return management fee treasury\"},\"rebalanceExecutor\":{\"details\":\"Return rebalance executor\"},\"reinvestExecutor\":{\"details\":\"Return reinvest executor\"},\"stableAddTwoSideStrategy\":{\"details\":\"Return Stable add two side strategy address\"},\"swapFeeDenom\":{\"details\":\"Return swap fee denom\"},\"whitelistedCallers\":{\"details\":\"Return if the caller is whitelisted.\"},\"whitelistedRebalancers\":{\"details\":\"Return if the caller is whitelisted.\"},\"whitelistedReinvestors\":{\"details\":\"Return if the caller is whitelisted.\"},\"withdrawExecutor\":{\"details\":\"Return withdraw executor\"},\"withdrawalFeeBps\":{\"details\":\"Get withdrawal fee.\"},\"withdrawalFeeTreasury\":{\"details\":\"Return the withdrawl fee treasury.\"}},\"title\":\"DeltaNeutralVaultConfig02 - A place where you can find all delta neutral vault config\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositExecutor()\":{\"notice\":\"Executor\"},\"isExecutor(address)\":{\"notice\":\"Return if caller is executor.\"},\"isVaultSizeAcceptable(uint256)\":{\"notice\":\"Return if vault can accept new position value.\"},\"partialCloseMinimizeStrategy()\":{\"notice\":\"Strategies\"},\"setAlpacaBeneficiaryConfig(address,uint256)\":{\"notice\":\"Set alpacaBeneficiaryBps.\"},\"setAlpacaBountyConfig(address,uint256)\":{\"notice\":\"Set alpacaBountyBps.\"},\"setFeeExemptedCallers(address[],bool)\":{\"notice\":\"Set exempted fee callers.\"},\"setFees(address,uint256,address,uint256,address,uint256)\":{\"notice\":\"Set fees.\"},\"setLeverageLevel(uint8)\":{\"notice\":\"Set leverage level.\"},\"setValueLimit(uint256)\":{\"notice\":\"Set position value limit.\"},\"setWhitelistedCallers(address[],bool)\":{\"notice\":\"Set whitelisted callers.\"},\"setWhitelistedRebalancer(address[],bool)\":{\"notice\":\"Set whitelisted rebalancers.\"},\"setwhitelistedReinvestors(address[],bool)\":{\"notice\":\"Set whitelisted reinvestors.\"},\"swapFee()\":{\"notice\":\"swap config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeltaNeutralVaultConfig02.sol\":\"DeltaNeutralVaultConfig02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"contracts/DeltaNeutralVaultConfig02.sol\":{\"keccak256\":\"0xdd145f308de7ded23e87dc3546e5f7749e06aa69f1691d45ab7ebb12f599697a\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://ef37c8a76e0c1d366a6b9c1f4eccf640900c04e2f933e9e13d3d901bd6abd7f4\",\"dweb:/ipfs/QmQxTAq3j3Cga1zpP8oLEMvezwFLaiMRXLffX9DcSJcZxG\"]},\"contracts/interfaces/IController.sol\":{\"keccak256\":\"0xdcd8f39506df604368de782ed7ecad1fcadd8523f76c2e8cca58b1dd21eabd5f\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://5fe146acbff19195b5bb5233de9474e9ba54fc67072c96b860f806c38068d53d\",\"dweb:/ipfs/QmcRdVgR3xPHzxntZw7wFTYoJS2Gtv8jHM3t4j5AYvMXkh\"]},\"contracts/interfaces/IDeltaNeutralVaultConfig02.sol\":{\"keccak256\":\"0x14fc39a7a0d75c584d2a6f50ae5a084dd84d30b988b5c288c6b99a543a444638\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://c58bd273ec39a7e7f809f4ecdce1e67e70093c01819d1c7453539cc6b60bf86f\",\"dweb:/ipfs/QmQ47QM9tMnhmFXsVLuZvvd1bb7MRYKgHjRyKxwCQK4s8m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 549,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 756,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "getWrappedNativeAddr",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 759,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "getWNativeRelayer",
								"offset": 0,
								"slot": "102",
								"type": "t_address"
							},
							{
								"astId": 761,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "fairLaunchAddr",
								"offset": 0,
								"slot": "103",
								"type": "t_address"
							},
							{
								"astId": 763,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "maxVaultPositionValue",
								"offset": 0,
								"slot": "104",
								"type": "t_uint256"
							},
							{
								"astId": 766,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "rebalanceFactor",
								"offset": 0,
								"slot": "105",
								"type": "t_uint256"
							},
							{
								"astId": 769,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "positionValueTolerance",
								"offset": 0,
								"slot": "106",
								"type": "t_uint256"
							},
							{
								"astId": 772,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "debtRatioTolerance",
								"offset": 0,
								"slot": "107",
								"type": "t_uint256"
							},
							{
								"astId": 774,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "depositFeeTreasury",
								"offset": 0,
								"slot": "108",
								"type": "t_address"
							},
							{
								"astId": 777,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "depositFeeBps",
								"offset": 0,
								"slot": "109",
								"type": "t_uint256"
							},
							{
								"astId": 779,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "withdrawalFeeTreasury",
								"offset": 0,
								"slot": "110",
								"type": "t_address"
							},
							{
								"astId": 782,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "withdrawalFeeBps",
								"offset": 0,
								"slot": "111",
								"type": "t_uint256"
							},
							{
								"astId": 784,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "managementFeeTreasury",
								"offset": 0,
								"slot": "112",
								"type": "t_address"
							},
							{
								"astId": 787,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "managementFeePerSec",
								"offset": 0,
								"slot": "113",
								"type": "t_uint256"
							},
							{
								"astId": 790,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "leverageLevel",
								"offset": 0,
								"slot": "114",
								"type": "t_uint8"
							},
							{
								"astId": 792,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "alpacaToken",
								"offset": 1,
								"slot": "114",
								"type": "t_address"
							},
							{
								"astId": 794,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "getSwapRouter",
								"offset": 0,
								"slot": "115",
								"type": "t_address"
							},
							{
								"astId": 797,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "reinvestPath",
								"offset": 0,
								"slot": "116",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 801,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "whitelistedCallers",
								"offset": 0,
								"slot": "117",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 805,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "whitelistedRebalancers",
								"offset": 0,
								"slot": "118",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 809,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "feeExemptedCallers",
								"offset": 0,
								"slot": "119",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 813,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "whitelistedReinvestors",
								"offset": 0,
								"slot": "120",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 815,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "alpacaReinvestFeeTreasury",
								"offset": 0,
								"slot": "121",
								"type": "t_address"
							},
							{
								"astId": 817,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "alpacaBountyBps",
								"offset": 0,
								"slot": "122",
								"type": "t_uint256"
							},
							{
								"astId": 819,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "alpacaBeneficiary",
								"offset": 0,
								"slot": "123",
								"type": "t_address"
							},
							{
								"astId": 821,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "alpacaBeneficiaryBps",
								"offset": 0,
								"slot": "124",
								"type": "t_uint256"
							},
							{
								"astId": 824,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "controller",
								"offset": 0,
								"slot": "125",
								"type": "t_address"
							},
							{
								"astId": 827,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "depositExecutor",
								"offset": 0,
								"slot": "126",
								"type": "t_address"
							},
							{
								"astId": 829,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "withdrawExecutor",
								"offset": 0,
								"slot": "127",
								"type": "t_address"
							},
							{
								"astId": 831,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "rebalanceExecutor",
								"offset": 0,
								"slot": "128",
								"type": "t_address"
							},
							{
								"astId": 833,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "reinvestExecutor",
								"offset": 0,
								"slot": "129",
								"type": "t_address"
							},
							{
								"astId": 836,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "swapFee",
								"offset": 0,
								"slot": "130",
								"type": "t_uint256"
							},
							{
								"astId": 838,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "swapFeeDenom",
								"offset": 0,
								"slot": "131",
								"type": "t_uint256"
							},
							{
								"astId": 841,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "partialCloseMinimizeStrategy",
								"offset": 0,
								"slot": "132",
								"type": "t_address"
							},
							{
								"astId": 843,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "stableAddTwoSideStrategy",
								"offset": 0,
								"slot": "133",
								"type": "t_address"
							},
							{
								"astId": 845,
								"contract": "contracts/DeltaNeutralVaultConfig02.sol:DeltaNeutralVaultConfig02",
								"label": "assetAddTwoSideStrategy",
								"offset": 0,
								"slot": "134",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"depositExecutor()": {
								"notice": "Executor"
							},
							"isExecutor(address)": {
								"notice": "Return if caller is executor."
							},
							"isVaultSizeAcceptable(uint256)": {
								"notice": "Return if vault can accept new position value."
							},
							"partialCloseMinimizeStrategy()": {
								"notice": "Strategies"
							},
							"setAlpacaBeneficiaryConfig(address,uint256)": {
								"notice": "Set alpacaBeneficiaryBps."
							},
							"setAlpacaBountyConfig(address,uint256)": {
								"notice": "Set alpacaBountyBps."
							},
							"setFeeExemptedCallers(address[],bool)": {
								"notice": "Set exempted fee callers."
							},
							"setFees(address,uint256,address,uint256,address,uint256)": {
								"notice": "Set fees."
							},
							"setLeverageLevel(uint8)": {
								"notice": "Set leverage level."
							},
							"setValueLimit(uint256)": {
								"notice": "Set position value limit."
							},
							"setWhitelistedCallers(address[],bool)": {
								"notice": "Set whitelisted callers."
							},
							"setWhitelistedRebalancer(address[],bool)": {
								"notice": "Set whitelisted rebalancers."
							},
							"setwhitelistedReinvestors(address[],bool)": {
								"notice": "Set whitelisted reinvestors."
							},
							"swapFee()": {
								"notice": "swap config"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IController.sol": {
				"IController": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "availableCredit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_shareAmount",
									"type": "uint256"
								}
							],
							"name": "onDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_shareAmount",
									"type": "uint256"
								}
							],
							"name": "onWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "totalCredit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "usedCredit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"availableCredit(address)": "5886216f",
							"onDeposit(address,uint256)": "2bf9518c",
							"onWithdraw(address,uint256)": "ccad973d",
							"totalCredit(address)": "f220d16c",
							"usedCredit(address)": "7bf962de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"availableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shareAmount\",\"type\":\"uint256\"}],\"name\":\"onDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shareAmount\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"totalCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"usedCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IController.sol\":\"IController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IController.sol\":{\"keccak256\":\"0xdcd8f39506df604368de782ed7ecad1fcadd8523f76c2e8cca58b1dd21eabd5f\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://5fe146acbff19195b5bb5233de9474e9ba54fc67072c96b860f806c38068d53d\",\"dweb:/ipfs/QmcRdVgR3xPHzxntZw7wFTYoJS2Gtv8jHM3t4j5AYvMXkh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IDeltaNeutralVaultConfig02.sol": {
				"IDeltaNeutralVaultConfig02": {
					"abi": [
						{
							"inputs": [],
							"name": "alpacaBeneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alpacaBeneficiaryBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alpacaBountyBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alpacaReinvestFeeTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assetAddTwoSideStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "controller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "debtRatioTolerance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositExecutor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFeeBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFeeTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fairLaunchAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								}
							],
							"name": "feeExemptedCallers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReinvestPath",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSwapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWNativeRelayer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWrappedNativeAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								}
							],
							"name": "isExecutor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalPositionValue",
									"type": "uint256"
								}
							],
							"name": "isVaultSizeAcceptable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "leverageLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "managementFeePerSec",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "managementFeeTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "partialCloseMinimizeStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positionValueTolerance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebalanceExecutor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebalanceFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reinvestExecutor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_controller",
									"type": "address"
								}
							],
							"name": "setController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableAddTwoSideStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapFeeDenom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								}
							],
							"name": "whitelistedCallers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								}
							],
							"name": "whitelistedRebalancers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								}
							],
							"name": "whitelistedReinvestors",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawExecutor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFeeBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFeeTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"alpacaBeneficiary()": {
								"details": "Return ALPACA beneficiary address."
							},
							"alpacaBeneficiaryBps()": {
								"details": "Return ALPACA beneficiary bps."
							},
							"alpacaBountyBps()": {
								"details": "Return alpaca bounty bps."
							},
							"alpacaReinvestFeeTreasury()": {
								"details": "Return ALPACA reinvest fee treasury."
							},
							"assetAddTwoSideStrategy()": {
								"details": "Return Asset add two side strategy address"
							},
							"controller()": {
								"details": "Return controller address"
							},
							"depositExecutor()": {
								"details": "Return deposit executor"
							},
							"depositFeeBps()": {
								"details": "Get deposit fee."
							},
							"depositFeeTreasury()": {
								"details": "Return the deposit fee treasury."
							},
							"fairLaunchAddr()": {
								"details": "Get fairlaunch address."
							},
							"feeExemptedCallers(address)": {
								"details": "Return if the caller is exempted from fee."
							},
							"getReinvestPath()": {
								"details": "Return reinvest path"
							},
							"getSwapRouter()": {
								"details": "Return swap router"
							},
							"isExecutor(address)": {
								"details": "Return if caller is executor."
							},
							"isVaultSizeAcceptable(uint256)": {
								"details": "Return if delta neutral vault position value acceptable."
							},
							"leverageLevel()": {
								"details": "Get leverage level."
							},
							"managementFeePerSec()": {
								"details": "Return management fee per sec."
							},
							"managementFeeTreasury()": {
								"details": "Return management fee treasury"
							},
							"partialCloseMinimizeStrategy()": {
								"details": "Return Partial close minimize strategy address"
							},
							"rebalanceExecutor()": {
								"details": "Return rebalance executor"
							},
							"reinvestExecutor()": {
								"details": "Return reinvest executor"
							},
							"setController(address)": {
								"details": "Set a new controller"
							},
							"stableAddTwoSideStrategy()": {
								"details": "Return Stable add two side strategy address"
							},
							"swapFee()": {
								"details": "Return swap fee"
							},
							"swapFeeDenom()": {
								"details": "Return swap fee denom"
							},
							"whitelistedCallers(address)": {
								"details": "Return if the caller is whitelisted."
							},
							"whitelistedRebalancers(address)": {
								"details": "Return if the caller is whitelisted."
							},
							"whitelistedReinvestors(address)": {
								"details": "Return if the caller is whitelisted."
							},
							"withdrawExecutor()": {
								"details": "Return withdraw executor"
							},
							"withdrawalFeeBps()": {
								"details": "Get withdrawal fee."
							},
							"withdrawalFeeTreasury()": {
								"details": "Return the withdrawl fee treasury."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"alpacaBeneficiary()": "a361f404",
							"alpacaBeneficiaryBps()": "f52c6764",
							"alpacaBountyBps()": "956c9da0",
							"alpacaReinvestFeeTreasury()": "595d4ece",
							"assetAddTwoSideStrategy()": "0573f19c",
							"controller()": "f77c4791",
							"debtRatioTolerance()": "64facdd5",
							"depositExecutor()": "58d4c4ea",
							"depositFeeBps()": "ab879827",
							"depositFeeTreasury()": "eea99787",
							"fairLaunchAddr()": "5c23aed6",
							"feeExemptedCallers(address)": "3924f233",
							"getReinvestPath()": "f679eda1",
							"getSwapRouter()": "725c9c49",
							"getWNativeRelayer()": "d1783fa8",
							"getWrappedNativeAddr()": "ef3bac5e",
							"isExecutor(address)": "debfda30",
							"isVaultSizeAcceptable(uint256)": "35824061",
							"leverageLevel()": "e592c5fa",
							"managementFeePerSec()": "b192362a",
							"managementFeeTreasury()": "45b61b00",
							"partialCloseMinimizeStrategy()": "49b2045c",
							"positionValueTolerance()": "f9bfd907",
							"rebalanceExecutor()": "d77ab72d",
							"rebalanceFactor()": "62969467",
							"reinvestExecutor()": "1c425a45",
							"setController(address)": "92eefe9b",
							"stableAddTwoSideStrategy()": "79d37981",
							"swapFee()": "54cf2aeb",
							"swapFeeDenom()": "429e0971",
							"whitelistedCallers(address)": "ffc97ce9",
							"whitelistedRebalancers(address)": "4f40e368",
							"whitelistedReinvestors(address)": "12440ccb",
							"withdrawExecutor()": "235ec73d",
							"withdrawalFeeBps()": "04336bb3",
							"withdrawalFeeTreasury()": "698d92cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"alpacaBeneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alpacaBeneficiaryBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alpacaBountyBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alpacaReinvestFeeTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetAddTwoSideStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtRatioTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFeeTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fairLaunchAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"feeExemptedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReinvestPath\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNativeRelayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedNativeAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"isExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalPositionValue\",\"type\":\"uint256\"}],\"name\":\"isVaultSizeAcceptable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leverageLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managementFeePerSec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managementFeeTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partialCloseMinimizeStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionValueTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinvestExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableAddTwoSideStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeDenom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"whitelistedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"whitelistedRebalancers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"whitelistedReinvestors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFeeTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"alpacaBeneficiary()\":{\"details\":\"Return ALPACA beneficiary address.\"},\"alpacaBeneficiaryBps()\":{\"details\":\"Return ALPACA beneficiary bps.\"},\"alpacaBountyBps()\":{\"details\":\"Return alpaca bounty bps.\"},\"alpacaReinvestFeeTreasury()\":{\"details\":\"Return ALPACA reinvest fee treasury.\"},\"assetAddTwoSideStrategy()\":{\"details\":\"Return Asset add two side strategy address\"},\"controller()\":{\"details\":\"Return controller address\"},\"depositExecutor()\":{\"details\":\"Return deposit executor\"},\"depositFeeBps()\":{\"details\":\"Get deposit fee.\"},\"depositFeeTreasury()\":{\"details\":\"Return the deposit fee treasury.\"},\"fairLaunchAddr()\":{\"details\":\"Get fairlaunch address.\"},\"feeExemptedCallers(address)\":{\"details\":\"Return if the caller is exempted from fee.\"},\"getReinvestPath()\":{\"details\":\"Return reinvest path\"},\"getSwapRouter()\":{\"details\":\"Return swap router\"},\"isExecutor(address)\":{\"details\":\"Return if caller is executor.\"},\"isVaultSizeAcceptable(uint256)\":{\"details\":\"Return if delta neutral vault position value acceptable.\"},\"leverageLevel()\":{\"details\":\"Get leverage level.\"},\"managementFeePerSec()\":{\"details\":\"Return management fee per sec.\"},\"managementFeeTreasury()\":{\"details\":\"Return management fee treasury\"},\"partialCloseMinimizeStrategy()\":{\"details\":\"Return Partial close minimize strategy address\"},\"rebalanceExecutor()\":{\"details\":\"Return rebalance executor\"},\"reinvestExecutor()\":{\"details\":\"Return reinvest executor\"},\"setController(address)\":{\"details\":\"Set a new controller\"},\"stableAddTwoSideStrategy()\":{\"details\":\"Return Stable add two side strategy address\"},\"swapFee()\":{\"details\":\"Return swap fee\"},\"swapFeeDenom()\":{\"details\":\"Return swap fee denom\"},\"whitelistedCallers(address)\":{\"details\":\"Return if the caller is whitelisted.\"},\"whitelistedRebalancers(address)\":{\"details\":\"Return if the caller is whitelisted.\"},\"whitelistedReinvestors(address)\":{\"details\":\"Return if the caller is whitelisted.\"},\"withdrawExecutor()\":{\"details\":\"Return withdraw executor\"},\"withdrawalFeeBps()\":{\"details\":\"Get withdrawal fee.\"},\"withdrawalFeeTreasury()\":{\"details\":\"Return the withdrawl fee treasury.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDeltaNeutralVaultConfig02.sol\":\"IDeltaNeutralVaultConfig02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDeltaNeutralVaultConfig02.sol\":{\"keccak256\":\"0x14fc39a7a0d75c584d2a6f50ae5a084dd84d30b988b5c288c6b99a543a444638\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://c58bd273ec39a7e7f809f4ecdce1e67e70093c01819d1c7453539cc6b60bf86f\",\"dweb:/ipfs/QmQ47QM9tMnhmFXsVLuZvvd1bb7MRYKgHjRyKxwCQK4s8m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							508
						],
						"ContextUpgradeable": [
							550
						],
						"Initializable": [
							265
						],
						"OwnableUpgradeable": [
							123
						]
					},
					"id": 124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 124,
							"sourceUnit": 551,
							"src": "112:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 124,
							"sourceUnit": 266,
							"src": "154:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "733:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 550,
										"src": "748:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "748:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 123,
							"linearizedBaseContracts": [
								123,
								550,
								265
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "711:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "789:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "773:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "808:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "845:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "829:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "876:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "860:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:57:0"
									},
									"src": "802:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1040:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1050:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1050:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "892:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "1023:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "997:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:0"
									},
									"scope": 123,
									"src": "988:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1151:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "1180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1180:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1161:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1161:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "1134:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1134:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1098:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:0"
									},
									"scope": 123,
									"src": "1089:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1331:30:0",
										"statements": [
											{
												"expression": {
													"id": 43,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 42,
												"id": 44,
												"nodeType": "Return",
												"src": "1341:13:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1206:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1285:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1321:9:0"
									},
									"scope": 123,
									"src": "1276:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1470:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "1488:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1488:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 52,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "1499:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1499:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1488:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1513:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "1480:68:0"
											},
											{
												"id": 58,
												"nodeType": "PlaceholderStatement",
												"src": "1558:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1367:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 60,
									"name": "onlyOwner",
									"nameLocation": "1458:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:0"
									},
									"src": "1449:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1962:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1999:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1991:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 67,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1991:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1991:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 66,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1972:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1972:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1972:30:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1572:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 64,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 63,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "1952:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1952:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1917:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1934:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1962:0:0"
									},
									"scope": 123,
									"src": "1908:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "2228:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 83,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2246:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2266:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2258:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 84,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2258:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2246:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2270:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2238:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "2238:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 93,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "2340:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 92,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "2321:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2321:28:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2015:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 80,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 79,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "2218:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2218:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2167:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2193:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "2185:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2184:18:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2228:0:0"
									},
									"scope": 123,
									"src": "2158:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2573:124:0",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2591:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 116,
														"src": "2583:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 103,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2583:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"id": 105,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2602:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2583:25:0"
											},
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 107,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2618:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 108,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2618:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "2618:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 112,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2671:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 113,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2681:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 111,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2650:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "EmitStatement",
												"src": "2645:45:0"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "2362:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2519:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2546:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2538:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2537:18:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2573:0:0"
									},
									"scope": 123,
									"src": "2510:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2703:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 122,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "2982:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "2962:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 119,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2962:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 121,
										"length": {
											"hexValue": "3439",
											"id": 120,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2970:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2962:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 124,
							"src": "693:2297:0",
							"usedErrors": []
						}
					],
					"src": "87:2904:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							508
						],
						"Initializable": [
							265
						]
					},
					"id": 266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 509,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 127,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 129,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 133,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 138,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 135,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "3101:257:1",
										"statements": [
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 166,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 141,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3156:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 143,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3133:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3133:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:47:1"
											},
											{
												"condition": {
													"id": 147,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3172:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"nodeType": "IfStatement",
												"src": "3168:65:1",
												"trueBody": {
													"id": 152,
													"nodeType": "Block",
													"src": "3188:45:1",
													"statements": [
														{
															"expression": {
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 148,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "3202:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3218:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3202:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "3202:20:1"
														}
													]
												}
											},
											{
												"id": 154,
												"nodeType": "PlaceholderStatement",
												"src": "3242:1:1"
											},
											{
												"condition": {
													"id": 155,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3257:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "IfStatement",
												"src": "3253:99:1",
												"trueBody": {
													"id": 164,
													"nodeType": "Block",
													"src": "3273:79:1",
													"statements": [
														{
															"expression": {
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 156,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "3287:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3303:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3287:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "3287:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3339:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 160,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "3327:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3327:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 163,
															"nodeType": "EmitStatement",
															"src": "3322:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 167,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:280:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "4173:269:1",
										"statements": [
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4188:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 197,
														"src": "4183:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 172,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4183:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"arguments": [
														{
															"id": 175,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4228:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 174,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4205:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4205:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4183:53:1"
											},
											{
												"condition": {
													"id": 178,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "4250:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"nodeType": "IfStatement",
												"src": "4246:65:1",
												"trueBody": {
													"id": 183,
													"nodeType": "Block",
													"src": "4266:45:1",
													"statements": [
														{
															"expression": {
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 179,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "4280:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4296:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4280:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 182,
															"nodeType": "ExpressionStatement",
															"src": "4280:20:1"
														}
													]
												}
											},
											{
												"id": 185,
												"nodeType": "PlaceholderStatement",
												"src": "4320:1:1"
											},
											{
												"condition": {
													"id": 186,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "4335:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "IfStatement",
												"src": "4331:105:1",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "4351:85:1",
													"statements": [
														{
															"expression": {
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 187,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "4365:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4381:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4365:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 190,
															"nodeType": "ExpressionStatement",
															"src": "4365:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 192,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "4417:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 191,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4405:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4405:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 194,
															"nodeType": "EmitStatement",
															"src": "4400:25:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3364:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 198,
									"name": "reinitializer",
									"nameLocation": "4144:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4164:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4158:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 169,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4158:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4157:15:1"
									},
									"src": "4135:307:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "4680:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 202,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4698:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4713:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4690:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "4690:69:1"
											},
											{
												"id": 206,
												"nodeType": "PlaceholderStatement",
												"src": "4769:1:1"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "4448:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 208,
									"name": "onlyInitializing",
									"nameLocation": "4661:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4677:2:1"
									},
									"src": "4652:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "5225:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5263:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 214,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "5263:5:1",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 213,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5258:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5258:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5258:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 212,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "5235:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5235:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5235:39:1"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "4783:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5185:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5205:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5225:0:1"
									},
									"scope": 265,
									"src": "5176:105:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "5357:738:1",
										"statements": [
											{
												"condition": {
													"id": 228,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 133,
													"src": "5684:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 261,
													"nodeType": "Block",
													"src": "5922:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 249,
																			"name": "_initialized",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "5944:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 250,
																			"name": "version",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "5959:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5944:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5968:48:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		},
																		"value": "Initializable: contract is already initialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		}
																	],
																	"id": 248,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5936:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5936:81:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 254,
															"nodeType": "ExpressionStatement",
															"src": "5936:81:1"
														},
														{
															"expression": {
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 255,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "6031:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 256,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "6046:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6031:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 258,
															"nodeType": "ExpressionStatement",
															"src": "6031:22:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6074:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 260,
															"nodeType": "Return",
															"src": "6067:11:1"
														}
													]
												},
												"id": 262,
												"nodeType": "IfStatement",
												"src": "5680:409:1",
												"trueBody": {
													"id": 247,
													"nodeType": "Block",
													"src": "5699:217:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 230,
																				"name": "version",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 223,
																				"src": "5738:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5749:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5738:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "5754:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 237,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "5793:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$265",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$265",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 236,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5785:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 235,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "5785:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5785:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 233,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 508,
																						"src": "5755:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$508_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 234,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 283,
																					"src": "5755:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5755:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "5738:61:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5817:48:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		},
																		"value": "Initializable: contract is already initialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		}
																	],
																	"id": 229,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5713:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5713:166:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 244,
															"nodeType": "ExpressionStatement",
															"src": "5713:166:1"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5900:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 246,
															"nodeType": "Return",
															"src": "5893:12:1"
														}
													]
												}
											}
										]
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setInitializedVersion",
									"nameLocation": "5296:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5325:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5319:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 222,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:15:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5351:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5351:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:6:1"
									},
									"scope": 265,
									"src": "5287:808:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 266,
							"src": "2383:3714:1",
							"usedErrors": []
						}
					],
					"src": "113:5985:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							508
						]
					},
					"id": 509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 268,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 508,
							"linearizedBaseContracts": [
								508
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "1252:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 276,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "1476:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 275,
												"id": 281,
												"nodeType": "Return",
												"src": "1469:30:2"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1206:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1246:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:2"
									},
									"scope": 508,
									"src": "1186:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2494:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 294,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$508",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$508",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 292,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 297,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2537:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:2"
											},
											{
												"assignments": [
													303,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 303,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2589:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 302,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 310,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 304,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2607:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2629:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "2658:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2442:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2469:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:2"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:2"
									},
									"scope": 508,
									"src": "2423:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "3566:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3596:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3604:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 327,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															334,
															354
														],
														"referencedDeclaration": 354,
														"src": "3583:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 326,
												"id": 332,
												"nodeType": "Return",
												"src": "3576:67:2"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3499:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3515:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3552:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:2"
									},
									"scope": 508,
									"src": "3477:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "4019:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4058:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4066:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 350,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "4075:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 346,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															374,
															424
														],
														"referencedDeclaration": 424,
														"src": "4036:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 345,
												"id": 352,
												"nodeType": "Return",
												"src": "4029:59:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "3903:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "3927:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "3954:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:2"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "4005:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:2"
									},
									"scope": 508,
									"src": "3872:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "4600:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 367,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "4639:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "4647:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 369,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 366,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															374,
															424
														],
														"referencedDeclaration": 424,
														"src": "4617:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 365,
												"id": 372,
												"nodeType": "Return",
												"src": "4610:94:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4497:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4521:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4548:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4586:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:2"
									},
									"scope": 508,
									"src": "4457:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "5138:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 391,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$508",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$508",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 389,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 394,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "5181:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 401,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5258:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 400,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "5247:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:2"
											},
											{
												"assignments": [
													407,
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 423,
														"src": "5311:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 406,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 423,
														"src": "5325:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 408,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"arguments": [
														{
															"id": 414,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "5378:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 410,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "5352:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "5371:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "5417:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 419,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5426:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 420,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "5438:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 417,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "5400:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 387,
												"id": 422,
												"nodeType": "Return",
												"src": "5393:58:2"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4999:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "5023:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "5050:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "5073:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:2"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "5124:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:2"
									},
									"scope": 508,
									"src": "4959:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "5735:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 435,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "5771:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "5779:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 434,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															441,
															476
														],
														"referencedDeclaration": 476,
														"src": "5752:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 433,
												"id": 439,
												"nodeType": "Return",
												"src": "5745:80:2"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5663:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5679:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:2"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5721:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:2"
									},
									"scope": 508,
									"src": "5635:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "6174:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 455,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "6203:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 454,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "6192:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:2"
											},
											{
												"assignments": [
													461,
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "6263:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 460,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "6277:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 462,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"arguments": [
														{
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "6322:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 464,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "6304:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "6361:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 471,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "6370:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 472,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "6382:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 469,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "6344:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 452,
												"id": 474,
												"nodeType": "Return",
												"src": "6337:58:2"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6053:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6077:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6104:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6160:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:2"
									},
									"scope": 508,
									"src": "6016:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "6782:532:2",
										"statements": [
											{
												"condition": {
													"id": 488,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 479,
													"src": "6796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "6853:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 492,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "6937:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 502,
																"nodeType": "Block",
																"src": "7245:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 499,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 483,
																					"src": "7270:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 498,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7263:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7263:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 501,
																		"nodeType": "ExpressionStatement",
																		"src": "7263:20:2"
																	}
																]
															},
															"id": 503,
															"nodeType": "IfStatement",
															"src": "6933:365:2",
															"trueBody": {
																"id": 497,
																"nodeType": "Block",
																"src": "6960:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7080:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7102:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7131:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7125:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7125:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7106:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7174:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7178:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7170:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7170:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7191:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7163:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7163:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7163:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 481,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7131:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 481,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7178:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 496,
																		"nodeType": "InlineAssembly",
																		"src": "7071:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "6792:516:2",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6805:42:2",
													"statements": [
														{
															"expression": {
																"id": 489,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "6826:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 487,
															"id": 490,
															"nodeType": "Return",
															"src": "6819:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6657:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6679:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6712:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:2"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6768:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:2"
									},
									"scope": 508,
									"src": "6622:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 509,
							"src": "194:7122:2",
							"usedErrors": []
						}
					],
					"src": "101:7216:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							508
						],
						"ContextUpgradeable": [
							550
						],
						"Initializable": [
							265
						]
					},
					"id": 551,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 510,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 551,
							"sourceUnit": 266,
							"src": "110:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 513,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "691:13:3"
									},
									"id": 514,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 512,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 550,
							"linearizedBaseContracts": [
								550,
								265
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "763:7:3",
										"statements": []
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 516,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "746:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:3"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:3"
									},
									"scope": 550,
									"src": "711:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "838:7:3",
										"statements": []
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 522,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "821:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:3"
									},
									"scope": 550,
									"src": "776:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "912:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 531,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 530,
												"id": 533,
												"nodeType": "Return",
												"src": "922:17:3"
											}
										]
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:3"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "903:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:3"
									},
									"scope": 550,
									"src": "850:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1019:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 540,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 539,
												"id": 542,
												"nodeType": "Return",
												"src": "1029:15:3"
											}
										]
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:3"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1003:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 537,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:3"
									},
									"scope": 550,
									"src": "952:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 549,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 550,
									"src": "1316:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 546,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 548,
										"length": {
											"hexValue": "3530",
											"id": 547,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 551,
							"src": "651:693:3",
							"usedErrors": []
						}
					],
					"src": "86:1259:3"
				},
				"id": 3
			},
			"contracts/DeltaNeutralVaultConfig02.sol": {
				"ast": {
					"absolutePath": "contracts/DeltaNeutralVaultConfig02.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							508
						],
						"ContextUpgradeable": [
							550
						],
						"DeltaNeutralVaultConfig02": [
							1557
						],
						"IController": [
							1595
						],
						"IDeltaNeutralVaultConfig02": [
							1822
						],
						"Initializable": [
							265
						],
						"OwnableUpgradeable": [
							123
						]
					},
					"id": 1558,
					"license": "BUSL",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 552,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "246:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 124,
							"src": "273:75:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IDeltaNeutralVaultConfig02.sol",
							"file": "./interfaces/IDeltaNeutralVaultConfig02.sol",
							"id": 554,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 1823,
							"src": "352:53:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IController.sol",
							"file": "./interfaces/IController.sol",
							"id": 555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 1596,
							"src": "407:38:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 557,
										"name": "IDeltaNeutralVaultConfig02",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1822,
										"src": "622:26:4"
									},
									"id": 558,
									"nodeType": "InheritanceSpecifier",
									"src": "622:26:4"
								},
								{
									"baseName": {
										"id": 559,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 123,
										"src": "650:18:4"
									},
									"id": 560,
									"nodeType": "InheritanceSpecifier",
									"src": "650:18:4"
								}
							],
							"canonicalName": "DeltaNeutralVaultConfig02",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 556,
								"nodeType": "StructuredDocumentation",
								"src": "449:98:4",
								"text": "@title DeltaNeutralVaultConfig02 - A place where you can find all delta neutral vault config"
							},
							"fullyImplemented": true,
							"id": 1557,
							"linearizedBaseContracts": [
								1557,
								123,
								550,
								265,
								1822
							],
							"name": "DeltaNeutralVaultConfig02",
							"nameLocation": "593:25:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "d4ca73c532248c12fc93b1dd748b3954751548cac9a9565697a3849bf7dd3b4c",
									"id": 576,
									"name": "LogSetParams",
									"nameLocation": "701:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "736:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "720:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": false,
												"mutability": "mutable",
												"name": "_getWrappedNativeAddr",
												"nameLocation": "758:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "750:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"indexed": false,
												"mutability": "mutable",
												"name": "_getWNativeRelayer",
												"nameLocation": "794:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "786:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fairLaunchAddr",
												"nameLocation": "827:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "819:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": false,
												"mutability": "mutable",
												"name": "_rebalanceFactor",
												"nameLocation": "857:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "849:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": false,
												"mutability": "mutable",
												"name": "_positionValueTolerance",
												"nameLocation": "888:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "880:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": false,
												"mutability": "mutable",
												"name": "_debtRatioTolerance",
												"nameLocation": "926:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "918:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:237:4"
									},
									"src": "695:256:4"
								},
								{
									"anonymous": false,
									"eventSelector": "6954b3b4020bd8480cd160fffd549537b617f20a8074ce45b2dee80cab6ef8e2",
									"id": 584,
									"name": "LogSetWhitelistedCallers",
									"nameLocation": "961:24:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1002:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "986:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": true,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1027:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1011:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ok",
												"nameLocation": "1042:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1037:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1037:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:61:4"
									},
									"src": "955:92:4"
								},
								{
									"anonymous": false,
									"eventSelector": "a36d60ecff7c14072a077a9b05c8c98cfdfbf7b5f8e354a071764c27e5330855",
									"id": 592,
									"name": "LogSetWhitelistedRebalancers",
									"nameLocation": "1057:28:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1102:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1086:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1127:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1111:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ok",
												"nameLocation": "1142:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1137:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1137:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:61:4"
									},
									"src": "1051:96:4"
								},
								{
									"anonymous": false,
									"eventSelector": "afed47930189ea124b8d808450ba0e6c685037de026cb6e56907751f1eef52dc",
									"id": 600,
									"name": "LogSetFeeExemptedCallers",
									"nameLocation": "1157:24:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1198:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1182:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": true,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1223:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1207:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ok",
												"nameLocation": "1238:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1233:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:61:4"
									},
									"src": "1151:92:4"
								},
								{
									"anonymous": false,
									"eventSelector": "a45b1098d406c90e72cc31fbb94367121d5556746c523ed9df1ebee898117df3",
									"id": 610,
									"name": "LogSetSwapRoute",
									"nameLocation": "1253:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1285:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1269:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": true,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "1310:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1294:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": false,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "1331:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1323:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"indexed": false,
												"mutability": "mutable",
												"name": "destination",
												"nameLocation": "1347:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1339:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:91:4"
									},
									"src": "1247:113:4"
								},
								{
									"anonymous": false,
									"eventSelector": "0162496fc30aed361442504cdd534d5911e2997e66eb97f7455486c9476c8bfb",
									"id": 616,
									"name": "LogSetLeverageLevel",
									"nameLocation": "1370:19:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1406:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1390:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newLeverageLevel",
												"nameLocation": "1421:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1415:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 613,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1415:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:50:4"
									},
									"src": "1364:76:4"
								},
								{
									"anonymous": false,
									"eventSelector": "07a990b3304df1347b430697979619a7a4c80cb4bd939e73ced1f7ca6101d6f6",
									"id": 624,
									"name": "LogSetAlpacaBountyConfig",
									"nameLocation": "1450:24:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1491:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1475:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "_alpacaReinvestTreasury",
												"nameLocation": "1508:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1500:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": false,
												"mutability": "mutable",
												"name": "_alpacaBountyBps",
												"nameLocation": "1541:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1533:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1533:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:84:4"
									},
									"src": "1444:115:4"
								},
								{
									"anonymous": false,
									"eventSelector": "49d9e0ca3aa68af12938170e0cd7267d832389603122e97b1cc70333942b8d21",
									"id": 632,
									"name": "LogSetAlpacaBeneficiaryConfig",
									"nameLocation": "1569:29:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1621:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1605:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"indexed": false,
												"mutability": "mutable",
												"name": "_alpacaBeneficiary",
												"nameLocation": "1643:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1635:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"indexed": false,
												"mutability": "mutable",
												"name": "_alpacaBeneficiaryBps",
												"nameLocation": "1676:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1668:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1598:104:4"
									},
									"src": "1563:140:4"
								},
								{
									"anonymous": false,
									"eventSelector": "9e48685292272e85fa3be83f07779af7794d29a6efb26b5f834bfb48e220d370",
									"id": 640,
									"name": "LogSetWhitelistedReinvestors",
									"nameLocation": "1713:28:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1742:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"indexed": true,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1767:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ok",
												"nameLocation": "1798:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1793:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:61:4"
									},
									"src": "1707:96:4"
								},
								{
									"anonymous": false,
									"eventSelector": "a604cbdca7ee706aafea3c555e0385946d7b121453a1b0ac8b3cd58c63014f07",
									"id": 646,
									"name": "LogSetValueLimit",
									"nameLocation": "1813:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1846:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1830:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"indexed": false,
												"mutability": "mutable",
												"name": "_maxVaultPositionValue",
												"nameLocation": "1863:22:4",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1855:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:57:4"
									},
									"src": "1807:80:4"
								},
								{
									"anonymous": false,
									"eventSelector": "c4d5650477cd4354e9a07e898df55abe6fecec3e415531e27a8499597b462be2",
									"id": 656,
									"name": "LogSetFees",
									"nameLocation": "1897:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1930:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1914:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": false,
												"mutability": "mutable",
												"name": "_depositFeeBps",
												"nameLocation": "1952:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1944:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": false,
												"mutability": "mutable",
												"name": "_withdrawalFeeBps",
												"nameLocation": "1981:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1973:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"indexed": false,
												"mutability": "mutable",
												"name": "_managementFeePerSec",
												"nameLocation": "2013:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2005:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:131:4"
									},
									"src": "1891:148:4"
								},
								{
									"anonymous": false,
									"eventSelector": "6ebcbf01234512b5d15e025b0aa6bd7514d7f7690b4ff5b260bea6b9aac29e0f",
									"id": 666,
									"name": "LogSetFeeTreasury",
									"nameLocation": "2049:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "2089:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2073:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"indexed": false,
												"mutability": "mutable",
												"name": "_depositFeeTreasury",
												"nameLocation": "2111:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2103:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"indexed": false,
												"mutability": "mutable",
												"name": "_withdrawFeeTreasury",
												"nameLocation": "2145:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2137:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"indexed": false,
												"mutability": "mutable",
												"name": "_managementFeeTreasury",
												"nameLocation": "2180:22:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2172:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:141:4"
									},
									"src": "2043:165:4"
								},
								{
									"anonymous": false,
									"eventSelector": "05647eff4880e5135952763bda009997b9c8669cac9292ef87f28badca4f32a6",
									"id": 672,
									"name": "LogSetSwapRouter",
									"nameLocation": "2218:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "2251:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "2235:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "2268:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "2260:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:46:4"
									},
									"src": "2212:69:4"
								},
								{
									"anonymous": false,
									"eventSelector": "b67c241a52658f85ec5362073fc9a0909e07aad7e75f92291c35f910c57f8086",
									"id": 679,
									"name": "LogSetReinvestPath",
									"nameLocation": "2291:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "2326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2310:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "_reinvestPath",
												"nameLocation": "2345:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2335:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 675,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2335:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 676,
													"nodeType": "ArrayTypeName",
													"src": "2335:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2309:50:4"
									},
									"src": "2285:75:4"
								},
								{
									"anonymous": false,
									"eventSelector": "1d38dced3210495ad7eff4825fd4dd5cc0e44c11c98519840691e5391c78cd15",
									"id": 685,
									"name": "LogSetController",
									"nameLocation": "2370:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "2403:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2387:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "_controller",
												"nameLocation": "2420:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2412:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2386:46:4"
									},
									"src": "2364:69:4"
								},
								{
									"anonymous": false,
									"eventSelector": "11cbce6c87791f09a7c2108a3abea2993ab3de5c9ed89a0bd108618ece832b23",
									"id": 697,
									"name": "LogSetExecutor",
									"nameLocation": "2445:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "2482:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2466:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2466:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"indexed": false,
												"mutability": "mutable",
												"name": "_depositExecutor",
												"nameLocation": "2504:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2496:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"indexed": false,
												"mutability": "mutable",
												"name": "_withdrawExecutor",
												"nameLocation": "2535:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2527:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "_rebalanceExecutor",
												"nameLocation": "2567:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2559:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "_reinvestExecutor",
												"nameLocation": "2600:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2592:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2592:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:163:4"
									},
									"src": "2439:184:4"
								},
								{
									"anonymous": false,
									"eventSelector": "377241d1cd344fbe941f17d99a8ea4b7c81990ec2da5f6d7ccfe19b9b1676f8f",
									"id": 705,
									"name": "LogSetSwapConfig",
									"nameLocation": "2633:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "2666:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2650:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "swapFee",
												"nameLocation": "2683:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2675:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "swapFeeDenom",
												"nameLocation": "2700:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2692:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:64:4"
									},
									"src": "2627:87:4"
								},
								{
									"anonymous": false,
									"eventSelector": "4aaf8791c546d8d1000b9d104834f06eea9b95c08f81c36f7eee152623edf4ae",
									"id": 715,
									"name": "LogSetStrategies",
									"nameLocation": "2724:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "2763:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2747:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "partialCloseMinimizeStrategy",
												"nameLocation": "2785:28:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2777:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableAddTwoSideStrategy",
												"nameLocation": "2828:24:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2820:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": false,
												"mutability": "mutable",
												"name": "assetAddTwoSideStrategy",
												"nameLocation": "2867:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2859:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:155:4"
									},
									"src": "2718:178:4"
								},
								{
									"errorSelector": "4f342786",
									"id": 717,
									"name": "DeltaNeutralVaultConfig_LeverageLevelTooLow",
									"nameLocation": "2929:43:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2972:2:4"
									},
									"src": "2923:52:4"
								},
								{
									"errorSelector": "970e7652",
									"id": 725,
									"name": "DeltaNeutralVaultConfig_TooMuchFee",
									"nameLocation": "2985:34:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "_depositFeeBps",
												"nameLocation": "3028:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "3020:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "_withdrawalFeeBps",
												"nameLocation": "3052:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "3044:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "_mangementFeeBps",
												"nameLocation": "3079:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "3071:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3071:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:77:4"
									},
									"src": "2979:118:4"
								},
								{
									"errorSelector": "5629e28e",
									"id": 729,
									"name": "DeltaNeutralVaultConfig_TooMuchBounty",
									"nameLocation": "3107:37:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "3153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "3145:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3144:17:4"
									},
									"src": "3101:61:4"
								},
								{
									"errorSelector": "99acc26e",
									"id": 731,
									"name": "DeltaNeutralVaultConfig_InvalidSwapRouter",
									"nameLocation": "3172:41:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3213:2:4"
									},
									"src": "3166:50:4"
								},
								{
									"errorSelector": "61f1ec28",
									"id": 733,
									"name": "DeltaNeutralVaultConfig_InvalidReinvestPath",
									"nameLocation": "3226:43:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3269:2:4"
									},
									"src": "3220:52:4"
								},
								{
									"errorSelector": "9be12e77",
									"id": 735,
									"name": "DeltaNeutralVaultConfig_InvalidReinvestPathLength",
									"nameLocation": "3282:49:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3331:2:4"
									},
									"src": "3276:58:4"
								},
								{
									"constant": true,
									"id": 738,
									"mutability": "constant",
									"name": "MIN_LEVERAGE_LEVEL",
									"nameLocation": "3387:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "3364:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 736,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3364:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 737,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3408:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 741,
									"mutability": "constant",
									"name": "MAX_DEPOSIT_FEE_BPS",
									"nameLocation": "3439:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "3414:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 739,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3414:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 740,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3461:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 744,
									"mutability": "constant",
									"name": "MAX_WITHDRAWAL_FEE_BPS",
									"nameLocation": "3495:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "3470:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 742,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3470:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 743,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3520:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 747,
									"mutability": "constant",
									"name": "MAX_MANGEMENT_FEE_PER_SEC",
									"nameLocation": "3554:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "3529:63:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 745,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3529:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33313730393739313938",
										"id": 746,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3582:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3170979198_by_1",
											"typeString": "int_const 3170979198"
										},
										"value": "3170979198"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 750,
									"mutability": "constant",
									"name": "MAX_ALPACA_BOUNTY_BPS",
									"nameLocation": "3622:21:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "3597:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3597:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32353030",
										"id": 749,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3646:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2500_by_1",
											"typeString": "int_const 2500"
										},
										"value": "2500"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 753,
									"mutability": "constant",
									"name": "MAX_ALPACA_BENEFICIARY_BPS",
									"nameLocation": "3680:26:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "3655:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 751,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3655:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36303030",
										"id": 752,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3709:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6000_by_1",
											"typeString": "int_const 6000"
										},
										"value": "6000"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1602
									],
									"constant": false,
									"functionSelector": "ef3bac5e",
									"id": 756,
									"mutability": "mutable",
									"name": "getWrappedNativeAddr",
									"nameLocation": "3856:20:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 755,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3847:8:4"
									},
									"scope": 1557,
									"src": "3832:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 754,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3832:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1607
									],
									"constant": false,
									"functionSelector": "d1783fa8",
									"id": 759,
									"mutability": "mutable",
									"name": "getWNativeRelayer",
									"nameLocation": "3938:17:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 758,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3929:8:4"
									},
									"scope": 1557,
									"src": "3914:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 757,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3914:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1652
									],
									"constant": false,
									"functionSelector": "5c23aed6",
									"id": 761,
									"mutability": "mutable",
									"name": "fairLaunchAddr",
									"nameLocation": "4009:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "3994:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 760,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3994:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56fc97a0",
									"id": 763,
									"mutability": "mutable",
									"name": "maxVaultPositionValue",
									"nameLocation": "4115:21:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "4100:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 762,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4100:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1612
									],
									"constant": false,
									"functionSelector": "62969467",
									"id": 766,
									"mutability": "mutable",
									"name": "rebalanceFactor",
									"nameLocation": "4228:15:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 765,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4219:8:4"
									},
									"scope": 1557,
									"src": "4204:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 764,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4204:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1617
									],
									"constant": false,
									"functionSelector": "f9bfd907",
									"id": 769,
									"mutability": "mutable",
									"name": "positionValueTolerance",
									"nameLocation": "4331:22:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 768,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4322:8:4"
									},
									"scope": 1557,
									"src": "4307:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 767,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4307:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1622
									],
									"constant": false,
									"functionSelector": "64facdd5",
									"id": 772,
									"mutability": "mutable",
									"name": "debtRatioTolerance",
									"nameLocation": "4452:18:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 771,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4443:8:4"
									},
									"scope": 1557,
									"src": "4428:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 770,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4428:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1658
									],
									"constant": false,
									"functionSelector": "eea99787",
									"id": 774,
									"mutability": "mutable",
									"name": "depositFeeTreasury",
									"nameLocation": "4520:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "4505:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 773,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4505:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1664
									],
									"constant": false,
									"functionSelector": "ab879827",
									"id": 777,
									"mutability": "mutable",
									"name": "depositFeeBps",
									"nameLocation": "4618:13:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 776,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4609:8:4"
									},
									"scope": 1557,
									"src": "4594:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 775,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4594:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1670
									],
									"constant": false,
									"functionSelector": "698d92cb",
									"id": 779,
									"mutability": "mutable",
									"name": "withdrawalFeeTreasury",
									"nameLocation": "4682:21:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "4667:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 778,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4667:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1676
									],
									"constant": false,
									"functionSelector": "04336bb3",
									"id": 782,
									"mutability": "mutable",
									"name": "withdrawalFeeBps",
									"nameLocation": "4786:16:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 781,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4777:8:4"
									},
									"scope": 1557,
									"src": "4762:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 780,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4762:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1682
									],
									"constant": false,
									"functionSelector": "45b61b00",
									"id": 784,
									"mutability": "mutable",
									"name": "managementFeeTreasury",
									"nameLocation": "4853:21:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "4838:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 783,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4838:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1688
									],
									"constant": false,
									"functionSelector": "b192362a",
									"id": 787,
									"mutability": "mutable",
									"name": "managementFeePerSec",
									"nameLocation": "4954:19:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 786,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4945:8:4"
									},
									"scope": 1557,
									"src": "4930:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4930:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1694
									],
									"constant": false,
									"functionSelector": "e592c5fa",
									"id": 790,
									"mutability": "mutable",
									"name": "leverageLevel",
									"nameLocation": "5062:13:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 789,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5053:8:4"
									},
									"scope": 1557,
									"src": "5040:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 788,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5040:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bed65bae",
									"id": 792,
									"mutability": "mutable",
									"name": "alpacaToken",
									"nameLocation": "5116:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5101:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 791,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5101:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1740
									],
									"constant": false,
									"functionSelector": "725c9c49",
									"id": 794,
									"mutability": "mutable",
									"name": "getSwapRouter",
									"nameLocation": "5210:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5195:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 793,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5195:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ed5bb92",
									"id": 797,
									"mutability": "mutable",
									"name": "reinvestPath",
									"nameLocation": "5287:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5270:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 795,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5270:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 796,
										"nodeType": "ArrayTypeName",
										"src": "5270:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1630
									],
									"constant": false,
									"functionSelector": "ffc97ce9",
									"id": 801,
									"mutability": "mutable",
									"name": "whitelistedCallers",
									"nameLocation": "5375:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5343:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 800,
										"keyType": {
											"id": 798,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5351:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5343:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 799,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "5362:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1638
									],
									"constant": false,
									"functionSelector": "4f40e368",
									"id": 805,
									"mutability": "mutable",
									"name": "whitelistedRebalancers",
									"nameLocation": "5471:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5439:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 804,
										"keyType": {
											"id": 802,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5447:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5439:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 803,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "5458:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1646
									],
									"constant": false,
									"functionSelector": "3924f233",
									"id": 809,
									"mutability": "mutable",
									"name": "feeExemptedCallers",
									"nameLocation": "5564:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5532:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 808,
										"keyType": {
											"id": 806,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5540:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5532:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 807,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "5551:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1702
									],
									"constant": false,
									"functionSelector": "12440ccb",
									"id": 813,
									"mutability": "mutable",
									"name": "whitelistedReinvestors",
									"nameLocation": "5647:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5615:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 812,
										"keyType": {
											"id": 810,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5623:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5615:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 811,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "5634:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1708
									],
									"constant": false,
									"functionSelector": "595d4ece",
									"id": 815,
									"mutability": "mutable",
									"name": "alpacaReinvestFeeTreasury",
									"nameLocation": "5713:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5698:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 814,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5698:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1714
									],
									"constant": false,
									"functionSelector": "956c9da0",
									"id": 817,
									"mutability": "mutable",
									"name": "alpacaBountyBps",
									"nameLocation": "5790:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5775:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 816,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5775:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1720
									],
									"constant": false,
									"functionSelector": "a361f404",
									"id": 819,
									"mutability": "mutable",
									"name": "alpacaBeneficiary",
									"nameLocation": "5912:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5897:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 818,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5897:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1726
									],
									"constant": false,
									"functionSelector": "f52c6764",
									"id": 821,
									"mutability": "mutable",
									"name": "alpacaBeneficiaryBps",
									"nameLocation": "5986:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "5971:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5971:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1753
									],
									"constant": false,
									"functionSelector": "f77c4791",
									"id": 824,
									"mutability": "mutable",
									"name": "controller",
									"nameLocation": "6070:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 823,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6061:8:4"
									},
									"scope": 1557,
									"src": "6046:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 822,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6046:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1765
									],
									"constant": false,
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "6087:12:4",
										"text": "Executor"
									},
									"functionSelector": "58d4c4ea",
									"id": 827,
									"mutability": "mutable",
									"name": "depositExecutor",
									"nameLocation": "6118:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6103:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 826,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6103:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1771
									],
									"constant": false,
									"functionSelector": "235ec73d",
									"id": 829,
									"mutability": "mutable",
									"name": "withdrawExecutor",
									"nameLocation": "6153:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6138:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 828,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6138:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1777
									],
									"constant": false,
									"functionSelector": "d77ab72d",
									"id": 831,
									"mutability": "mutable",
									"name": "rebalanceExecutor",
									"nameLocation": "6189:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6174:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 830,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6174:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1783
									],
									"constant": false,
									"functionSelector": "1c425a45",
									"id": 833,
									"mutability": "mutable",
									"name": "reinvestExecutor",
									"nameLocation": "6226:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6211:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 832,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6211:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1815
									],
									"constant": false,
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "6249:15:4",
										"text": "swap config"
									},
									"functionSelector": "54cf2aeb",
									"id": 836,
									"mutability": "mutable",
									"name": "swapFee",
									"nameLocation": "6283:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6268:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 835,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6268:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1821
									],
									"constant": false,
									"functionSelector": "429e0971",
									"id": 838,
									"mutability": "mutable",
									"name": "swapFeeDenom",
									"nameLocation": "6310:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6295:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 837,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6295:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1797
									],
									"constant": false,
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "6329:14:4",
										"text": "Strategies"
									},
									"functionSelector": "49b2045c",
									"id": 841,
									"mutability": "mutable",
									"name": "partialCloseMinimizeStrategy",
									"nameLocation": "6362:28:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6347:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6347:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1803
									],
									"constant": false,
									"functionSelector": "79d37981",
									"id": 843,
									"mutability": "mutable",
									"name": "stableAddTwoSideStrategy",
									"nameLocation": "6410:24:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6395:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 842,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6395:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1809
									],
									"constant": false,
									"functionSelector": "0573f19c",
									"id": 845,
									"mutability": "mutable",
									"name": "assetAddTwoSideStrategy",
									"nameLocation": "6454:23:4",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "6439:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 844,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6439:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "6865:364:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 870,
															"name": "OwnableUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "6872:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$123_$",
																"typeString": "type(contract OwnableUpgradeable)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "__Ownable_init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "6872:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6872:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "6872:35:4"
											},
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 875,
														"name": "alpacaToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "6916:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 876,
														"name": "_alpacaToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "6930:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6916:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "6916:26:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"name": "_depositFeeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "6959:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6980:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 882,
															"name": "_withdrawFeeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6983:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7005:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 884,
															"name": "_managementFeeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "7008:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7032:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 879,
														"name": "setFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "6951:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,uint256,address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6951:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "6951:83:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 889,
															"name": "_getWrappedNativeAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "7059:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 890,
															"name": "_getWNativeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "7089:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "_fairLaunchAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "7116:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "_rebalanceFactor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "7140:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 893,
															"name": "_positionValueTolerance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "7165:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 894,
															"name": "_debtRatioTolerance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "7197:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 888,
														"name": "setParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "7041:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7041:182:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "7041:182:4"
											}
										]
									},
									"functionSelector": "64c65705",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 868,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 867,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 167,
												"src": "6853:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6853:11:4"
										}
									],
									"name": "initialize",
									"nameLocation": "6493:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "_getWrappedNativeAddr",
												"nameLocation": "6518:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6510:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "_getWNativeRelayer",
												"nameLocation": "6554:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6546:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6546:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "_fairLaunchAddr",
												"nameLocation": "6587:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6579:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6579:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "_rebalanceFactor",
												"nameLocation": "6617:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6609:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6609:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "_positionValueTolerance",
												"nameLocation": "6648:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6640:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "_debtRatioTolerance",
												"nameLocation": "6686:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6678:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "_depositFeeTreasury",
												"nameLocation": "6720:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6712:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "_managementFeeTreasury",
												"nameLocation": "6754:22:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6746:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "_withdrawFeeTreasury",
												"nameLocation": "6791:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6783:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6783:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "_alpacaToken",
												"nameLocation": "6826:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6818:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6818:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:340:4"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6865:0:4"
									},
									"scope": 1557,
									"src": "6484:745:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "7478:502:4",
										"statements": [
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 915,
														"name": "getWrappedNativeAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "7485:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 916,
														"name": "_getWrappedNativeAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "7508:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7485:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "7485:44:4"
											},
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 919,
														"name": "getWNativeRelayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "7536:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 920,
														"name": "_getWNativeRelayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "7556:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7536:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "7536:38:4"
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 923,
														"name": "fairLaunchAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "7581:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 924,
														"name": "_fairLaunchAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "7598:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7581:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "7581:32:4"
											},
											{
												"expression": {
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 927,
														"name": "rebalanceFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "7620:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 928,
														"name": "_rebalanceFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "7638:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7620:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "7620:34:4"
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 931,
														"name": "positionValueTolerance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "7661:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 932,
														"name": "_positionValueTolerance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "7686:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7661:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "7661:48:4"
											},
											{
												"expression": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 935,
														"name": "debtRatioTolerance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "7716:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 936,
														"name": "_debtRatioTolerance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "7737:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7716:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "7716:40:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 940,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7791:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7791:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "_getWrappedNativeAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "7810:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "_getWNativeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "7840:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "_fairLaunchAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "7867:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "_rebalanceFactor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "7891:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 946,
															"name": "_positionValueTolerance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "7916:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 947,
															"name": "_debtRatioTolerance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "7948:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 939,
														"name": "LogSetParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "7770:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7770:204:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "EmitStatement",
												"src": "7765:209:4"
											}
										]
									},
									"functionSelector": "8c8a4b58",
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 913,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 912,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "7468:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7468:9:4"
										}
									],
									"name": "setParams",
									"nameLocation": "7244:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "_getWrappedNativeAddr",
												"nameLocation": "7268:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7260:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7260:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "_getWNativeRelayer",
												"nameLocation": "7304:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7296:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7296:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "_fairLaunchAddr",
												"nameLocation": "7337:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7329:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7329:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "_rebalanceFactor",
												"nameLocation": "7367:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7359:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7359:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "_positionValueTolerance",
												"nameLocation": "7398:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7390:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7390:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "_debtRatioTolerance",
												"nameLocation": "7436:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7428:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7253:207:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7478:0:4"
									},
									"scope": 1557,
									"src": "7235:745:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "8256:195:4",
										"statements": [
											{
												"body": {
													"id": 990,
													"nodeType": "Block",
													"src": "8318:128:4",
													"statements": [
														{
															"expression": {
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 973,
																		"name": "whitelistedCallers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "8327:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 977,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 974,
																			"name": "_callers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "8346:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 976,
																		"indexExpression": {
																			"id": 975,
																			"name": "_idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 963,
																			"src": "8355:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8346:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8327:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 978,
																	"name": "_ok",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "8364:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8327:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 980,
															"nodeType": "ExpressionStatement",
															"src": "8327:40:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 982,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8406:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8406:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 984,
																			"name": "_callers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "8418:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 986,
																		"indexExpression": {
																			"id": 985,
																			"name": "_idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 963,
																			"src": "8427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8418:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 987,
																		"name": "_ok",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "8434:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 981,
																	"name": "LogSetWhitelistedCallers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "8381:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,address,bool)"
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8381:57:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 989,
															"nodeType": "EmitStatement",
															"src": "8376:62:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "_idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "8286:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 967,
															"name": "_callers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "8293:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8293:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8286:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 991,
												"initializationExpression": {
													"assignments": [
														963
													],
													"declarations": [
														{
															"constant": false,
															"id": 963,
															"mutability": "mutable",
															"name": "_idx",
															"nameLocation": "8276:4:4",
															"nodeType": "VariableDeclaration",
															"scope": 991,
															"src": "8268:12:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 962,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8268:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 965,
													"initialValue": {
														"hexValue": "30",
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8283:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8268:16:4"
												},
												"loopExpression": {
													"expression": {
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8310:6:4",
														"subExpression": {
															"id": 970,
															"name": "_idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "8310:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 972,
													"nodeType": "ExpressionStatement",
													"src": "8310:6:4"
												},
												"nodeType": "ForStatement",
												"src": "8263:183:4"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "7986:177:4",
										"text": "@notice Set whitelisted callers.\n @dev Must only be called by owner.\n @param _callers addresses to be whitelisted.\n @param _ok The new ok flag for callers."
									},
									"functionSelector": "1bb8c61d",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 960,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 959,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "8246:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8246:9:4"
										}
									],
									"name": "setWhitelistedCallers",
									"nameLocation": "8176:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_callers",
												"nameLocation": "8217:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "8198:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 953,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8198:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 954,
													"nodeType": "ArrayTypeName",
													"src": "8198:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "_ok",
												"nameLocation": "8232:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "8227:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8227:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8197:39:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8256:0:4"
									},
									"scope": 1557,
									"src": "8167:284:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "8734:203:4",
										"statements": [
											{
												"body": {
													"id": 1032,
													"nodeType": "Block",
													"src": "8796:136:4",
													"statements": [
														{
															"expression": {
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1015,
																		"name": "whitelistedRebalancers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "8805:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1019,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1016,
																			"name": "_callers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "8828:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1018,
																		"indexExpression": {
																			"id": 1017,
																			"name": "_idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "8837:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8828:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8805:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1020,
																	"name": "_ok",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "8846:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8805:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "8805:44:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1024,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8892:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8892:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1026,
																			"name": "_callers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "8904:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1028,
																		"indexExpression": {
																			"id": 1027,
																			"name": "_idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "8913:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8904:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1029,
																		"name": "_ok",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "8920:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1023,
																	"name": "LogSetWhitelistedRebalancers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "8863:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,address,bool)"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8863:61:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1031,
															"nodeType": "EmitStatement",
															"src": "8858:66:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1008,
														"name": "_idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "8764:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1009,
															"name": "_callers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "8771:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8771:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8764:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1033,
												"initializationExpression": {
													"assignments": [
														1005
													],
													"declarations": [
														{
															"constant": false,
															"id": 1005,
															"mutability": "mutable",
															"name": "_idx",
															"nameLocation": "8754:4:4",
															"nodeType": "VariableDeclaration",
															"scope": 1033,
															"src": "8746:12:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1004,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8746:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1007,
													"initialValue": {
														"hexValue": "30",
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8761:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8746:16:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8788:6:4",
														"subExpression": {
															"id": 1012,
															"name": "_idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "8788:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1014,
													"nodeType": "ExpressionStatement",
													"src": "8788:6:4"
												},
												"nodeType": "ForStatement",
												"src": "8741:191:4"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "8457:181:4",
										"text": "@notice Set whitelisted rebalancers.\n @dev Must only be called by owner.\n @param _callers addresses to be whitelisted.\n @param _ok The new ok flag for callers."
									},
									"functionSelector": "9e1b8fa2",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1001,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "8724:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8724:9:4"
										}
									],
									"name": "setWhitelistedRebalancer",
									"nameLocation": "8651:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "_callers",
												"nameLocation": "8695:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "8676:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 995,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8676:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 996,
													"nodeType": "ArrayTypeName",
													"src": "8676:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "_ok",
												"nameLocation": "8710:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "8705:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8705:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8675:39:4"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8734:0:4"
									},
									"scope": 1557,
									"src": "8642:295:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "9221:203:4",
										"statements": [
											{
												"body": {
													"id": 1074,
													"nodeType": "Block",
													"src": "9283:136:4",
													"statements": [
														{
															"expression": {
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1057,
																		"name": "whitelistedReinvestors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "9292:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1061,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1058,
																			"name": "_callers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1039,
																			"src": "9315:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1060,
																		"indexExpression": {
																			"id": 1059,
																			"name": "_idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "9324:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9315:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9292:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1062,
																	"name": "_ok",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "9333:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9292:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1064,
															"nodeType": "ExpressionStatement",
															"src": "9292:44:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1066,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9379:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9379:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1068,
																			"name": "_callers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1039,
																			"src": "9391:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1070,
																		"indexExpression": {
																			"id": 1069,
																			"name": "_idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "9400:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9391:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1071,
																		"name": "_ok",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "9407:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1065,
																	"name": "LogSetWhitelistedReinvestors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "9350:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,address,bool)"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9350:61:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "EmitStatement",
															"src": "9345:66:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1050,
														"name": "_idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "9251:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1051,
															"name": "_callers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "9258:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9258:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9251:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"initializationExpression": {
													"assignments": [
														1047
													],
													"declarations": [
														{
															"constant": false,
															"id": 1047,
															"mutability": "mutable",
															"name": "_idx",
															"nameLocation": "9241:4:4",
															"nodeType": "VariableDeclaration",
															"scope": 1075,
															"src": "9233:12:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1046,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9233:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1049,
													"initialValue": {
														"hexValue": "30",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9248:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9233:16:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9275:6:4",
														"subExpression": {
															"id": 1054,
															"name": "_idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "9275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1056,
													"nodeType": "ExpressionStatement",
													"src": "9275:6:4"
												},
												"nodeType": "ForStatement",
												"src": "9228:191:4"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "8943:181:4",
										"text": "@notice Set whitelisted reinvestors.\n @dev Must only be called by owner.\n @param _callers addresses to be whitelisted.\n @param _ok The new ok flag for callers."
									},
									"functionSelector": "91ba87d8",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1044,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1043,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "9211:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "9211:9:4"
										}
									],
									"name": "setwhitelistedReinvestors",
									"nameLocation": "9137:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "_callers",
												"nameLocation": "9182:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "9163:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1037,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9163:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1038,
													"nodeType": "ArrayTypeName",
													"src": "9163:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "_ok",
												"nameLocation": "9197:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "9192:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9192:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9162:39:4"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9221:0:4"
									},
									"scope": 1557,
									"src": "9128:296:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "9656:227:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1085,
														"name": "_newLeverageLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "9667:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1086,
														"name": "MIN_LEVERAGE_LEVEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "9687:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "9667:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "9663:113:4",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "9707:69:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1088,
																	"name": "DeltaNeutralVaultConfig_LeverageLevelTooLow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "9723:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9723:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1090,
															"nodeType": "RevertStatement",
															"src": "9716:52:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1093,
														"name": "leverageLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "9782:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1094,
														"name": "_newLeverageLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "9798:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "9782:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "9782:33:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1098,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9847:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9847:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1100,
															"name": "_newLeverageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "9859:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1097,
														"name": "LogSetLeverageLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "9827:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$returns$__$",
															"typeString": "function (address,uint8)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9827:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "EmitStatement",
												"src": "9822:55:4"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "9430:152:4",
										"text": "@notice Set leverage level.\n @dev Must only be called by owner.\n @param _newLeverageLevel The new leverage level to be set. Must be >= 3"
									},
									"functionSelector": "fe865db9",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1083,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1082,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "9646:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "9646:9:4"
										}
									],
									"name": "setLeverageLevel",
									"nameLocation": "9595:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "_newLeverageLevel",
												"nameLocation": "9618:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "9612:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1079,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9612:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9611:25:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9656:0:4"
									},
									"scope": 1557,
									"src": "9586:297:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "10157:195:4",
										"statements": [
											{
												"body": {
													"id": 1143,
													"nodeType": "Block",
													"src": "10219:128:4",
													"statements": [
														{
															"expression": {
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1126,
																		"name": "feeExemptedCallers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "10228:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1130,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1127,
																			"name": "_callers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "10247:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1129,
																		"indexExpression": {
																			"id": 1128,
																			"name": "_idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10256:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10247:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10228:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1131,
																	"name": "_ok",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "10265:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10228:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "10228:40:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1135,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10307:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10307:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1137,
																			"name": "_callers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "10319:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1139,
																		"indexExpression": {
																			"id": 1138,
																			"name": "_idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10328:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10319:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1140,
																		"name": "_ok",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "10335:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1134,
																	"name": "LogSetFeeExemptedCallers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "10282:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,address,bool)"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10282:57:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1142,
															"nodeType": "EmitStatement",
															"src": "10277:62:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1119,
														"name": "_idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "10187:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1120,
															"name": "_callers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "10194:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10194:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10187:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1144,
												"initializationExpression": {
													"assignments": [
														1116
													],
													"declarations": [
														{
															"constant": false,
															"id": 1116,
															"mutability": "mutable",
															"name": "_idx",
															"nameLocation": "10177:4:4",
															"nodeType": "VariableDeclaration",
															"scope": 1144,
															"src": "10169:12:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1115,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10169:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1118,
													"initialValue": {
														"hexValue": "30",
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10184:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10169:16:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10211:6:4",
														"subExpression": {
															"id": 1123,
															"name": "_idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "10211:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1125,
													"nodeType": "ExpressionStatement",
													"src": "10211:6:4"
												},
												"nodeType": "ForStatement",
												"src": "10164:183:4"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "9889:175:4",
										"text": "@notice Set exempted fee callers.\n @dev Must only be called by owner.\n @param _callers addresses to be exempted.\n @param _ok The new ok flag for callers."
									},
									"functionSelector": "2ce2a218",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1112,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "10147:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "10147:9:4"
										}
									],
									"name": "setFeeExemptedCallers",
									"nameLocation": "10077:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "_callers",
												"nameLocation": "10118:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "10099:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1106,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10099:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1107,
													"nodeType": "ArrayTypeName",
													"src": "10099:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_ok",
												"nameLocation": "10133:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "10128:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10128:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10098:39:4"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10157:0:4"
									},
									"scope": 1557,
									"src": "10068:284:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "10909:840:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1164,
																"name": "_newDepositFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "10928:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1165,
																"name": "MAX_DEPOSIT_FEE_BPS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "10948:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10928:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1167,
																"name": "_newWithdrawalFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "10978:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1168,
																"name": "MAX_WITHDRAWAL_FEE_BPS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "11001:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10978:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10928:95:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1171,
															"name": "_newManagementFeePerSec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "11034:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1172,
															"name": "MAX_MANGEMENT_FEE_PER_SEC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "11060:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11034:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10928:157:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "IfStatement",
												"src": "10916:301:4",
												"trueBody": {
													"id": 1181,
													"nodeType": "Block",
													"src": "11093:124:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1176,
																		"name": "_newDepositFeeBps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "11144:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1177,
																		"name": "_newWithdrawalFeeBps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "11163:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1178,
																		"name": "_newManagementFeePerSec",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "11185:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1175,
																	"name": "DeltaNeutralVaultConfig_TooMuchFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "11109:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256) pure"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11109:100:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1180,
															"nodeType": "RevertStatement",
															"src": "11102:107:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "depositFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "11225:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1184,
														"name": "_newDepositFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "11246:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11225:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "11225:43:4"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "depositFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "11275:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_newDepositFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "11291:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11275:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "11275:33:4"
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1191,
														"name": "withdrawalFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "11317:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1192,
														"name": "_newWithdrawalFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "11341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11317:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "11317:49:4"
											},
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1195,
														"name": "withdrawalFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "11373:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1196,
														"name": "_newWithdrawalFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "11392:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11373:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "11373:39:4"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1199,
														"name": "managementFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "11421:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1200,
														"name": "_newManagementFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "11445:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11421:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "11421:49:4"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "managementFeePerSec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "11477:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1204,
														"name": "_newManagementFeePerSec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "11499:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11477:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "11477:45:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1208,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11547:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11547:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "_newDepositFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "11559:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1211,
															"name": "_newWithdrawalFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "11578:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1212,
															"name": "_newManagementFeePerSec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "11600:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1207,
														"name": "LogSetFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "11536:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11536:88:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "EmitStatement",
												"src": "11531:93:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11654:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11654:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "_newDepositFeeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "11666:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "_newWithdrawalFeeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "11690:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "_newManagementFeeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "11717:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1215,
														"name": "LogSetFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "11636:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address,address)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11636:107:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "EmitStatement",
												"src": "11631:112:4"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "10358:286:4",
										"text": "@notice Set fees.\n @dev Must only be called by owner.\n @param _newDepositFeeBps Fee when user deposit to delta neutral vault.\n @param _newWithdrawalFeeBps Fee when user deposit to delta neutral vault.\n @param _newManagementFeePerSec Mangement Fee per second."
									},
									"functionSelector": "e6abb8bd",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1161,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "10899:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "10899:9:4"
										}
									],
									"name": "setFees",
									"nameLocation": "10657:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "_newDepositFeeTreasury",
												"nameLocation": "10679:22:4",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10671:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10671:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "_newDepositFeeBps",
												"nameLocation": "10716:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10708:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "_newWithdrawalFeeTreasury",
												"nameLocation": "10748:25:4",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10740:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10740:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_newWithdrawalFeeBps",
												"nameLocation": "10788:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10780:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "_newManagementFeeTreasury",
												"nameLocation": "10823:25:4",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10815:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "_newManagementFeePerSec",
												"nameLocation": "10863:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10855:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10855:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10664:227:4"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10909:0:4"
									},
									"scope": 1557,
									"src": "10648:1101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "12132:347:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1234,
														"name": "_newAlpacaBountyBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "12143:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1235,
														"name": "MAX_ALPACA_BOUNTY_BPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "12165:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12143:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "12139:131:4",
												"trueBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "12188:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1238,
																		"name": "_newAlpacaBountyBps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "12242:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1237,
																	"name": "DeltaNeutralVaultConfig_TooMuchBounty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "12204:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12204:58:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1240,
															"nodeType": "RevertStatement",
															"src": "12197:65:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1243,
														"name": "alpacaReinvestFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "12278:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1244,
														"name": "_newAlpacaReinvestFeeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "12306:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12278:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "12278:57:4"
											},
											{
												"expression": {
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1247,
														"name": "alpacaBountyBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "12342:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1248,
														"name": "_newAlpacaBountyBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "12360:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12342:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "12342:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1252,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12418:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12418:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1254,
															"name": "alpacaReinvestFeeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "12430:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "alpacaBountyBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "12457:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1251,
														"name": "LogSetAlpacaBountyConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "12393:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12393:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "EmitStatement",
												"src": "12388:85:4"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "11755:242:4",
										"text": "@notice Set alpacaBountyBps.\n @dev Must only be called by owner.\n @param _newAlpacaReinvestFeeTreasury The new address to received ALPACA reinvest fee\n @param _newAlpacaBountyBps Fee from reinvesting ALPACA to positions."
									},
									"functionSelector": "1218cf18",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1232,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1231,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "12119:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "12119:9:4"
										}
									],
									"name": "setAlpacaBountyConfig",
									"nameLocation": "12010:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_newAlpacaReinvestFeeTreasury",
												"nameLocation": "12040:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "12032:37:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "_newAlpacaBountyBps",
												"nameLocation": "12079:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "12071:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12071:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:68:4"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12132:0:4"
									},
									"scope": 1557,
									"src": "12001:478:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "12866:358:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1269,
														"name": "_newAlpacaBeneficiaryBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "12877:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1270,
														"name": "MAX_ALPACA_BENEFICIARY_BPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "12904:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12877:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1277,
												"nodeType": "IfStatement",
												"src": "12873:146:4",
												"trueBody": {
													"id": 1276,
													"nodeType": "Block",
													"src": "12932:87:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1273,
																		"name": "_newAlpacaBeneficiaryBps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "12986:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1272,
																	"name": "DeltaNeutralVaultConfig_TooMuchBounty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "12948:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12948:63:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1275,
															"nodeType": "RevertStatement",
															"src": "12941:70:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1278,
														"name": "alpacaBeneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "13027:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1279,
														"name": "_newAlpacaBeneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "13047:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13027:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "13027:41:4"
											},
											{
												"expression": {
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1282,
														"name": "alpacaBeneficiaryBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "13075:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1283,
														"name": "_newAlpacaBeneficiaryBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "13098:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13075:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "13075:47:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13166:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13166:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "alpacaBeneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "13178:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "alpacaBeneficiaryBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "13197:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1286,
														"name": "LogSetAlpacaBeneficiaryConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "13136:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13136:82:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "EmitStatement",
												"src": "13131:87:4"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "12485:244:4",
										"text": "@notice Set alpacaBeneficiaryBps.\n @dev Must only be called by owner.\n @param _newAlpacaBeneficiary The new address to received ALPACA reinvest fee\n @param _newAlpacaBeneficiaryBps Fee from reinvesting ALPACA to positions."
									},
									"functionSelector": "b9059d73",
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1267,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1266,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "12853:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "12853:9:4"
										}
									],
									"name": "setAlpacaBeneficiaryConfig",
									"nameLocation": "12742:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "_newAlpacaBeneficiary",
												"nameLocation": "12777:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "12769:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12769:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "_newAlpacaBeneficiaryBps",
												"nameLocation": "12808:24:4",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "12800:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12800:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12768:65:4"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12866:0:4"
									},
									"scope": 1557,
									"src": "12733:491:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "13459:123:4",
										"statements": [
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1302,
														"name": "maxVaultPositionValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "13466:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1303,
														"name": "_maxVaultPositionValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "13490:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13466:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "13466:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13541:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13541:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "_maxVaultPositionValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "13553:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1306,
														"name": "LogSetValueLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "13524:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13524:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "EmitStatement",
												"src": "13519:57:4"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "13230:151:4",
										"text": "@notice Set position value limit.\n @dev Must only be called by owner.\n @param _maxVaultPositionValue Maximum vault size position value."
									},
									"functionSelector": "60bdf9e5",
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1300,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1299,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "13449:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "13449:9:4"
										}
									],
									"name": "setValueLimit",
									"nameLocation": "13394:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "_maxVaultPositionValue",
												"nameLocation": "13416:22:4",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "13408:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13408:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13407:32:4"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13459:0:4"
									},
									"scope": 1557,
									"src": "13385:197:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1734
									],
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "13799:108:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1321,
														"name": "_totalPositionValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "13810:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1322,
														"name": "maxVaultPositionValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "13832:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13810:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "IfStatement",
												"src": "13806:78:4",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "13855:29:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13871:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1320,
															"id": 1325,
															"nodeType": "Return",
															"src": "13864:12:4"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13897:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1320,
												"id": 1329,
												"nodeType": "Return",
												"src": "13890:11:4"
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "13588:118:4",
										"text": "@notice Return if vault can accept new position value.\n @param _totalPositionValue new vault position value."
									},
									"functionSelector": "35824061",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isVaultSizeAcceptable",
									"nameLocation": "13719:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_totalPositionValue",
												"nameLocation": "13749:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "13741:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13741:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13740:29:4"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "13793:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13793:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13792:6:4"
									},
									"scope": 1557,
									"src": "13710:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "14078:181:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1339,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "14089:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1340,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14089:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "14085:81:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1345,
															"name": "DeltaNeutralVaultConfig_InvalidSwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "14123:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14123:43:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1347,
													"nodeType": "RevertStatement",
													"src": "14116:50:4"
												}
											},
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1349,
														"name": "getSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "14173:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1350,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "14189:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14173:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "14173:27:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1354,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14229:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14229:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1356,
															"name": "_swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "14241:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1353,
														"name": "LogSetSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "14212:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14212:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "14207:46:4"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "13913:98:4",
										"text": "@dev Set the reinvest configuration.\n @param _swapRouter - The router address to update."
									},
									"functionSelector": "41273657",
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1336,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "14068:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "14068:9:4"
										}
									],
									"name": "setSwapRouter",
									"nameLocation": "14024:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "14046:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "14038:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14038:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14037:21:4"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14078:0:4"
									},
									"scope": 1557,
									"src": "14015:244:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "14437:293:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1369,
															"name": "_reinvestPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "14448:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14448:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "32",
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14471:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "14448:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "14444:88:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1373,
															"name": "DeltaNeutralVaultConfig_InvalidReinvestPathLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "14481:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14481:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1375,
													"nodeType": "RevertStatement",
													"src": "14474:58:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1377,
															"name": "_reinvestPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "14545:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1379,
														"indexExpression": {
															"hexValue": "30",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14559:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14545:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1380,
														"name": "alpacaToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "14565:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14545:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "14541:89:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1382,
															"name": "DeltaNeutralVaultConfig_InvalidReinvestPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "14585:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14585:45:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1384,
													"nodeType": "RevertStatement",
													"src": "14578:52:4"
												}
											},
											{
												"expression": {
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1386,
														"name": "reinvestPath",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "14639:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1387,
														"name": "_reinvestPath",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "14654:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"src": "14639:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "14639:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14698:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14698:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1393,
															"name": "_reinvestPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "14710:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														],
														"id": 1390,
														"name": "LogSetReinvestPath",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "14679:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address[] memory)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14679:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "EmitStatement",
												"src": "14674:50:4"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "14265:90:4",
										"text": "@dev Set the reinvest path.\n @param _reinvestPath - The reinvest path to update."
									},
									"functionSelector": "6155501b",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1366,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "14427:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "14427:9:4"
										}
									],
									"name": "setReinvestPath",
									"nameLocation": "14368:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "_reinvestPath",
												"nameLocation": "14403:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "14384:32:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1362,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14384:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1363,
													"nodeType": "ArrayTypeName",
													"src": "14384:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14383:34:4"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14437:0:4"
									},
									"scope": 1557,
									"src": "14359:371:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1747
									],
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "14839:32:4",
										"statements": [
											{
												"expression": {
													"id": 1404,
													"name": "reinvestPath",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 797,
													"src": "14853:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1403,
												"id": 1405,
												"nodeType": "Return",
												"src": "14846:19:4"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "14736:31:4",
										"text": "@dev Get the reinvest path."
									},
									"functionSelector": "f679eda1",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReinvestPath",
									"nameLocation": "14780:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14795:2:4"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "14821:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1400,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14821:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1401,
													"nodeType": "ArrayTypeName",
													"src": "14821:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14820:18:4"
									},
									"scope": 1557,
									"src": "14771:100:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1759
									],
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "14940:170:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15013:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15005:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15005:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15005:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1415,
																	"name": "_controller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "14980:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1414,
																"name": "IController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "14968:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IController_$1595_$",
																	"typeString": "type(contract IController)"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14968:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IController_$1595",
																"typeString": "contract IController"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalCredit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1566,
														"src": "14968:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14968:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "14968:48:4"
											},
											{
												"expression": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1424,
														"name": "controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "15025:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1425,
														"name": "_controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "15038:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15025:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "15025:24:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1429,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15080:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15080:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1431,
															"name": "_controller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "15092:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1428,
														"name": "LogSetController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "15063:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15063:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "EmitStatement",
												"src": "15058:46:4"
											}
										]
									},
									"functionSelector": "92eefe9b",
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1411,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "14930:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "14930:9:4"
										}
									],
									"name": "setController",
									"nameLocation": "14886:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_controller",
												"nameLocation": "14908:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "14900:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14900:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14899:21:4"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14940:0:4"
									},
									"scope": 1557,
									"src": "14877:233:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "15289:294:4",
										"statements": [
											{
												"expression": {
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1448,
														"name": "depositExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "15296:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1449,
														"name": "_depositExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "15314:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15296:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "15296:34:4"
											},
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1452,
														"name": "withdrawExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "15337:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1453,
														"name": "_withdrawExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "15356:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15337:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "15337:36:4"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1456,
														"name": "rebalanceExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "15380:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1457,
														"name": "_rebalanceExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "15400:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15380:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "15380:38:4"
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1460,
														"name": "reinvestExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "15425:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1461,
														"name": "_reinvestExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "15444:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15425:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "15425:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15490:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15490:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "_depositExecutor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "15502:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1468,
															"name": "_withdrawExecutor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "15520:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1469,
															"name": "_rebalanceExecutor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "15539:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1470,
															"name": "_reinvestExecutor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "15559:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1464,
														"name": "LogSetExecutor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "15475:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address,address,address)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15475:102:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "EmitStatement",
												"src": "15470:107:4"
											}
										]
									},
									"functionSelector": "b8e09260",
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1445,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "15279:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "15279:9:4"
										}
									],
									"name": "setExecutor",
									"nameLocation": "15125:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "_depositExecutor",
												"nameLocation": "15151:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "15143:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15143:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "_withdrawExecutor",
												"nameLocation": "15182:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "15174:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15174:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_rebalanceExecutor",
												"nameLocation": "15214:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "15206:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_reinvestExecutor",
												"nameLocation": "15247:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "15239:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15136:133:4"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15289:0:4"
									},
									"scope": 1557,
									"src": "15116:467:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1791
									],
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "15730:168:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1482,
																	"name": "_caller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "15751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1483,
																	"name": "depositExecutor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "15762:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15751:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1485,
																	"name": "_caller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "15788:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1486,
																	"name": "withdrawExecutor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "15799:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15788:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15751:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1489,
																"name": "_caller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "15826:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1490,
																"name": "rebalanceExecutor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "15837:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15826:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15751:103:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1493,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "15865:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1494,
															"name": "reinvestExecutor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "15876:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15865:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15751:141:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1481,
												"id": 1497,
												"nodeType": "Return",
												"src": "15737:155:4"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "15589:71:4",
										"text": "@notice Return if caller is executor.\n @param _caller caller."
									},
									"functionSelector": "debfda30",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExecutor",
									"nameLocation": "15673:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "15692:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "15684:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15684:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15683:17:4"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "15724:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15724:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15723:6:4"
									},
									"scope": 1557,
									"src": "15664:234:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "15987:133:4",
										"statements": [
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1508,
														"name": "swapFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "15994:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1509,
														"name": "_swapFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "16004:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15994:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "15994:18:4"
											},
											{
												"expression": {
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1512,
														"name": "swapFeeDenom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "16019:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1513,
														"name": "_swapFeeDenom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "16034:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16019:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "16019:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1517,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16078:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16078:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1519,
															"name": "_swapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "16090:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1520,
															"name": "_swapFeeDenom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "16100:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1516,
														"name": "LogSetSwapConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "16061:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16061:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "EmitStatement",
												"src": "16056:58:4"
											}
										]
									},
									"functionSelector": "6a5bf606",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1506,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1505,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "15977:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "15977:9:4"
										}
									],
									"name": "setSwapConfig",
									"nameLocation": "15913:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "_swapFee",
												"nameLocation": "15935:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "15927:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15927:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "_swapFeeDenom",
												"nameLocation": "15953:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "15945:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15945:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15926:41:4"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15987:0:4"
									},
									"scope": 1557,
									"src": "15904:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "16296:350:4",
										"statements": [
											{
												"expression": {
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1535,
														"name": "partialCloseMinimizeStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "16303:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1536,
														"name": "_partialCloseMinimizeStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "16334:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16303:60:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "16303:60:4"
											},
											{
												"expression": {
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1539,
														"name": "stableAddTwoSideStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "16370:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1540,
														"name": "_stableAddTwoSideStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "16397:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16370:52:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "16370:52:4"
											},
											{
												"expression": {
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1543,
														"name": "assetAddTwoSideStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "16429:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1544,
														"name": "_assetAddTwoSideStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "16455:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16429:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "16429:50:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1548,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16518:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16518:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1550,
															"name": "_partialCloseMinimizeStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "16537:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1551,
															"name": "_stableAddTwoSideStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "16575:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1552,
															"name": "_assetAddTwoSideStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "16609:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1547,
														"name": "LogSetStrategies",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "16493:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address,address)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16493:147:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "EmitStatement",
												"src": "16488:152:4"
											}
										]
									},
									"functionSelector": "d4f3949a",
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1533,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1532,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "16286:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "16286:9:4"
										}
									],
									"name": "setStrategies",
									"nameLocation": "16135:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "_partialCloseMinimizeStrategy",
												"nameLocation": "16163:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "16155:37:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16155:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "_stableAddTwoSideStrategy",
												"nameLocation": "16207:25:4",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "16199:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "_assetAddTwoSideStrategy",
												"nameLocation": "16247:24:4",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "16239:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16148:128:4"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16296:0:4"
									},
									"scope": 1557,
									"src": "16126:520:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1558,
							"src": "584:16065:4",
							"usedErrors": [
								717,
								725,
								729,
								731,
								733,
								735
							]
						}
					],
					"src": "246:16405:4"
				},
				"id": 4
			},
			"contracts/interfaces/IController.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IController.sol",
					"exportedSymbols": {
						"IController": [
							1595
						]
					},
					"id": 1596,
					"license": "BUSL",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1559,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "246:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IController",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1595,
							"linearizedBaseContracts": [
								1595
							],
							"name": "IController",
							"nameLocation": "283:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f220d16c",
									"id": 1566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalCredit",
									"nameLocation": "309:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "329:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "321:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:15:5"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "359:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:9:5"
									},
									"scope": 1595,
									"src": "300:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7bf962de",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "usedCredit",
									"nameLocation": "383:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "402:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "394:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:15:5"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "432:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:9:5"
									},
									"scope": 1595,
									"src": "374:67:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5886216f",
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "availableCredit",
									"nameLocation": "456:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:15:5"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "510:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:9:5"
									},
									"scope": 1595,
									"src": "447:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2bf9518c",
									"id": 1587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onDeposit",
									"nameLocation": "534:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "552:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "544:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "_shareAmount",
												"nameLocation": "567:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "559:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:37:5"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:0:5"
									},
									"scope": 1595,
									"src": "525:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ccad973d",
									"id": 1594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onWithdraw",
									"nameLocation": "605:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "624:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "616:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "_shareAmount",
												"nameLocation": "639:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "631:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:37:5"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:0:5"
									},
									"scope": 1595,
									"src": "596:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1596,
							"src": "273:392:5",
							"usedErrors": []
						}
					],
					"src": "246:421:5"
				},
				"id": 5
			},
			"contracts/interfaces/IDeltaNeutralVaultConfig02.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IDeltaNeutralVaultConfig02.sol",
					"exportedSymbols": {
						"IDeltaNeutralVaultConfig02": [
							1822
						]
					},
					"id": 1823,
					"license": "BUSL",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1597,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "246:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDeltaNeutralVaultConfig02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1822,
							"linearizedBaseContracts": [
								1822
							],
							"name": "IDeltaNeutralVaultConfig02",
							"nameLocation": "283:26:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ef3bac5e",
									"id": 1602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getWrappedNativeAddr",
									"nameLocation": "324:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:2:6"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "370:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:6"
									},
									"scope": 1822,
									"src": "315:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1783fa8",
									"id": 1607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getWNativeRelayer",
									"nameLocation": "394:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:2:6"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "437:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:9:6"
									},
									"scope": 1822,
									"src": "385:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "62969467",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceFactor",
									"nameLocation": "461:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:2:6"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "502:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:9:6"
									},
									"scope": 1822,
									"src": "452:59:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f9bfd907",
									"id": 1617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positionValueTolerance",
									"nameLocation": "526:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:2:6"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "574:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:9:6"
									},
									"scope": 1822,
									"src": "517:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64facdd5",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "debtRatioTolerance",
									"nameLocation": "598:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "616:2:6"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "642:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:9:6"
									},
									"scope": 1822,
									"src": "589:62:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "657:45:6",
										"text": "@dev Return if the caller is whitelisted."
									},
									"functionSelector": "ffc97ce9",
									"id": 1630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "whitelistedCallers",
									"nameLocation": "715:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "774:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "774:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:6:6"
									},
									"scope": 1822,
									"src": "706:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "786:45:6",
										"text": "@dev Return if the caller is whitelisted."
									},
									"functionSelector": "4f40e368",
									"id": 1638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "whitelistedRebalancers",
									"nameLocation": "844:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "875:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "867:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:17:6"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "907:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "907:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:6:6"
									},
									"scope": 1822,
									"src": "835:78:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "919:51:6",
										"text": "@dev Return if the caller is exempted from fee."
									},
									"functionSelector": "3924f233",
									"id": 1646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeExemptedCallers",
									"nameLocation": "983:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1010:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "1002:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:17:6"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "1037:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1037:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1036:6:6"
									},
									"scope": 1822,
									"src": "974:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "1049:32:6",
										"text": "@dev Get fairlaunch address."
									},
									"functionSelector": "5c23aed6",
									"id": 1652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fairLaunchAddr",
									"nameLocation": "1094:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:6"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "1134:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:6"
									},
									"scope": 1822,
									"src": "1085:58:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "1149:41:6",
										"text": "@dev Return the deposit fee treasury."
									},
									"functionSelector": "eea99787",
									"id": 1658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositFeeTreasury",
									"nameLocation": "1203:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:6"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "1247:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:6"
									},
									"scope": 1822,
									"src": "1194:62:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "1262:25:6",
										"text": "@dev Get deposit fee."
									},
									"functionSelector": "ab879827",
									"id": 1664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositFeeBps",
									"nameLocation": "1300:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1313:2:6"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "1339:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:9:6"
									},
									"scope": 1822,
									"src": "1291:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "1354:43:6",
										"text": "@dev Return the withdrawl fee treasury."
									},
									"functionSelector": "698d92cb",
									"id": 1670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalFeeTreasury",
									"nameLocation": "1410:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:2:6"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "1457:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1456:9:6"
									},
									"scope": 1822,
									"src": "1401:65:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "1472:28:6",
										"text": "@dev Get withdrawal fee."
									},
									"functionSelector": "04336bb3",
									"id": 1676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalFeeBps",
									"nameLocation": "1513:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1529:2:6"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1550:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:9:6"
									},
									"scope": 1822,
									"src": "1504:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "1565:39:6",
										"text": "@dev Return management fee treasury"
									},
									"functionSelector": "45b61b00",
									"id": 1682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "managementFeeTreasury",
									"nameLocation": "1617:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:2:6"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "1664:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:9:6"
									},
									"scope": 1822,
									"src": "1608:65:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "1679:39:6",
										"text": "@dev Return management fee per sec."
									},
									"functionSelector": "b192362a",
									"id": 1688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "managementFeePerSec",
									"nameLocation": "1731:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:2:6"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "1776:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:9:6"
									},
									"scope": 1822,
									"src": "1722:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "1791:28:6",
										"text": "@dev Get leverage level."
									},
									"functionSelector": "e592c5fa",
									"id": 1694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "leverageLevel",
									"nameLocation": "1832:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1845:2:6"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "1871:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1691,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1871:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:7:6"
									},
									"scope": 1822,
									"src": "1823:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "1884:45:6",
										"text": "@dev Return if the caller is whitelisted."
									},
									"functionSelector": "12440ccb",
									"id": 1702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "whitelistedReinvestors",
									"nameLocation": "1942:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1973:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "1965:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:17:6"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "2005:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2005:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2004:6:6"
									},
									"scope": 1822,
									"src": "1933:78:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "2017:45:6",
										"text": "@dev Return ALPACA reinvest fee treasury."
									},
									"functionSelector": "595d4ece",
									"id": 1708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "alpacaReinvestFeeTreasury",
									"nameLocation": "2075:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2100:2:6"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "2126:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2125:9:6"
									},
									"scope": 1822,
									"src": "2066:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "2141:34:6",
										"text": "@dev Return alpaca bounty bps."
									},
									"functionSelector": "956c9da0",
									"id": 1714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "alpacaBountyBps",
									"nameLocation": "2188:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2203:2:6"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "2229:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:9:6"
									},
									"scope": 1822,
									"src": "2179:59:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "2244:43:6",
										"text": "@dev Return ALPACA beneficiary address."
									},
									"functionSelector": "a361f404",
									"id": 1720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "alpacaBeneficiary",
									"nameLocation": "2300:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2317:2:6"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "2343:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:9:6"
									},
									"scope": 1822,
									"src": "2291:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "2358:39:6",
										"text": "@dev Return ALPACA beneficiary bps."
									},
									"functionSelector": "f52c6764",
									"id": 1726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "alpacaBeneficiaryBps",
									"nameLocation": "2410:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2430:2:6"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "2456:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2455:9:6"
									},
									"scope": 1822,
									"src": "2401:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "2471:65:6",
										"text": "@dev Return if delta neutral vault position value acceptable."
									},
									"functionSelector": "35824061",
									"id": 1734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isVaultSizeAcceptable",
									"nameLocation": "2549:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "_totalPositionValue",
												"nameLocation": "2579:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2571:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:29:6"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2623:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2623:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:6:6"
									},
									"scope": 1822,
									"src": "2540:89:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "2635:27:6",
										"text": "@dev Return swap router"
									},
									"functionSelector": "725c9c49",
									"id": 1740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSwapRouter",
									"nameLocation": "2675:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:2:6"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2714:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:9:6"
									},
									"scope": 1822,
									"src": "2666:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "2729:29:6",
										"text": "@dev Return reinvest path"
									},
									"functionSelector": "f679eda1",
									"id": 1747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReinvestPath",
									"nameLocation": "2771:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2786:2:6"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "2812:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1743,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2812:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1744,
													"nodeType": "ArrayTypeName",
													"src": "2812:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2811:18:6"
									},
									"scope": 1822,
									"src": "2762:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "2836:34:6",
										"text": "@dev Return controller address"
									},
									"functionSelector": "f77c4791",
									"id": 1753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "controller",
									"nameLocation": "2883:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2893:2:6"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2919:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2919:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:9:6"
									},
									"scope": 1822,
									"src": "2874:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "2934:29:6",
										"text": "@dev Set a new controller"
									},
									"functionSelector": "92eefe9b",
									"id": 1759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setController",
									"nameLocation": "2976:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "_controller",
												"nameLocation": "2998:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2990:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:21:6"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:0:6"
									},
									"scope": 1822,
									"src": "2967:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "3026:32:6",
										"text": "@dev Return deposit executor"
									},
									"functionSelector": "58d4c4ea",
									"id": 1765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositExecutor",
									"nameLocation": "3071:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3086:2:6"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "3112:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3111:9:6"
									},
									"scope": 1822,
									"src": "3062:59:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "3127:33:6",
										"text": "@dev Return withdraw executor"
									},
									"functionSelector": "235ec73d",
									"id": 1771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawExecutor",
									"nameLocation": "3173:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3189:2:6"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "3215:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3215:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3214:9:6"
									},
									"scope": 1822,
									"src": "3164:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "3230:34:6",
										"text": "@dev Return rebalance executor"
									},
									"functionSelector": "d77ab72d",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceExecutor",
									"nameLocation": "3277:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3294:2:6"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "3320:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3319:9:6"
									},
									"scope": 1822,
									"src": "3268:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "3335:33:6",
										"text": "@dev Return reinvest executor"
									},
									"functionSelector": "1c425a45",
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reinvestExecutor",
									"nameLocation": "3381:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3397:2:6"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "3423:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:9:6"
									},
									"scope": 1822,
									"src": "3372:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "3438:38:6",
										"text": "@dev Return if caller is executor."
									},
									"functionSelector": "debfda30",
									"id": 1791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isExecutor",
									"nameLocation": "3489:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "3508:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "3500:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:17:6"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "3540:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3540:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3539:6:6"
									},
									"scope": 1822,
									"src": "3480:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "3552:55:6",
										"text": "@dev Return Partial close minimize strategy address"
									},
									"functionSelector": "49b2045c",
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "partialCloseMinimizeStrategy",
									"nameLocation": "3620:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3648:2:6"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3674:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3673:9:6"
									},
									"scope": 1822,
									"src": "3611:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "3689:52:6",
										"text": "@dev Return Stable add two side strategy address"
									},
									"functionSelector": "79d37981",
									"id": 1803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stableAddTwoSideStrategy",
									"nameLocation": "3754:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:2:6"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "3804:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3803:9:6"
									},
									"scope": 1822,
									"src": "3745:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "3819:51:6",
										"text": "@dev Return Asset add two side strategy address"
									},
									"functionSelector": "0573f19c",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assetAddTwoSideStrategy",
									"nameLocation": "3883:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3906:2:6"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3932:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3931:9:6"
									},
									"scope": 1822,
									"src": "3874:67:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "3947:24:6",
										"text": "@dev Return swap fee"
									},
									"functionSelector": "54cf2aeb",
									"id": 1815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapFee",
									"nameLocation": "3984:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3991:2:6"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "4017:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:9:6"
									},
									"scope": 1822,
									"src": "3975:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "4032:30:6",
										"text": "@dev Return swap fee denom"
									},
									"functionSelector": "429e0971",
									"id": 1821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapFeeDenom",
									"nameLocation": "4075:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4087:2:6"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "4113:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4113:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4112:9:6"
									},
									"scope": 1822,
									"src": "4066:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1823,
							"src": "273:3852:6",
							"usedErrors": []
						}
					],
					"src": "246:3881:6"
				},
				"id": 6
			}
		}
	}
}