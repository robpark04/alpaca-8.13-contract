{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "DeltaNeutralVaultConfig_InvalidReinvestPath",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DeltaNeutralVaultConfig_InvalidReinvestPathLength",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DeltaNeutralVaultConfig_InvalidSwapRouter",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DeltaNeutralVaultConfig_LeverageLevelTooLow",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_bounty",
						"type": "uint256"
					}
				],
				"name": "DeltaNeutralVaultConfig_TooMuchBounty",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_depositFeeBps",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_withdrawalFeeBps",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_mangementFeeBps",
						"type": "uint256"
					}
				],
				"name": "DeltaNeutralVaultConfig_TooMuchFee",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_alpacaBeneficiary",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_alpacaBeneficiaryBps",
						"type": "uint256"
					}
				],
				"name": "LogSetAlpacaBeneficiaryConfig",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_alpacaReinvestTreasury",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_alpacaBountyBps",
						"type": "uint256"
					}
				],
				"name": "LogSetAlpacaBountyConfig",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_controller",
						"type": "address"
					}
				],
				"name": "LogSetController",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_depositExecutor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_withdrawExecutor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_rebalanceExecutor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_reinvestExecutor",
						"type": "address"
					}
				],
				"name": "LogSetExecutor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_ok",
						"type": "bool"
					}
				],
				"name": "LogSetFeeExemptedCallers",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_depositFeeTreasury",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_withdrawFeeTreasury",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_managementFeeTreasury",
						"type": "address"
					}
				],
				"name": "LogSetFeeTreasury",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_depositFeeBps",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_withdrawalFeeBps",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_managementFeePerSec",
						"type": "uint256"
					}
				],
				"name": "LogSetFees",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "_newLeverageLevel",
						"type": "uint8"
					}
				],
				"name": "LogSetLeverageLevel",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_getWrappedNativeAddr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_getWNativeRelayer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_fairLaunchAddr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_rebalanceFactor",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_positionValueTolerance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_debtRatioTolerance",
						"type": "uint256"
					}
				],
				"name": "LogSetParams",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "_reinvestPath",
						"type": "address[]"
					}
				],
				"name": "LogSetReinvestPath",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "partialCloseMinimizeStrategy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "stableAddTwoSideStrategy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "assetAddTwoSideStrategy",
						"type": "address"
					}
				],
				"name": "LogSetStrategies",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "swapFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "swapFeeDenom",
						"type": "uint256"
					}
				],
				"name": "LogSetSwapConfig",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_swapRouter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "source",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "destination",
						"type": "address"
					}
				],
				"name": "LogSetSwapRoute",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_swapRouter",
						"type": "address"
					}
				],
				"name": "LogSetSwapRouter",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_maxVaultPositionValue",
						"type": "uint256"
					}
				],
				"name": "LogSetValueLimit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_ok",
						"type": "bool"
					}
				],
				"name": "LogSetWhitelistedCallers",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_ok",
						"type": "bool"
					}
				],
				"name": "LogSetWhitelistedRebalancers",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_ok",
						"type": "bool"
					}
				],
				"name": "LogSetWhitelistedReinvestors",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "alpacaBeneficiary",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "alpacaBeneficiaryBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "alpacaBountyBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "alpacaReinvestFeeTreasury",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "alpacaToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "assetAddTwoSideStrategy",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "controller",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "debtRatioTolerance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositExecutor",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositFeeBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositFeeTreasury",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fairLaunchAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "feeExemptedCallers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getReinvestPath",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSwapRouter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWNativeRelayer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWrappedNativeAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_getWrappedNativeAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_getWNativeRelayer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_fairLaunchAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_rebalanceFactor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_positionValueTolerance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_debtRatioTolerance",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_depositFeeTreasury",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_managementFeeTreasury",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_withdrawFeeTreasury",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_alpacaToken",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_caller",
						"type": "address"
					}
				],
				"name": "isExecutor",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_totalPositionValue",
						"type": "uint256"
					}
				],
				"name": "isVaultSizeAcceptable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "leverageLevel",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "managementFeePerSec",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "managementFeeTreasury",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxVaultPositionValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "partialCloseMinimizeStrategy",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "positionValueTolerance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rebalanceExecutor",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rebalanceFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reinvestExecutor",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "reinvestPath",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newAlpacaBeneficiary",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_newAlpacaBeneficiaryBps",
						"type": "uint256"
					}
				],
				"name": "setAlpacaBeneficiaryConfig",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newAlpacaReinvestFeeTreasury",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_newAlpacaBountyBps",
						"type": "uint256"
					}
				],
				"name": "setAlpacaBountyConfig",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_controller",
						"type": "address"
					}
				],
				"name": "setController",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_depositExecutor",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_withdrawExecutor",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_rebalanceExecutor",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_reinvestExecutor",
						"type": "address"
					}
				],
				"name": "setExecutor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_callers",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "_ok",
						"type": "bool"
					}
				],
				"name": "setFeeExemptedCallers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newDepositFeeTreasury",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_newDepositFeeBps",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_newWithdrawalFeeTreasury",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_newWithdrawalFeeBps",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_newManagementFeeTreasury",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_newManagementFeePerSec",
						"type": "uint256"
					}
				],
				"name": "setFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_newLeverageLevel",
						"type": "uint8"
					}
				],
				"name": "setLeverageLevel",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_getWrappedNativeAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_getWNativeRelayer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_fairLaunchAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_rebalanceFactor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_positionValueTolerance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_debtRatioTolerance",
						"type": "uint256"
					}
				],
				"name": "setParams",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_reinvestPath",
						"type": "address[]"
					}
				],
				"name": "setReinvestPath",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_partialCloseMinimizeStrategy",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_stableAddTwoSideStrategy",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_assetAddTwoSideStrategy",
						"type": "address"
					}
				],
				"name": "setStrategies",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_swapFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_swapFeeDenom",
						"type": "uint256"
					}
				],
				"name": "setSwapConfig",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_swapRouter",
						"type": "address"
					}
				],
				"name": "setSwapRouter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_maxVaultPositionValue",
						"type": "uint256"
					}
				],
				"name": "setValueLimit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_callers",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "_ok",
						"type": "bool"
					}
				],
				"name": "setWhitelistedCallers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_callers",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "_ok",
						"type": "bool"
					}
				],
				"name": "setWhitelistedRebalancer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_callers",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "_ok",
						"type": "bool"
					}
				],
				"name": "setwhitelistedReinvestors",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stableAddTwoSideStrategy",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapFeeDenom",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whitelistedCallers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whitelistedRebalancers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whitelistedReinvestors",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawExecutor",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawalFeeBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawalFeeTreasury",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getReinvestPath()": {
					"details": "Get the reinvest path."
				},
				"isExecutor(address)": {
					"params": {
						"_caller": "caller."
					}
				},
				"isVaultSizeAcceptable(uint256)": {
					"params": {
						"_totalPositionValue": "new vault position value."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setAlpacaBeneficiaryConfig(address,uint256)": {
					"details": "Must only be called by owner.",
					"params": {
						"_newAlpacaBeneficiary": "The new address to received ALPACA reinvest fee",
						"_newAlpacaBeneficiaryBps": "Fee from reinvesting ALPACA to positions."
					}
				},
				"setAlpacaBountyConfig(address,uint256)": {
					"details": "Must only be called by owner.",
					"params": {
						"_newAlpacaBountyBps": "Fee from reinvesting ALPACA to positions.",
						"_newAlpacaReinvestFeeTreasury": "The new address to received ALPACA reinvest fee"
					}
				},
				"setController(address)": {
					"details": "Set a new controller"
				},
				"setFeeExemptedCallers(address[],bool)": {
					"details": "Must only be called by owner.",
					"params": {
						"_callers": "addresses to be exempted.",
						"_ok": "The new ok flag for callers."
					}
				},
				"setFees(address,uint256,address,uint256,address,uint256)": {
					"details": "Must only be called by owner.",
					"params": {
						"_newDepositFeeBps": "Fee when user deposit to delta neutral vault.",
						"_newManagementFeePerSec": "Mangement Fee per second.",
						"_newWithdrawalFeeBps": "Fee when user deposit to delta neutral vault."
					}
				},
				"setLeverageLevel(uint8)": {
					"details": "Must only be called by owner.",
					"params": {
						"_newLeverageLevel": "The new leverage level to be set. Must be >= 3"
					}
				},
				"setReinvestPath(address[])": {
					"details": "Set the reinvest path.",
					"params": {
						"_reinvestPath": "- The reinvest path to update."
					}
				},
				"setSwapRouter(address)": {
					"details": "Set the reinvest configuration.",
					"params": {
						"_swapRouter": "- The router address to update."
					}
				},
				"setValueLimit(uint256)": {
					"details": "Must only be called by owner.",
					"params": {
						"_maxVaultPositionValue": "Maximum vault size position value."
					}
				},
				"setWhitelistedCallers(address[],bool)": {
					"details": "Must only be called by owner.",
					"params": {
						"_callers": "addresses to be whitelisted.",
						"_ok": "The new ok flag for callers."
					}
				},
				"setWhitelistedRebalancer(address[],bool)": {
					"details": "Must only be called by owner.",
					"params": {
						"_callers": "addresses to be whitelisted.",
						"_ok": "The new ok flag for callers."
					}
				},
				"setwhitelistedReinvestors(address[],bool)": {
					"details": "Must only be called by owner.",
					"params": {
						"_callers": "addresses to be whitelisted.",
						"_ok": "The new ok flag for callers."
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"stateVariables": {
				"alpacaBeneficiary": {
					"details": "Return ALPACA beneficiary address."
				},
				"alpacaBeneficiaryBps": {
					"details": "Return ALPACA beneficiary bps."
				},
				"alpacaBountyBps": {
					"details": "Return alpaca bounty bps."
				},
				"alpacaReinvestFeeTreasury": {
					"details": "Return ALPACA reinvest fee treasury."
				},
				"assetAddTwoSideStrategy": {
					"details": "Return Asset add two side strategy address"
				},
				"controller": {
					"details": "Return controller address"
				},
				"depositFeeBps": {
					"details": "Get deposit fee."
				},
				"depositFeeTreasury": {
					"details": "Return the deposit fee treasury."
				},
				"fairLaunchAddr": {
					"details": "Get fairlaunch address."
				},
				"feeExemptedCallers": {
					"details": "Return if the caller is exempted from fee."
				},
				"getSwapRouter": {
					"details": "Return swap router"
				},
				"leverageLevel": {
					"details": "Get leverage level."
				},
				"managementFeePerSec": {
					"details": "Return management fee per sec."
				},
				"managementFeeTreasury": {
					"details": "Return management fee treasury"
				},
				"rebalanceExecutor": {
					"details": "Return rebalance executor"
				},
				"reinvestExecutor": {
					"details": "Return reinvest executor"
				},
				"stableAddTwoSideStrategy": {
					"details": "Return Stable add two side strategy address"
				},
				"swapFeeDenom": {
					"details": "Return swap fee denom"
				},
				"whitelistedCallers": {
					"details": "Return if the caller is whitelisted."
				},
				"whitelistedRebalancers": {
					"details": "Return if the caller is whitelisted."
				},
				"whitelistedReinvestors": {
					"details": "Return if the caller is whitelisted."
				},
				"withdrawExecutor": {
					"details": "Return withdraw executor"
				},
				"withdrawalFeeBps": {
					"details": "Get withdrawal fee."
				},
				"withdrawalFeeTreasury": {
					"details": "Return the withdrawl fee treasury."
				}
			},
			"title": "DeltaNeutralVaultConfig02 - A place where you can find all delta neutral vault config",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"depositExecutor()": {
					"notice": "Executor"
				},
				"isExecutor(address)": {
					"notice": "Return if caller is executor."
				},
				"isVaultSizeAcceptable(uint256)": {
					"notice": "Return if vault can accept new position value."
				},
				"partialCloseMinimizeStrategy()": {
					"notice": "Strategies"
				},
				"setAlpacaBeneficiaryConfig(address,uint256)": {
					"notice": "Set alpacaBeneficiaryBps."
				},
				"setAlpacaBountyConfig(address,uint256)": {
					"notice": "Set alpacaBountyBps."
				},
				"setFeeExemptedCallers(address[],bool)": {
					"notice": "Set exempted fee callers."
				},
				"setFees(address,uint256,address,uint256,address,uint256)": {
					"notice": "Set fees."
				},
				"setLeverageLevel(uint8)": {
					"notice": "Set leverage level."
				},
				"setValueLimit(uint256)": {
					"notice": "Set position value limit."
				},
				"setWhitelistedCallers(address[],bool)": {
					"notice": "Set whitelisted callers."
				},
				"setWhitelistedRebalancer(address[],bool)": {
					"notice": "Set whitelisted rebalancers."
				},
				"setwhitelistedReinvestors(address[],bool)": {
					"notice": "Set whitelisted reinvestors."
				},
				"swapFee()": {
					"notice": "swap config"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/DeltaNeutralVaultConfig02.sol": "DeltaNeutralVaultConfig02"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
			"license": "MIT",
			"urls": [
				"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
				"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba",
			"license": "MIT",
			"urls": [
				"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8",
				"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
			"license": "MIT",
			"urls": [
				"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
				"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
				"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
			]
		},
		"contracts/DeltaNeutralVaultConfig02.sol": {
			"keccak256": "0xdd145f308de7ded23e87dc3546e5f7749e06aa69f1691d45ab7ebb12f599697a",
			"license": "BUSL",
			"urls": [
				"bzz-raw://ef37c8a76e0c1d366a6b9c1f4eccf640900c04e2f933e9e13d3d901bd6abd7f4",
				"dweb:/ipfs/QmQxTAq3j3Cga1zpP8oLEMvezwFLaiMRXLffX9DcSJcZxG"
			]
		},
		"contracts/interfaces/IController.sol": {
			"keccak256": "0xdcd8f39506df604368de782ed7ecad1fcadd8523f76c2e8cca58b1dd21eabd5f",
			"license": "BUSL",
			"urls": [
				"bzz-raw://5fe146acbff19195b5bb5233de9474e9ba54fc67072c96b860f806c38068d53d",
				"dweb:/ipfs/QmcRdVgR3xPHzxntZw7wFTYoJS2Gtv8jHM3t4j5AYvMXkh"
			]
		},
		"contracts/interfaces/IDeltaNeutralVaultConfig02.sol": {
			"keccak256": "0x14fc39a7a0d75c584d2a6f50ae5a084dd84d30b988b5c288c6b99a543a444638",
			"license": "BUSL",
			"urls": [
				"bzz-raw://c58bd273ec39a7e7f809f4ecdce1e67e70093c01819d1c7453539cc6b60bf86f",
				"dweb:/ipfs/QmQ47QM9tMnhmFXsVLuZvvd1bb7MRYKgHjRyKxwCQK4s8m"
			]
		}
	},
	"version": 1
}